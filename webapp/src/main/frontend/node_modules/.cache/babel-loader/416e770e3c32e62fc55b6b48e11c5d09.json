{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport get from 'lodash/get';\nimport { useFormValues } from './useFormValues';\n/**\n * Get the current (edited) value of the record from the form and pass it\n * to a child function\n *\n * @example\n *\n * const PostEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm<FieldValues>>\n *             <BooleanInput source=\"hasEmail\" />\n *             <FormDataConsumer>\n *                 {({ formData, ...rest }) => formData.hasEmail &&\n *                      <TextInput source=\"email\" {...rest} />\n *                 }\n *             </FormDataConsumer>\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * @example\n *\n * const OrderEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <SelectInput source=\"country\" choices={countries} />\n *             <FormDataConsumer<FieldValues>>\n *                 {({ formData, ...rest }) =>\n *                      <SelectInput\n *                          source=\"city\"\n *                          choices={getCitiesFor(formData.country)}\n *                          {...rest}\n *                      />\n *                 }\n *             </FormDataConsumer>\n *         </SimpleForm>\n *     </Edit>\n * );\n */\nvar FormDataConsumer = function (props) {\n  var form = useFormContext();\n  var\n  // Don't know exactly why, but this is needed for the form values to be updated\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  isDirty = form.formState.isDirty;\n  var formData = useFormValues();\n  return React.createElement(FormDataConsumerView, __assign({\n    formData: formData\n  }, props));\n};\nexport var FormDataConsumerView = function (props) {\n  var children = props.children,\n    form = props.form,\n    formData = props.formData,\n    source = props.source,\n    index = props.index,\n    rest = __rest(props, [\"children\", \"form\", \"formData\", \"source\", \"index\"]);\n  var ret;\n  // If we have an index, we are in an iterator like component (such as the SimpleFormIterator)\n  if (typeof index !== 'undefined' && source) {\n    var scopedFormData = get(formData, source);\n    var getSource = function (scopedSource) {\n      return \"\".concat(source, \".\").concat(scopedSource);\n    };\n    ret = children(__assign({\n      formData: formData,\n      scopedFormData: scopedFormData,\n      getSource: getSource\n    }, rest));\n  } else {\n    ret = children(__assign({\n      formData: formData,\n      getSource: function (scopedSource) {\n        return scopedSource;\n      }\n    }, rest));\n  }\n  return ret === undefined ? null : ret;\n};\nexport default FormDataConsumer;","map":{"version":3,"names":["React","useFormContext","get","useFormValues","FormDataConsumer","props","form","isDirty","formState","formData","createElement","FormDataConsumerView","__assign","children","source","index","rest","__rest","ret","scopedFormData","getSource","scopedSource","concat","undefined"],"sources":["../../../src/form/FormDataConsumer.tsx"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,cAAc,QAAqB,iBAAiB;AAC7D,OAAOC,GAAG,MAAM,YAAY;AAC5B,SAASC,aAAa,QAAQ,iBAAiB;AAE/C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,IAAMC,gBAAgB,GAAG,SAAAA,CACrBC,KAAmC;EAEnC,IAAMC,IAAI,GAAGL,cAAc,EAAgB;EAKnC;EAFA;EACA;EACAM,OAAO,GAEXD,IAAI,CAAAE,SAAA,CAAAD,OAFO;EAGf,IAAME,QAAQ,GAAGN,aAAa,EAAgB;EAC9C,OACIH,KAAA,CAAAU,aAAA,CAACC,oBAAoB,EAAAC,QAAA;IAAeH,QAAQ,EAAEA;EAAQ,GAAMJ,KAAK,EAAI;AAE7E,CAAC;AAED,OAAO,IAAMM,oBAAoB,GAAG,SAAAA,CAGhCN,KAA0B;EAElB,IAAAQ,QAAQ,GAA6CR,KAAK,CAAAQ,QAAlD;IAAEP,IAAI,GAAuCD,KAAK,CAAAC,IAA5C;IAAEG,QAAQ,GAA6BJ,KAAK,CAAAI,QAAlC;IAAEK,MAAM,GAAqBT,KAAK,CAAAS,MAA1B;IAAEC,KAAK,GAAcV,KAAK,CAAAU,KAAnB;IAAKC,IAAI,GAAAC,MAAA,CAAKZ,KAAK,EAA5D,mDAAoD,CAAF;EACxD,IAAIa,GAAG;EAEP;EACA,IAAI,OAAOH,KAAK,KAAK,WAAW,IAAID,MAAM,EAAE;IACxC,IAAMK,cAAc,GAAGjB,GAAG,CAACO,QAAQ,EAAEK,MAAM,CAAC;IAC5C,IAAMM,SAAS,GAAG,SAAAA,CAACC,YAAoB;MAAK,UAAAC,MAAA,CAAGR,MAAM,OAAAQ,MAAA,CAAID,YAAY,CAAE;IAA3B,CAA2B;IACvEH,GAAG,GAAGL,QAAQ,CAAAD,QAAA;MAAGH,QAAQ,EAAAA,QAAA;MAAEU,cAAc,EAAAA,cAAA;MAAEC,SAAS,EAAAA;IAAA,GAAKJ,IAAI,EAAG;GACnE,MAAM;IACHE,GAAG,GAAGL,QAAQ,CAAAD,QAAA;MACVH,QAAQ,EAAAA,QAAA;MACRW,SAAS,EAAE,SAAAA,CAACC,YAAoB;QAAK,OAAAA,YAAY;MAAZ;IAAY,GAC9CL,IAAI,EACT;;EAGN,OAAOE,GAAG,KAAKK,SAAS,GAAG,IAAI,GAAGL,GAAG;AACzC,CAAC;AAED,eAAed,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module"}