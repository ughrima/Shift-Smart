{"ast":null,"code":"import { createContext } from 'react';\n/**\n * Context to store the pagination callbacks from the useInfiniteListController() result.\n *\n * Use the useInfinitePaginationContext() hook to read the pagination callbacks.\n *\n * @typedef {Object} InfinitePaginationContextValue\n * @prop {Function} fetchNextPage a callback to fetch the next page\n * @prop {Function} fetchPreviousPage a callback to fetch the previous page\n\n * @example\n *\n * import { useListController, ListPaginationContext } from 'ra-core';\n *\n * const List = props => {\n *     const { fetchNextPage, fetchPreviousPage } = useInfiniteListController(props);\n *     return (\n *         <InfinitePaginationContext.Provider value={{ fetchNextPage, fetchPreviousPage }}>\n *             ...\n *         </InfinitePaginationContext.Provider>\n *     );\n * };\n */\nexport var InfinitePaginationContext = createContext({\n  hasNextPage: null,\n  fetchNextPage: null,\n  isFetchingNextPage: null,\n  hasPreviousPage: null,\n  fetchPreviousPage: null,\n  isFetchingPreviousPage: null\n});\nInfinitePaginationContext.displayName = 'InfinitePaginationContext';","map":{"version":3,"names":["createContext","InfinitePaginationContext","hasNextPage","fetchNextPage","isFetchingNextPage","hasPreviousPage","fetchPreviousPage","isFetchingPreviousPage","displayName"],"sources":["../../../../src/controller/list/InfinitePaginationContext.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,aAAa,QAAQ,OAAO;AAGrC;;;;;;;;;;;;;;;;;;;;;;AAsBA,OAAO,IAAMC,yBAAyB,GAAGD,aAAa,CAEpD;EACEE,WAAW,EAAE,IAAI;EACjBC,aAAa,EAAE,IAAI;EACnBC,kBAAkB,EAAE,IAAI;EACxBC,eAAe,EAAE,IAAI;EACrBC,iBAAiB,EAAE,IAAI;EACvBC,sBAAsB,EAAE;CAC3B,CAAC;AAEFN,yBAAyB,CAACO,WAAW,GAAG,2BAA2B","ignoreList":[]},"metadata":{},"sourceType":"module"}