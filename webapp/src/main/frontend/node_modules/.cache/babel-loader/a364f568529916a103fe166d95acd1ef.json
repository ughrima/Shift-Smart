{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport get from 'lodash/get';\nimport { ListContextProvider, useRecordContext, useList } from 'ra-core';\nimport { fieldPropTypes } from './types';\nimport { genericMemo } from './genericMemo';\n/**\n * Renders an embedded array of objects.\n *\n * ArrayField creates a ListContext with the field value, and renders its children components -\n * usually iterator components like Datagrid, SingleFieldList, or SimpleList.\n *\n * @example // Display all the tags of the current post as `<Chip>` components\n * // const post = {\n * //   id: 123\n * //   tags: [\n * //     { name: 'foo' },\n * //     { name: 'bar' }\n * //   ]\n * // };\n * const PostShow = () => (\n *    <Show>\n *       <SimpleShowLayout>\n *           <ArrayField source=\"tags\">\n *               <SingleFieldList>\n *                   <ChipField source=\"name\" />\n *               </SingleFieldList>\n *           </ArrayField>\n *      </SimpleShowLayout>\n *   </Show>\n * );\n *\n * @example // Display all the backlinks of the current post as a `<Datagrid>`\n * // const post = {\n * //   id: 123\n * //   backlinks: [\n * //       {\n * //           uuid: '34fdf393-f449-4b04-a423-38ad02ae159e',\n * //           date: '2012-08-10T00:00:00.000Z',\n * //           url: 'http://example.com/foo/bar.html',\n * //       },\n * //       {\n * //           uuid: 'd907743a-253d-4ec1-8329-404d4c5e6cf1',\n * //           date: '2012-08-14T00:00:00.000Z',\n * //           url: 'https://blog.johndoe.com/2012/08/12/foobar.html',\n * //       }\n * //    ]\n * // };\n * <ArrayField source=\"backlinks\">\n *     <Datagrid>\n *         <DateField source=\"date\" />\n *         <UrlField source=\"url\" />\n *     </Datagrid>\n * </ArrayField>\n *\n * @example // If you need to render a collection of strings, it's often simpler to write your own component\n * const TagsField = () => {\n *     const record = useRecordContext();\n *     return (\n *         <ul>\n *             {record.tags.map(item => (\n *                 <li key={item.name}>{item.name}</li>\n *             ))}\n *         </ul>\n *     );\n * };\n *\n * @see useListContext\n */\nvar ArrayFieldImpl = function (props) {\n  var children = props.children,\n    resource = props.resource,\n    source = props.source,\n    perPage = props.perPage,\n    sort = props.sort,\n    filter = props.filter;\n  var record = useRecordContext(props);\n  var data = get(record, source, emptyArray) || emptyArray;\n  var listContext = useList({\n    data: data,\n    resource: resource,\n    perPage: perPage,\n    sort: sort,\n    filter: filter\n  });\n  return React.createElement(ListContextProvider, {\n    value: listContext\n  }, children);\n};\nArrayFieldImpl.propTypes = __assign({}, fieldPropTypes);\nArrayFieldImpl.displayName = 'ArrayFieldImpl';\nexport var ArrayField = genericMemo(ArrayFieldImpl);\nvar emptyArray = [];","map":{"version":3,"names":["React","get","ListContextProvider","useRecordContext","useList","fieldPropTypes","genericMemo","ArrayFieldImpl","props","children","resource","source","perPage","sort","filter","record","data","emptyArray","listContext","createElement","value","propTypes","__assign","displayName","ArrayField"],"sources":["../../../src/field/ArrayField.tsx"],"sourcesContent":[null],"mappings":";;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,OAAOC,GAAG,MAAM,YAAY;AAC5B,SACIC,mBAAmB,EACnBC,gBAAgB,EAChBC,OAAO,QAGJ,SAAS;AAEhB,SAAqBC,cAAc,QAAQ,SAAS;AACpD,SAASC,WAAW,QAAQ,eAAe;AAE3C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA,IAAMC,cAAc,GAAG,SAAAA,CAGnBC,KAAkC;EAE1B,IAAAC,QAAQ,GAA8CD,KAAK,CAAAC,QAAnD;IAAEC,QAAQ,GAAoCF,KAAK,CAAAE,QAAzC;IAAEC,MAAM,GAA4BH,KAAK,CAAAG,MAAjC;IAAEC,OAAO,GAAmBJ,KAAK,CAAAI,OAAxB;IAAEC,IAAI,GAAaL,KAAK,CAAAK,IAAlB;IAAEC,MAAM,GAAKN,KAAK,CAAAM,MAAV;EACzD,IAAMC,MAAM,GAAGZ,gBAAgB,CAACK,KAAK,CAAC;EACtC,IAAMQ,IAAI,GACLf,GAAG,CAACc,MAAM,EAAEJ,MAAM,EAAEM,UAAU,CAA2B,IAC1DA,UAAU;EACd,IAAMC,WAAW,GAAGd,OAAO,CAAC;IAAEY,IAAI,EAAAA,IAAA;IAAEN,QAAQ,EAAAA,QAAA;IAAEE,OAAO,EAAAA,OAAA;IAAEC,IAAI,EAAAA,IAAA;IAAEC,MAAM,EAAAA;EAAA,CAAE,CAAC;EACtE,OACId,KAAA,CAAAmB,aAAA,CAACjB,mBAAmB;IAACkB,KAAK,EAAEF;EAAW,GAClCT,QAAQ,CACS;AAE9B,CAAC;AACDF,cAAc,CAACc,SAAS,GAAAC,QAAA,KAAQjB,cAAc,CAAE;AAChDE,cAAc,CAACgB,WAAW,GAAG,gBAAgB;AAE7C,OAAO,IAAMC,UAAU,GAAGlB,WAAW,CAACC,cAAc,CAAC;AAWrD,IAAMU,UAAU,GAAG,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module"}