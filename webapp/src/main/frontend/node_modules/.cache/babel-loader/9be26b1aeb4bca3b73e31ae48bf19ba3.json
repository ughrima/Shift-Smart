{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListBase } from 'ra-core';\nimport { TitlePropType } from '../layout/Title';\nimport { ListView } from './ListView';\n/**\n * List page component\n *\n * The <List> component renders the list layout (title, buttons, filters, pagination),\n * and fetches the list of records from the REST API.\n *\n * It then delegates the rendering of the list of records to its child component.\n * Usually, it's a <Datagrid>, responsible for displaying a table with one row for each post.\n *\n * The <List> component accepts the following props:\n *\n * - actions\n * - aside: Side Component\n * - children: List Layout\n * - component\n * - disableAuthentication\n * - disableSyncWithLocation\n * - empty: Empty Page Component\n * - emptyWhileLoading\n * - exporter\n * - filters: Filter Inputs\n * - filter: Permanent Filter\n * - filterDefaultValues\n * - pagination: Pagination Component\n * - perPage: Pagination Size\n * - queryOptions\n * - sort: Default Sort Field & Order\n * - title\n * - sx: CSS API\n *\n * @example\n * const postFilters = [\n *     <TextInput label=\"Search\" source=\"q\" alwaysOn />,\n *     <TextInput label=\"Title\" source=\"title\" />\n * ];\n * export const PostList = () => (\n *     <List\n *         title=\"List of posts\"\n *         sort={{ field: 'published_at' }}\n *         filter={{ is_published: true }}\n *         filters={postFilters}\n *     >\n *         <Datagrid>\n *             <TextField source=\"id\" />\n *             <TextField source=\"title\" />\n *             <EditButton />\n *         </Datagrid>\n *     </List>\n * );\n */\nexport var List = function (_a) {\n  var debounce = _a.debounce,\n    disableAuthentication = _a.disableAuthentication,\n    disableSyncWithLocation = _a.disableSyncWithLocation,\n    exporter = _a.exporter,\n    _b = _a.filter,\n    filter = _b === void 0 ? defaultFilter : _b,\n    filterDefaultValues = _a.filterDefaultValues,\n    _c = _a.perPage,\n    perPage = _c === void 0 ? 10 : _c,\n    queryOptions = _a.queryOptions,\n    resource = _a.resource,\n    sort = _a.sort,\n    storeKey = _a.storeKey,\n    rest = __rest(_a, [\"debounce\", \"disableAuthentication\", \"disableSyncWithLocation\", \"exporter\", \"filter\", \"filterDefaultValues\", \"perPage\", \"queryOptions\", \"resource\", \"sort\", \"storeKey\"]);\n  return React.createElement(ListBase, {\n    debounce: debounce,\n    disableAuthentication: disableAuthentication,\n    disableSyncWithLocation: disableSyncWithLocation,\n    exporter: exporter,\n    filter: filter,\n    filterDefaultValues: filterDefaultValues,\n    perPage: perPage,\n    queryOptions: queryOptions,\n    resource: resource,\n    sort: sort,\n    storeKey: storeKey\n  }, React.createElement(ListView, __assign({}, rest)));\n};\nList.propTypes = {\n  // the props you can change\n  // @ts-ignore-line\n  actions: PropTypes.oneOfType([PropTypes.bool, PropTypes.element]),\n  aside: PropTypes.element,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  emptyWhileLoading: PropTypes.bool,\n  filter: PropTypes.object,\n  filterDefaultValues: PropTypes.object,\n  filters: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)]),\n  // @ts-ignore-line\n  pagination: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\n  perPage: PropTypes.number,\n  //@ts-ignore-line\n  sort: PropTypes.shape({\n    field: PropTypes.string,\n    order: PropTypes.oneOf(['ASC', 'DESC'])\n  }),\n  sx: PropTypes.any,\n  title: TitlePropType,\n  // the props managed by react-admin\n  disableSyncWithLocation: PropTypes.bool,\n  hasCreate: PropTypes.bool,\n  resource: PropTypes.string\n};\nvar defaultFilter = {};","map":{"version":3,"names":["React","PropTypes","ListBase","TitlePropType","ListView","List","_a","debounce","disableAuthentication","disableSyncWithLocation","exporter","_b","filter","defaultFilter","filterDefaultValues","_c","perPage","queryOptions","resource","sort","storeKey","rest","__rest","createElement","__assign","propTypes","actions","oneOfType","bool","element","aside","children","node","isRequired","className","string","emptyWhileLoading","object","filters","arrayOf","pagination","number","shape","field","order","oneOf","sx","any","title","hasCreate"],"sources":["../../../src/list/List.tsx"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}