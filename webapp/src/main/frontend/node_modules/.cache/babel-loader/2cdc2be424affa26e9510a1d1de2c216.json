{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { alpha, styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport ActionUpdate from '@mui/icons-material/Update';\nimport { useRefresh, useNotify, useResourceContext, useRecordContext, useUpdate } from 'ra-core';\nimport { Button } from './Button';\nexport var UpdateWithUndoButton = function (props) {\n  var record = useRecordContext(props);\n  var notify = useNotify();\n  var resource = useResourceContext(props);\n  var refresh = useRefresh();\n  var data = props.data,\n    _a = props.label,\n    label = _a === void 0 ? 'ra.action.update' : _a,\n    _b = props.icon,\n    icon = _b === void 0 ? defaultIcon : _b,\n    onClick = props.onClick,\n    _c = props.mutationOptions,\n    mutationOptions = _c === void 0 ? {} : _c,\n    rest = __rest(props, [\"data\", \"label\", \"icon\", \"onClick\", \"mutationOptions\"]);\n  var _d = useUpdate(),\n    updateMany = _d[0],\n    isLoading = _d[1].isLoading;\n  var mutationMeta = mutationOptions.meta,\n    _e = mutationOptions.onSuccess,\n    onSuccess = _e === void 0 ? function () {\n      notify('ra.notification.updated', {\n        type: 'info',\n        messageArgs: {\n          smart_count: 1\n        },\n        undoable: true\n      });\n    } : _e,\n    _f = mutationOptions.onError,\n    onError = _f === void 0 ? function (error) {\n      notify(typeof error === 'string' ? error : error.message || 'ra.notification.http_error', {\n        type: 'error',\n        messageArgs: {\n          _: typeof error === 'string' ? error : error && error.message ? error.message : undefined\n        }\n      });\n      refresh();\n    } : _f,\n    otherMutationOptions = __rest(mutationOptions, [\"meta\", \"onSuccess\", \"onError\"]);\n  var handleClick = function (e) {\n    updateMany(resource, {\n      id: record.id,\n      data: data,\n      meta: mutationMeta,\n      previousData: record\n    }, __assign({\n      onSuccess: onSuccess,\n      onError: onError,\n      mutationMode: 'undoable'\n    }, otherMutationOptions));\n    if (typeof onClick === 'function') {\n      onClick(e);\n    }\n    e.stopPropagation();\n  };\n  return React.createElement(StyledButton, __assign({\n    onClick: handleClick,\n    label: label,\n    disabled: isLoading\n  }, sanitizeRestProps(rest)), icon);\n};\nvar defaultIcon = React.createElement(ActionUpdate, null);\nvar sanitizeRestProps = function (_a) {\n  var filterValues = _a.filterValues,\n    label = _a.label,\n    selectedIds = _a.selectedIds,\n    rest = __rest(_a, [\"filterValues\", \"label\", \"selectedIds\"]);\n  return rest;\n};\nUpdateWithUndoButton.propTypes = {\n  label: PropTypes.string,\n  resource: PropTypes.string,\n  record: PropTypes.object,\n  icon: PropTypes.element,\n  data: PropTypes.any.isRequired\n};\nvar PREFIX = 'RaUpdateWithUndoButton';\nvar StyledButton = styled(Button, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var theme = _a.theme;\n  return {\n    color: theme.palette.primary.main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.primary.main, 0.12),\n      // Reset on mouse devices\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  };\n});","map":{"version":3,"names":["React","alpha","styled","PropTypes","ActionUpdate","useRefresh","useNotify","useResourceContext","useRecordContext","useUpdate","Button","UpdateWithUndoButton","props","record","notify","resource","refresh","data","_a","label","_b","icon","defaultIcon","onClick","_c","mutationOptions","rest","__rest","_d","updateMany","isLoading","mutationMeta","meta","_e","onSuccess","type","messageArgs","smart_count","undoable","_f","onError","error","message","_","undefined","otherMutationOptions","handleClick","e","id","previousData","__assign","mutationMode","stopPropagation","createElement","StyledButton","disabled","sanitizeRestProps","filterValues","selectedIds","propTypes","string","object","element","any","isRequired","PREFIX","name","overridesResolver","styles","root","theme","color","palette","primary","main","backgroundColor"],"sources":["../../../src/button/UpdateWithUndoButton.tsx"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}