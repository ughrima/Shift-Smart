{"ast":null,"code":"import * as React from 'react';\nimport { memo } from 'react';\nimport { useTranslateLabel } from '../i18n';\nexport var FieldTitle = function (props) {\n  var source = props.source,\n    label = props.label,\n    resource = props.resource,\n    isRequired = props.isRequired;\n  var translateLabel = useTranslateLabel();\n  if (label === true) {\n    throw new Error('Label parameter must be a string, a ReactElement or false');\n  }\n  if (label === false || label === '') {\n    return null;\n  }\n  if (label && typeof label !== 'string') {\n    return label;\n  }\n  return React.createElement(\"span\", null, translateLabel({\n    label: label,\n    resource: resource,\n    source: source\n  }), isRequired && React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\u2009*\"));\n};\n// What? TypeScript loses the displayName if we don't set it explicitly\nFieldTitle.displayName = 'FieldTitle';\nexport default memo(FieldTitle);","map":{"version":3,"names":["React","memo","useTranslateLabel","FieldTitle","props","source","label","resource","isRequired","translateLabel","Error","createElement","displayName"],"sources":["../../../src/util/FieldTitle.tsx"],"sourcesContent":[null],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAuBC,IAAI,QAAQ,OAAO;AAE1C,SAASC,iBAAiB,QAAQ,SAAS;AAS3C,OAAO,IAAMC,UAAU,GAAG,SAAAA,CAACC,KAAsB;EACrC,IAAAC,MAAM,GAAkCD,KAAK,CAAAC,MAAvC;IAAEC,KAAK,GAA2BF,KAAK,CAAAE,KAAhC;IAAEC,QAAQ,GAAiBH,KAAK,CAAAG,QAAtB;IAAEC,UAAU,GAAKJ,KAAK,CAAAI,UAAV;EAC3C,IAAMC,cAAc,GAAGP,iBAAiB,EAAE;EAE1C,IAAII,KAAK,KAAK,IAAI,EAAE;IAChB,MAAM,IAAII,KAAK,CACX,2DAA2D,CAC9D;;EAGL,IAAIJ,KAAK,KAAK,KAAK,IAAIA,KAAK,KAAK,EAAE,EAAE;IACjC,OAAO,IAAI;;EAGf,IAAIA,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IACpC,OAAOA,KAAK;;EAGhB,OACIN,KAAA,CAAAW,aAAA,eACKF,cAAc,CAAC;IACZH,KAAK,EAAAA,KAAA;IACLC,QAAQ,EAAAA,QAAA;IACRF,MAAM,EAAAA;GACT,CAAC,EACDG,UAAU,IAAIR,KAAA,CAAAW,aAAA;IAAA,eAAkB;EAAM,aAAiB,CACrD;AAEf,CAAC;AAED;AACAR,UAAU,CAACS,WAAW,GAAG,YAAY;AAErC,eAAeX,IAAI,CAACE,UAAU,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}