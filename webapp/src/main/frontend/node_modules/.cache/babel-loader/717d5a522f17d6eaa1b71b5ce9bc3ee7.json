{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { useRef } from 'react';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { useDataProvider } from './useDataProvider';\nimport undoableEventEmitter from './undoableEventEmitter';\nimport { useEvent } from '../util';\n/**\n * Get a callback to call the dataProvider.delete() method, the result and the loading state.\n *\n * @param {string} resource\n * @param {Params} params The delete parameters { ids }\n * @param {Object} options Options object to pass to the queryClient.\n * May include side effects to be executed upon success or failure, e.g. { onSuccess: () => { refresh(); } }\n * May include a mutation mode (optimistic/pessimistic/undoable), e.g. { mutationMode: 'undoable' }\n *\n * @typedef Params\n * @prop params.ids The resource identifiers, e.g. [123, 456]\n *\n * @returns The current mutation state. Destructure as [deleteMany, { data, error, isLoading }].\n *\n * The return value updates according to the request state:\n *\n * - initial: [deleteMany, { isLoading: false, isIdle: true }]\n * - start:   [deleteMany, { isLoading: true }]\n * - success: [deleteMany, { data: [data from response], isLoading: false, isSuccess: true }]\n * - error:   [deleteMany, { error: [error from response], isLoading: false, isError: true }]\n *\n * The deleteMany() function must be called with a resource and a parameter object: deleteMany(resource, { ids, meta }, options)\n *\n * This hook uses react-query useMutation under the hood.\n * This means the state object contains mutate, isIdle, reset and other react-query methods.\n *\n * @see https://react-query-v3.tanstack.com/reference/useMutation\n *\n * @example // set params when calling the deleteMany callback\n *\n * import { useDeleteMany } from 'react-admin';\n *\n * const BulkDeletePostsButton = ({ selectedIds }) => {\n *     const [deleteMany, { isLoading, error }] = useDeleteMany();\n *     const handleClick = () => {\n *         deleteMany('posts', { ids: selectedIds })\n *     }\n *     if (error) { return <p>ERROR</p>; }\n *     return <button disabled={isLoading} onClick={handleClick}>Delete selected posts</button>;\n * };\n *\n * @example // set params when calling the hook\n *\n * import { useDeleteMany } from 'react-admin';\n *\n * const BulkDeletePostsButton = ({ selectedIds }) => {\n *     const [deleteMany, { isLoading, error }] = useDeleteMany('posts', { ids: selectedIds });\n *     const handleClick = () => {\n *         deleteMany()\n *     }\n *     if (error) { return <p>ERROR</p>; }\n *     return <button disabled={isLoading} onClick={handleClick}>Delete selected posts</button>;\n * };\n *\n * @example // TypeScript\n * const [deleteMany, { data }] = useDeleteMany<Product>('products', { ids });\n *                        \\-- data is Product\n */\nexport var useDeleteMany = function (resource, params, options) {\n  if (params === void 0) {\n    params = {};\n  }\n  if (options === void 0) {\n    options = {};\n  }\n  var dataProvider = useDataProvider();\n  var queryClient = useQueryClient();\n  var ids = params.ids;\n  var _a = options.mutationMode,\n    mutationMode = _a === void 0 ? 'pessimistic' : _a,\n    reactMutationOptions = __rest(options, [\"mutationMode\"]);\n  var mode = useRef(mutationMode);\n  var paramsRef = useRef({});\n  var snapshot = useRef([]);\n  var updateCache = function (_a) {\n    var resource = _a.resource,\n      ids = _a.ids;\n    // hack: only way to tell react-query not to fetch this query for the next 5 seconds\n    // because setQueryData doesn't accept a stale time option\n    var now = Date.now();\n    var updatedAt = mode.current === 'undoable' ? now + 5 * 1000 : now;\n    var updateColl = function (old) {\n      if (!old) return;\n      var newCollection = __spreadArray([], old, true);\n      ids.forEach(function (id) {\n        var index = newCollection.findIndex(\n        // eslint-disable-next-line eqeqeq\n        function (record) {\n          return record.id == id;\n        });\n        if (index === -1) {\n          return;\n        }\n        newCollection = __spreadArray(__spreadArray([], newCollection.slice(0, index), true), newCollection.slice(index + 1), true);\n      });\n      return newCollection;\n    };\n    queryClient.setQueriesData([resource, 'getList'], function (res) {\n      if (!res || !res.data) return res;\n      var newCollection = updateColl(res.data);\n      var recordWasFound = newCollection.length < res.data.length;\n      return recordWasFound ? {\n        data: newCollection,\n        total: res.total ? res.total - (res.data.length - newCollection.length) : undefined,\n        pageInfo: res.pageInfo\n      } : res;\n    }, {\n      updatedAt: updatedAt\n    });\n    queryClient.setQueriesData([resource, 'getInfiniteList'], function (res) {\n      if (!res || !res.pages) return res;\n      return __assign(__assign({}, res), {\n        pages: res.pages.map(function (page) {\n          var newCollection = updateColl(page.data);\n          var recordWasFound = newCollection.length < page.data.length;\n          return recordWasFound ? __assign(__assign({}, page), {\n            data: newCollection,\n            total: page.total ? page.total - (page.data.length - newCollection.length) : undefined,\n            pageInfo: page.pageInfo\n          }) : page;\n        })\n      });\n    }, {\n      updatedAt: updatedAt\n    });\n    queryClient.setQueriesData([resource, 'getMany'], function (coll) {\n      return coll && coll.length > 0 ? updateColl(coll) : coll;\n    }, {\n      updatedAt: updatedAt\n    });\n    queryClient.setQueriesData([resource, 'getManyReference'], function (res) {\n      if (!res || !res.data) return res;\n      var newCollection = updateColl(res.data);\n      var recordWasFound = newCollection.length < res.data.length;\n      return recordWasFound ? {\n        data: newCollection,\n        total: res.total - (res.data.length - newCollection.length)\n      } : res;\n    }, {\n      updatedAt: updatedAt\n    });\n  };\n  var mutation = useMutation(function (_a) {\n    var _b = _a === void 0 ? {} : _a,\n      _c = _b.resource,\n      callTimeResource = _c === void 0 ? resource : _c,\n      _d = _b.ids,\n      callTimeIds = _d === void 0 ? paramsRef.current.ids : _d,\n      _e = _b.meta,\n      callTimeMeta = _e === void 0 ? paramsRef.current.meta : _e;\n    return dataProvider.deleteMany(callTimeResource, {\n      ids: callTimeIds,\n      meta: callTimeMeta\n    }).then(function (_a) {\n      var data = _a.data;\n      return data;\n    });\n  }, __assign(__assign({}, reactMutationOptions), {\n    onMutate: function (variables) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var userContext;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!reactMutationOptions.onMutate) return [3 /*break*/, 2];\n              return [4 /*yield*/, reactMutationOptions.onMutate(variables)];\n            case 1:\n              userContext = _a.sent() || {};\n              return [2 /*return*/, __assign({\n                snapshot: snapshot.current\n              }, userContext)];\n            case 2:\n              // Return a context object with the snapshot value\n              return [2 /*return*/, {\n                snapshot: snapshot.current\n              }];\n          }\n        });\n      });\n    },\n    onError: function (error, variables, context) {\n      if (variables === void 0) {\n        variables = {};\n      }\n      if (mode.current === 'optimistic' || mode.current === 'undoable') {\n        // If the mutation fails, use the context returned from onMutate to rollback\n        context.snapshot.forEach(function (_a) {\n          var key = _a[0],\n            value = _a[1];\n          queryClient.setQueryData(key, value);\n        });\n      }\n      if (reactMutationOptions.onError) {\n        return reactMutationOptions.onError(error, variables, context);\n      }\n      // call-time error callback is executed by react-query\n    },\n    onSuccess: function (data, variables, context) {\n      if (variables === void 0) {\n        variables = {};\n      }\n      if (mode.current === 'pessimistic') {\n        // update the getOne and getList query cache with the new result\n        var _a = variables.resource,\n          callTimeResource = _a === void 0 ? resource : _a,\n          _b = variables.ids,\n          callTimeIds = _b === void 0 ? ids : _b;\n        updateCache({\n          resource: callTimeResource,\n          ids: callTimeIds\n        });\n        if (reactMutationOptions.onSuccess) {\n          reactMutationOptions.onSuccess(data, variables, context);\n        }\n        // call-time success callback is executed by react-query\n      }\n    },\n    onSettled: function (data, error, variables, context) {\n      if (variables === void 0) {\n        variables = {};\n      }\n      if (mode.current === 'optimistic' || mode.current === 'undoable') {\n        // Always refetch after error or success:\n        context.snapshot.forEach(function (_a) {\n          var key = _a[0];\n          queryClient.invalidateQueries(key);\n        });\n      }\n      if (reactMutationOptions.onSettled) {\n        return reactMutationOptions.onSettled(data, error, variables, context);\n      }\n    }\n  }));\n  var mutate = function (callTimeResource, callTimeParams, updateOptions) {\n    if (callTimeResource === void 0) {\n      callTimeResource = resource;\n    }\n    if (callTimeParams === void 0) {\n      callTimeParams = {};\n    }\n    if (updateOptions === void 0) {\n      updateOptions = {};\n    }\n    return __awaiter(void 0, void 0, void 0, function () {\n      var mutationMode, onSuccess, onSettled, onError, _a, callTimeIds, queryKeys;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            mutationMode = updateOptions.mutationMode, onSuccess = updateOptions.onSuccess, onSettled = updateOptions.onSettled, onError = updateOptions.onError;\n            // store the hook time params *at the moment of the call*\n            // because they may change afterwards, which would break the undoable mode\n            // as the previousData would be overwritten by the optimistic update\n            paramsRef.current = params;\n            if (mutationMode) {\n              mode.current = mutationMode;\n            }\n            if (mode.current === 'pessimistic') {\n              return [2 /*return*/, mutation.mutate(__assign({\n                resource: callTimeResource\n              }, callTimeParams), {\n                onSuccess: onSuccess,\n                onSettled: onSettled,\n                onError: onError\n              })];\n            }\n            _a = callTimeParams.ids, callTimeIds = _a === void 0 ? ids : _a;\n            queryKeys = [[callTimeResource, 'getList'], [callTimeResource, 'getInfiniteList'], [callTimeResource, 'getMany'], [callTimeResource, 'getManyReference']];\n            /**\n             * Snapshot the previous values via queryClient.getQueriesData()\n             *\n             * The snapshotData ref will contain an array of tuples [query key, associated data]\n             *\n             * @example\n             * [\n             *   [['posts', 'getList'], { data: [{ id: 1, title: 'Hello' }], total: 1 }],\n             *   [['posts', 'getMany'], [{ id: 1, title: 'Hello' }]],\n             * ]\n             *\n             * @see https://react-query-v3.tanstack.com/reference/QueryClient#queryclientgetqueriesdata\n             */\n            snapshot.current = queryKeys.reduce(function (prev, curr) {\n              return prev.concat(queryClient.getQueriesData(curr));\n            }, []);\n            // Cancel any outgoing re-fetches (so they don't overwrite our optimistic update)\n            return [4 /*yield*/, Promise.all(snapshot.current.map(function (_a) {\n              var key = _a[0];\n              return queryClient.cancelQueries(key);\n            }))];\n          case 1:\n            // Cancel any outgoing re-fetches (so they don't overwrite our optimistic update)\n            _b.sent();\n            // Optimistically update to the new value\n            updateCache({\n              resource: callTimeResource,\n              ids: callTimeIds\n            });\n            // run the success callbacks during the next tick\n            if (onSuccess) {\n              setTimeout(function () {\n                return onSuccess(callTimeIds, __assign({\n                  resource: callTimeResource\n                }, callTimeParams), {\n                  snapshot: snapshot.current\n                });\n              }, 0);\n            }\n            if (reactMutationOptions.onSuccess) {\n              setTimeout(function () {\n                return reactMutationOptions.onSuccess(callTimeIds, __assign({\n                  resource: callTimeResource\n                }, callTimeParams), {\n                  snapshot: snapshot.current\n                });\n              }, 0);\n            }\n            if (mode.current === 'optimistic') {\n              // call the mutate method without success side effects\n              return [2 /*return*/, mutation.mutate(__assign({\n                resource: callTimeResource\n              }, callTimeParams), {\n                onSettled: onSettled,\n                onError: onError\n              })];\n            } else {\n              // undoable mutation: register the mutation for later\n              undoableEventEmitter.once('end', function (_a) {\n                var isUndo = _a.isUndo;\n                if (isUndo) {\n                  // rollback\n                  snapshot.current.forEach(function (_a) {\n                    var key = _a[0],\n                      value = _a[1];\n                    queryClient.setQueryData(key, value);\n                  });\n                } else {\n                  // call the mutate method without success side effects\n                  mutation.mutate(__assign({\n                    resource: callTimeResource\n                  }, callTimeParams), {\n                    onSettled: onSettled,\n                    onError: onError\n                  });\n                }\n              });\n            }\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  return [useEvent(mutate), mutation];\n};","map":{"version":3,"names":["useRef","useMutation","useQueryClient","useDataProvider","undoableEventEmitter","useEvent","useDeleteMany","resource","params","options","dataProvider","queryClient","ids","_a","mutationMode","reactMutationOptions","__rest","mode","paramsRef","snapshot","updateCache","now","Date","updatedAt","current","updateColl","old","newCollection","__spreadArray","forEach","id","index","findIndex","record","slice","setQueriesData","res","data","recordWasFound","length","total","undefined","pageInfo","pages","__assign","map","page","coll","mutation","_b","_c","callTimeResource","_d","callTimeIds","_e","meta","callTimeMeta","deleteMany","then","onMutate","variables","__awaiter","userContext","sent","onError","error","context","key","value","setQueryData","onSuccess","onSettled","invalidateQueries","mutate","callTimeParams","updateOptions","queryKeys","reduce","prev","curr","concat","getQueriesData","Promise","all","cancelQueries","setTimeout","once","isUndo"],"sources":["../../../src/dataProvider/useDeleteMany.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}