{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { Typography } from '@mui/material';\nimport { useRecordContext, useTranslate } from 'ra-core';\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nimport { fieldPropTypes } from './types';\nimport { genericMemo } from './genericMemo';\n/**\n * Display a date value as a locale string.\n *\n * Uses Intl.DateTimeFormat() if available, passing the locales and options props as arguments.\n * If Intl is not available, it outputs date as is (and ignores the locales and options props).\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString\n * @example\n * <DateField source=\"published_at\" />\n * // renders the record { id: 1234, published_at: new Date('2012-11-07') } as\n * <span>07/11/2012</span>\n *\n * <DateField source=\"published_at\" className=\"red\" />\n * // renders the record { id: 1234, new Date('2012-11-07') } as\n * <span class=\"red\">07/11/2012</span>\n *\n * <DateField source=\"share\" options={{ weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }} />\n * // renders the record { id: 1234, new Date('2012-11-07') } as\n * <span>Wednesday, November 7, 2012</span>\n *\n * <DateField source=\"price\" locales=\"fr-FR\" options={{ weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }} />\n * // renders the record { id: 1234, new Date('2012-11-07') } as\n * <span>mercredi 7 novembre 2012</span>\n */\nvar DateFieldImpl = function (props) {\n  var className = props.className,\n    emptyText = props.emptyText,\n    locales = props.locales,\n    options = props.options,\n    _a = props.showTime,\n    showTime = _a === void 0 ? false : _a,\n    _b = props.showDate,\n    showDate = _b === void 0 ? true : _b,\n    source = props.source,\n    _c = props.transform,\n    transform = _c === void 0 ? defaultTransform : _c,\n    rest = __rest(props, [\"className\", \"emptyText\", \"locales\", \"options\", \"showTime\", \"showDate\", \"source\", \"transform\"]);\n  var translate = useTranslate();\n  if (!showTime && !showDate) {\n    throw new Error('<DateField> cannot have showTime and showDate false at the same time');\n  }\n  var record = useRecordContext(props);\n  if (!record) {\n    return null;\n  }\n  var value = get(record, source);\n  if (value == null || value === '') {\n    return emptyText ? React.createElement(Typography, __assign({\n      component: \"span\",\n      variant: \"body2\",\n      className: className\n    }, sanitizeFieldRestProps(rest)), emptyText && translate(emptyText, {\n      _: emptyText\n    })) : null;\n  }\n  var date = transform(value);\n  var dateString = '';\n  if (showTime && showDate) {\n    dateString = toLocaleStringSupportsLocales ? date.toLocaleString(locales, options) : date.toLocaleString();\n  } else if (showDate) {\n    // If input is a date string (e.g. '2022-02-15') without time and time zone,\n    // force timezone to UTC to fix issue with people in negative time zones\n    // who may see a different date when calling toLocaleDateString().\n    var dateOptions = options !== null && options !== void 0 ? options : typeof value === 'string' && value.length <= 10 ? {\n      timeZone: 'UTC'\n    } : undefined;\n    dateString = toLocaleStringSupportsLocales ? date.toLocaleDateString(locales, dateOptions) : date.toLocaleDateString();\n  } else if (showTime) {\n    dateString = toLocaleStringSupportsLocales ? date.toLocaleTimeString(locales, options) : date.toLocaleTimeString();\n  }\n  return React.createElement(Typography, __assign({\n    component: \"span\",\n    variant: \"body2\",\n    className: className\n  }, sanitizeFieldRestProps(rest)), dateString);\n};\nDateFieldImpl.propTypes = __assign(__assign(__assign({}, Typography.propTypes), fieldPropTypes), {\n  locales: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  options: PropTypes.object,\n  showTime: PropTypes.bool,\n  showDate: PropTypes.bool\n});\nDateFieldImpl.displayName = 'DateFieldImpl';\nexport var DateField = genericMemo(DateFieldImpl);\nvar defaultTransform = function (value) {\n  return value instanceof Date ? value : typeof value === 'string' || typeof value === 'number' ? new Date(value) : undefined;\n};\nvar toLocaleStringSupportsLocales = function () {\n  // from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString\n  try {\n    new Date().toLocaleString('i');\n  } catch (error) {\n    return error instanceof RangeError;\n  }\n  return false;\n}();","map":{"version":3,"names":["React","PropTypes","get","Typography","useRecordContext","useTranslate","sanitizeFieldRestProps","fieldPropTypes","genericMemo","DateFieldImpl","props","className","emptyText","locales","options","_a","showTime","_b","showDate","source","_c","transform","defaultTransform","rest","__rest","translate","Error","record","value","createElement","__assign","component","variant","_","date","dateString","toLocaleStringSupportsLocales","toLocaleString","dateOptions","length","timeZone","undefined","toLocaleDateString","toLocaleTimeString","propTypes","oneOfType","string","arrayOf","object","bool","displayName","DateField","Date","error","RangeError"],"sources":["../../../src/field/DateField.tsx"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}