{"ast":null,"code":"import CloseIcon from'@mui/icons-material/Close';import LockResetIcon from'@mui/icons-material/LockReset';import{Dialog,DialogContent,DialogTitle,IconButton}from'@mui/material';import React,{useState}from'react';import{Button,SaveButton,SimpleForm,TextInput,Toolbar,required,useNotify,useRecordContext,useTranslate}from\"react-admin\";import{dataProvider}from\"../dataProvider\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export const PasswordUpdateBtn=props=>{const notify=useNotify();const translate=useTranslate();const record=useRecordContext(props);const{icon=/*#__PURE__*/_jsx(LockResetIcon,{}),label=translate(\"ess.users.password_update.btn_label\")}=props;// State to manage dialog open/close\nconst[isDialogOpen,setIsDialogOpen]=useState(false);const[newPassword,setNewPassword]=useState('');if(!record)return null;// Function to handle button click\nconst handleButtonClick=e=>{e.stopPropagation();setIsDialogOpen(true);// Open the dialog\n};// Function to handle form submission\nconst handleFormSubmit=e=>{e.stopPropagation();if(!newPassword)return;dataProvider.updatePassword({user:record.id,password:newPassword}).then(res=>{setIsDialogOpen(false);notify(translate(\"ess.users.password_update.updated\"));}).catch(err=>{console.error(err);notify(translate(\"ess.users.password_update.updated_error\"));});};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{label:label,onClick:handleButtonClick,children:icon}),/*#__PURE__*/_jsxs(Dialog,{onClick:e=>{e.stopPropagation();},open:isDialogOpen,onClose:e=>{e.stopPropagation();setIsDialogOpen(false);},children:[/*#__PURE__*/_jsx(DialogTitle,{children:translate(\"ess.users.password_update.btn_label\")}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(SimpleForm,{toolbar:/*#__PURE__*/_jsxs(Toolbar,{children:[/*#__PURE__*/_jsx(SaveButton,{onClick:handleFormSubmit,label:\"Save\"}),/*#__PURE__*/_jsx(IconButton,{sx:{marginLeft:\"auto\"},\"aria-label\":\"cancel\",onClick:e=>{e.stopPropagation();setIsDialogOpen(false);},children:/*#__PURE__*/_jsx(CloseIcon,{})})]}),children:[/*#__PURE__*/_jsx(TextInput,{source:\"username\",label:\"Username\",fullWidth:true,defaultValue:record.username,disabled:true}),/*#__PURE__*/_jsx(TextInput,{source:\"password\",label:translate(\"ess.users.password_update.field_label\"),type:\"password\",fullWidth:true,value:newPassword,validate:required(),onChange:e=>setNewPassword(e.target.value),autoFocus:true})]})})]})]});};","map":{"version":3,"names":["CloseIcon","LockResetIcon","Dialog","DialogContent","DialogTitle","IconButton","React","useState","Button","SaveButton","SimpleForm","TextInput","Toolbar","required","useNotify","useRecordContext","useTranslate","dataProvider","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PasswordUpdateBtn","props","notify","translate","record","icon","label","isDialogOpen","setIsDialogOpen","newPassword","setNewPassword","handleButtonClick","e","stopPropagation","handleFormSubmit","updatePassword","user","id","password","then","res","catch","err","console","error","children","onClick","open","onClose","toolbar","sx","marginLeft","source","fullWidth","defaultValue","username","disabled","type","value","validate","onChange","target","autoFocus"],"sources":["/home/agrima/Desktop/curr-projects/employee-shift-scheduler/webapp/src/main/frontend/src/components/PasswordUpdateBtn.tsx"],"sourcesContent":["import CloseIcon from '@mui/icons-material/Close';\nimport LockResetIcon from '@mui/icons-material/LockReset';\nimport { Dialog, DialogContent, DialogTitle, IconButton } from '@mui/material';\nimport React, { useState } from 'react';\nimport { Button, RaRecord, SaveButton, SimpleForm, TextInput, Toolbar, required, useCreatePath, useNotify, useRecordContext, useResourceContext, useTranslate } from \"react-admin\";\nimport { dataProvider } from \"../dataProvider\";\n\nexport const PasswordUpdateBtn = <RecordType extends RaRecord = any>(\n    props: any\n) => {\n    const notify = useNotify();\n    const translate = useTranslate();\n    const record = useRecordContext(props);\n\n    const {\n        icon = <LockResetIcon />,\n        label = translate(\"ess.users.password_update.btn_label\")\n    } = props;\n\n    // State to manage dialog open/close\n    const [isDialogOpen, setIsDialogOpen] = useState(false);\n    const [newPassword, setNewPassword] = useState('');\n\n    if (!record) return null;\n\n    // Function to handle button click\n    const handleButtonClick = (e: React.MouseEvent) => {\n        e.stopPropagation();\n        setIsDialogOpen(true); // Open the dialog\n    };\n\n    // Function to handle form submission\n    const handleFormSubmit = (e: any) => {\n        e.stopPropagation();\n\n        if (!newPassword)\n            return;\n\n        dataProvider.updatePassword({\n            user: record.id as number,\n            password: newPassword\n        })\n\t\t\t.then((res) => {\n                setIsDialogOpen(false)\n                notify(translate(\"ess.users.password_update.updated\")) \n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.error(err);\n                notify(translate(\"ess.users.password_update.updated_error\")) \n\t\t\t});\n    };\n\n    return (\n        <>\n            <Button\n                label={label}\n                onClick={handleButtonClick}\n            >\n                {icon}\n            </Button>\n\n            {/* Dialog for password update */}\n            <Dialog onClick={(e:any) => {\n                e.stopPropagation();\n            }} open={isDialogOpen} onClose={(e:any) => {\n                e.stopPropagation();\n\n                setIsDialogOpen(false)\n            }}>\n                <DialogTitle>{translate(\"ess.users.password_update.btn_label\")}</DialogTitle>\n                <DialogContent>\n\n                    <SimpleForm \n                    toolbar={\n                        <Toolbar>\n                            <SaveButton\n                                onClick={handleFormSubmit}\n                                label=\"Save\"\n                            />\n\n                            <IconButton sx={{ marginLeft: \"auto\" }} aria-label=\"cancel\" onClick={(e: any) => {\n                                e.stopPropagation();\n                                setIsDialogOpen(false)\n                            }}>\n                                <CloseIcon />\n                            </IconButton>\n                        </Toolbar>}\n                    >\n                    {/* Form for password update */}\n                        <TextInput \n                            source=\"username\"\n                            label=\"Username\"\n                            fullWidth\n                            defaultValue={record.username}\n                            disabled\n                        />\n                        <TextInput\n                            source=\"password\"\n                            label={translate(\"ess.users.password_update.field_label\")}\n                            type=\"password\"\n                            fullWidth\n                            value={newPassword}\n                            validate={required()}\n                            onChange={(e) => setNewPassword(e.target.value)}\n                            autoFocus\n                        />\n                    </SimpleForm>\n                 </DialogContent>\n            </Dialog>\n        </>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}