{"ast":null,"code":"export const authProvider={login:_ref=>{let{username,password}=_ref;const request=new Request('../api/login',{method:'POST',body:JSON.stringify({username,password}),headers:new Headers({'Content-Type':'application/json'})});return fetch(request).then(response=>{if(response.status<200||response.status>=300){return Promise.reject(response.statusText);}return response.json();}).then(auth=>{localStorage.setItem('roles',auth.roles);return Promise.resolve();});},logout:()=>{const request=new Request('../api/logout',{method:'POST',headers:new Headers({'Content-Type':'application/json'})});return fetch(request).then(response=>{if(response.status<200||response.status>=300){return Promise.resolve({redirectTo:'/login'});}return response.json();}).then(_ref2=>{let{token}=_ref2;return Promise.resolve();});},// called when the API returns an error\ncheckError:_ref3=>{let{status}=_ref3;if(status===401||status===403){localStorage.removeItem('username');return Promise.reject();}return Promise.resolve();},checkAuth:()=>{const request=new Request('../api/session',{method:'GET',headers:new Headers({'Content-Type':'application/json'})});return fetch(request).then(response=>{if(response.status<200||response.status>=300){return Promise.reject();}return Promise.resolve();});},getPermissions:()=>{const role=localStorage.getItem('roles');return role?Promise.resolve(role):Promise.reject();}};","map":{"version":3,"names":["authProvider","login","_ref","username","password","request","Request","method","body","JSON","stringify","headers","Headers","fetch","then","response","status","Promise","reject","statusText","json","auth","localStorage","setItem","roles","resolve","logout","redirectTo","_ref2","token","checkError","_ref3","removeItem","checkAuth","getPermissions","role","getItem"],"sources":["/home/agrima/Desktop/curr-projects/Shift-Smart/webapp/src/main/frontend/src/authProvider.tsx"],"sourcesContent":["import { AuthProvider } from 'react-admin';\n\nexport const authProvider: AuthProvider = {\n    login: ({ username, password }) => {\n        const request = new Request('../api/login', {\n            method: 'POST',\n            body: JSON.stringify({ username, password }),\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n        })\n        return fetch(request)\n            .then(response => {\n                if (response.status < 200 || response.status >= 300) {\n                    return Promise.reject(response.statusText);\n                }\n                return response.json();\n            })\n            .then(( auth ) => {\n                localStorage.setItem('roles', auth.roles);\n                return Promise.resolve();\n            });\n    },\n    logout: () => {\n        const request = new Request('../api/logout', {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' })\n        })\n        return fetch(request)\n            .then(response => {\n                if (response.status < 200 || response.status >= 300) {\n                    return Promise.resolve({redirectTo: '/login'});\n                }\n                return response.json();\n            })\n            .then(({ token }) => {\n                return Promise.resolve();\n            });\n    },\n    // called when the API returns an error\n    checkError: ({ status }) => {\n        if (status === 401 || status === 403) {\n            localStorage.removeItem('username');\n            return Promise.reject();\n        }\n        return Promise.resolve();\n    },\n    checkAuth: () => {\n        const request = new Request('../api/session', {\n            method: 'GET',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n        })\n        return fetch(request)\n            .then(response => {\n                if (response.status < 200 || response.status >= 300) {\n                    return Promise.reject()\n                }\n                return Promise.resolve();\n            })\n    },\n    getPermissions: () => {\n        const role = localStorage.getItem('roles');\n        return role ? Promise.resolve(role) : Promise.reject();\n    }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}