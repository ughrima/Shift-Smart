{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { useTranslate } from '../i18n';\nvar ValidationErrorSpecialFormatPrefix = '@@react-admin@@';\nvar ValidationError = function (props) {\n  var error = props.error;\n  var errorMessage = error;\n  var translate = useTranslate();\n  // react-hook-form expects errors to be plain strings but our validators can return objects\n  // that have message and args.\n  // To avoid double translation for users that validate with a schema instead of our validators\n  // we use a special format for our validators errors.\n  // The useInput hook handle the special formatting\n  if (typeof error === 'string' && error.startsWith(ValidationErrorSpecialFormatPrefix)) {\n    errorMessage = JSON.parse(error.substring(ValidationErrorSpecialFormatPrefix.length));\n  }\n  if (errorMessage.message) {\n    var _a = errorMessage,\n      message = _a.message,\n      args = _a.args;\n    return React.createElement(React.Fragment, null, translate(message, __assign({\n      _: message\n    }, args)));\n  }\n  return React.createElement(React.Fragment, null, translate(errorMessage, {\n    _: errorMessage\n  }));\n};\nexport default ValidationError;","map":{"version":3,"names":["React","useTranslate","ValidationErrorSpecialFormatPrefix","ValidationError","props","error","errorMessage","translate","startsWith","JSON","parse","substring","length","message","_a","args","createElement","Fragment","__assign","_"],"sources":["../../../src/form/ValidationError.tsx"],"sourcesContent":[null],"mappings":";;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAK9B,SAASC,YAAY,QAAQ,SAAS;AAMtC,IAAMC,kCAAkC,GAAG,iBAAiB;AAC5D,IAAMC,eAAe,GAAG,SAAAA,CAACC,KAA2B;EACxC,IAAAC,KAAK,GAAKD,KAAK,CAAAC,KAAV;EACb,IAAIC,YAAY,GAAGD,KAAK;EACxB,IAAME,SAAS,GAAGN,YAAY,EAAE;EAChC;EACA;EACA;EACA;EACA;EACA,IACI,OAAOI,KAAK,KAAK,QAAQ,IACzBA,KAAK,CAACG,UAAU,CAACN,kCAAkC,CAAC,EACtD;IACEI,YAAY,GAAGG,IAAI,CAACC,KAAK,CACrBL,KAAK,CAACM,SAAS,CAACT,kCAAkC,CAACU,MAAM,CAAC,CAC7D;;EAEL,IAAKN,YAA+C,CAACO,OAAO,EAAE;IACpD,IAAAC,EAAA,GAGFR,YAA8C;MAF9CO,OAAO,GAAAC,EAAA,CAAAD,OAAA;MACPE,IAAI,GAAAD,EAAA,CAAAC,IAC0C;IAClD,OAAOf,KAAA,CAAAgB,aAAA,CAAAhB,KAAA,CAAAiB,QAAA,QAAGV,SAAS,CAACM,OAAO,EAAAK,QAAA;MAAIC,CAAC,EAAEN;IAAO,GAAKE,IAAI,EAAG,CAAI;;EAG7D,OAAOf,KAAA,CAAAgB,aAAA,CAAAhB,KAAA,CAAAiB,QAAA,QAAGV,SAAS,CAACD,YAAsB,EAAE;IAAEa,CAAC,EAAEb;EAAY,CAAE,CAAC,CAAI;AACxE,CAAC;AAED,eAAeH,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module"}