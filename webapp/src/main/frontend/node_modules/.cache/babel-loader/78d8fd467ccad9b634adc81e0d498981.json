{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar _a;\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport DoneIcon from '@mui/icons-material/Done';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport { Tooltip, Typography } from '@mui/material';\nimport { useTranslate, useRecordContext } from 'ra-core';\nimport { genericMemo } from './genericMemo';\nimport { fieldPropTypes } from './types';\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nvar BooleanFieldImpl = function (props) {\n  var className = props.className,\n    emptyText = props.emptyText,\n    source = props.source,\n    valueLabelTrue = props.valueLabelTrue,\n    valueLabelFalse = props.valueLabelFalse,\n    _a = props.TrueIcon,\n    TrueIcon = _a === void 0 ? DoneIcon : _a,\n    _b = props.FalseIcon,\n    FalseIcon = _b === void 0 ? ClearIcon : _b,\n    _c = props.looseValue,\n    looseValue = _c === void 0 ? false : _c,\n    rest = __rest(props, [\"className\", \"emptyText\", \"source\", \"valueLabelTrue\", \"valueLabelFalse\", \"TrueIcon\", \"FalseIcon\", \"looseValue\"]);\n  var record = useRecordContext(props);\n  var translate = useTranslate();\n  var value = get(record, source);\n  var isTruthyValue = value === true || looseValue && value;\n  var ariaLabel = value ? valueLabelTrue : valueLabelFalse;\n  if (!ariaLabel) {\n    ariaLabel = isTruthyValue ? 'ra.boolean.true' : 'ra.boolean.false';\n  }\n  if (looseValue || value === false || value === true) {\n    return React.createElement(StyledTypography, __assign({\n      component: \"span\",\n      variant: \"body2\",\n      className: className\n    }, sanitizeFieldRestProps(rest)), React.createElement(Tooltip, {\n      title: translate(ariaLabel, {\n        _: ariaLabel\n      })\n    }, isTruthyValue ? TrueIcon ? React.createElement(TrueIcon, {\n      \"data-testid\": \"true\",\n      fontSize: \"small\",\n      className: classes.trueIcon\n    }) : React.createElement(React.Fragment, null) : FalseIcon ? React.createElement(FalseIcon, {\n      \"data-testid\": \"false\",\n      fontSize: \"small\",\n      className: classes.falseIcon\n    }) : React.createElement(React.Fragment, null)));\n  }\n  return React.createElement(Typography, __assign({\n    component: \"span\",\n    variant: \"body2\",\n    className: className\n  }, sanitizeFieldRestProps(rest)), emptyText && translate(emptyText, {\n    _: emptyText\n  }));\n};\nBooleanFieldImpl.propTypes = __assign(__assign(__assign({}, Typography.propTypes), fieldPropTypes), {\n  valueLabelFalse: PropTypes.string,\n  valueLabelTrue: PropTypes.string,\n  TrueIcon: PropTypes.elementType,\n  FalseIcon: PropTypes.elementType,\n  looseValue: PropTypes.bool\n});\nBooleanFieldImpl.displayName = 'BooleanFieldImpl';\nexport var BooleanField = genericMemo(BooleanFieldImpl);\nvar PREFIX = 'RaBooleanField';\nvar classes = {\n  trueIcon: \"\".concat(PREFIX, \"-trueIcon\"),\n  falseIcon: \"\".concat(PREFIX, \"-falseIcon\")\n};\nvar StyledTypography = styled(Typography, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})((_a = {\n  display: 'inline-flex',\n  verticalAlign: 'middle',\n  lineHeight: 0\n}, _a[\"& .\".concat(classes.trueIcon)] = {}, _a[\"& .\".concat(classes.falseIcon)] = {}, _a));","map":{"version":3,"names":["React","styled","PropTypes","get","DoneIcon","ClearIcon","Tooltip","Typography","useTranslate","useRecordContext","genericMemo","fieldPropTypes","sanitizeFieldRestProps","BooleanFieldImpl","props","className","emptyText","source","valueLabelTrue","valueLabelFalse","_a","TrueIcon","_b","FalseIcon","_c","looseValue","rest","__rest","record","translate","value","isTruthyValue","ariaLabel","createElement","StyledTypography","__assign","component","variant","title","_","fontSize","classes","trueIcon","Fragment","falseIcon","propTypes","string","elementType","bool","displayName","BooleanField","PREFIX","concat","name","overridesResolver","styles","root","display","verticalAlign","lineHeight"],"sources":["../../../src/field/BooleanField.tsx"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}