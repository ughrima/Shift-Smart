{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { InfiniteListBase } from 'ra-core';\nimport { TitlePropType } from '../layout/Title';\nimport { InfinitePagination } from './pagination';\nimport { ListView } from './ListView';\n/**\n * Infinite List page component\n *\n * The <InfiniteList> component renders the list layout (title, buttons, filters),\n * and fetches the list of records from the REST API.\n *\n * It then delegates the rendering of the list of records to its child component.\n * Usually, it's a <Datagrid>, responsible for displaying a table with one row for each post.\n *\n * It contains an <InfinitePagination> component, which fetches the next page of records\n * when the user scrolls to the bottom of the list.\n *\n * The <InfiniteList> component accepts the following props:\n *\n * - actions\n * - aside: Side Component\n * - children: List Layout\n * - component\n * - disableAuthentication\n * - disableSyncWithLocation\n * - empty: Empty Page Component\n * - emptyWhileLoading\n * - exporter\n * - filters: Filter Inputs\n * - filter: Permanent Filter\n * - filterDefaultValues\n * - pagination: Pagination Component\n * - perPage: Pagination Size\n * - queryOptions\n * - sort: Default Sort Field & Order\n * - title\n * - sx: CSS API\n *\n * @example\n * const postFilters = [\n *     <TextInput label=\"Search\" source=\"q\" alwaysOn />,\n *     <TextInput label=\"Title\" source=\"title\" />\n * ];\n * export const PostList = () => (\n *     <InfiniteList\n *         title=\"List of posts\"\n *         sort={{ field: 'published_at' }}\n *         filter={{ is_published: true }}\n *         filters={postFilters}\n *     >\n *         <Datagrid>\n *             <TextField source=\"id\" />\n *             <TextField source=\"title\" />\n *             <EditButton />\n *         </Datagrid>\n *     </List>\n * );\n */\nexport var InfiniteList = function (_a) {\n  var debounce = _a.debounce,\n    disableAuthentication = _a.disableAuthentication,\n    disableSyncWithLocation = _a.disableSyncWithLocation,\n    exporter = _a.exporter,\n    _b = _a.filter,\n    filter = _b === void 0 ? defaultFilter : _b,\n    filterDefaultValues = _a.filterDefaultValues,\n    _c = _a.pagination,\n    pagination = _c === void 0 ? defaultPagination : _c,\n    _d = _a.perPage,\n    perPage = _d === void 0 ? 10 : _d,\n    queryOptions = _a.queryOptions,\n    resource = _a.resource,\n    sort = _a.sort,\n    storeKey = _a.storeKey,\n    rest = __rest(_a, [\"debounce\", \"disableAuthentication\", \"disableSyncWithLocation\", \"exporter\", \"filter\", \"filterDefaultValues\", \"pagination\", \"perPage\", \"queryOptions\", \"resource\", \"sort\", \"storeKey\"]);\n  return React.createElement(InfiniteListBase, {\n    debounce: debounce,\n    disableAuthentication: disableAuthentication,\n    disableSyncWithLocation: disableSyncWithLocation,\n    exporter: exporter,\n    filter: filter,\n    filterDefaultValues: filterDefaultValues,\n    perPage: perPage,\n    queryOptions: queryOptions,\n    resource: resource,\n    sort: sort,\n    storeKey: storeKey\n  }, React.createElement(ListView, __assign({}, rest, {\n    pagination: pagination\n  })));\n};\nvar defaultPagination = React.createElement(InfinitePagination, null);\nvar defaultFilter = {};\nInfiniteList.propTypes = {\n  // the props you can change\n  // @ts-ignore-line\n  actions: PropTypes.oneOfType([PropTypes.bool, PropTypes.element]),\n  aside: PropTypes.element,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  emptyWhileLoading: PropTypes.bool,\n  filter: PropTypes.object,\n  filterDefaultValues: PropTypes.object,\n  filters: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)]),\n  // @ts-ignore-line\n  pagination: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\n  perPage: PropTypes.number,\n  //@ts-ignore-line\n  sort: PropTypes.shape({\n    field: PropTypes.string,\n    order: PropTypes.oneOf(['ASC', 'DESC'])\n  }),\n  sx: PropTypes.any,\n  title: TitlePropType,\n  // the props managed by react-admin\n  disableSyncWithLocation: PropTypes.bool,\n  hasCreate: PropTypes.bool,\n  hasEdit: PropTypes.bool,\n  hasList: PropTypes.bool,\n  hasShow: PropTypes.bool,\n  resource: PropTypes.string\n};","map":{"version":3,"names":["React","PropTypes","InfiniteListBase","TitlePropType","InfinitePagination","ListView","InfiniteList","_a","debounce","disableAuthentication","disableSyncWithLocation","exporter","_b","filter","defaultFilter","filterDefaultValues","_c","pagination","defaultPagination","_d","perPage","queryOptions","resource","sort","storeKey","rest","__rest","createElement","__assign","propTypes","actions","oneOfType","bool","element","aside","children","node","isRequired","className","string","emptyWhileLoading","object","filters","arrayOf","number","shape","field","order","oneOf","sx","any","title","hasCreate","hasEdit","hasList","hasShow"],"sources":["../../../src/list/InfiniteList.tsx"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}