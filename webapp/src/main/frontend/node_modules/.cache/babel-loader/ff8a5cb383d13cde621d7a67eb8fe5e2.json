{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar _a;\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport get from 'lodash/get';\nimport Chip from '@mui/material/Chip';\nimport Typography from '@mui/material/Typography';\nimport clsx from 'clsx';\nimport { useRecordContext, useTranslate } from 'ra-core';\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nimport { fieldPropTypes } from './types';\nimport { genericMemo } from './genericMemo';\nvar ChipFieldImpl = function (props) {\n  var className = props.className,\n    source = props.source,\n    emptyText = props.emptyText,\n    rest = __rest(props, [\"className\", \"source\", \"emptyText\"]);\n  var record = useRecordContext(props);\n  var value = get(record, source);\n  var translate = useTranslate();\n  if (value == null && emptyText) {\n    return React.createElement(Typography, __assign({\n      component: \"span\",\n      variant: \"body2\",\n      className: className\n    }, sanitizeFieldRestProps(rest)), emptyText && translate(emptyText, {\n      _: emptyText\n    }));\n  }\n  return React.createElement(StyledChip, __assign({\n    className: clsx(ChipFieldClasses.chip, className),\n    label: value\n  }, sanitizeFieldRestProps(rest)));\n};\nChipFieldImpl.propTypes = __assign(__assign({}, Chip.propTypes), fieldPropTypes);\nChipFieldImpl.displayName = 'ChipFieldImpl';\nexport var ChipField = genericMemo(ChipFieldImpl);\nvar PREFIX = 'RaChipField';\nvar ChipFieldClasses = {\n  chip: \"\".concat(PREFIX, \"-chip\")\n};\nvar StyledChip = styled(Chip, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})((_a = {}, _a[\"&.\".concat(ChipFieldClasses.chip)] = {\n  cursor: 'inherit'\n}, _a));","map":{"version":3,"names":["React","styled","get","Chip","Typography","clsx","useRecordContext","useTranslate","sanitizeFieldRestProps","fieldPropTypes","genericMemo","ChipFieldImpl","props","className","source","emptyText","rest","__rest","record","value","translate","createElement","__assign","component","variant","_","StyledChip","ChipFieldClasses","chip","label","propTypes","displayName","ChipField","PREFIX","concat","name","overridesResolver","styles","root","_a","cursor"],"sources":["../../../src/field/ChipField.tsx"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,OAAOC,GAAG,MAAM,YAAY;AAC5B,OAAOC,IAAmB,MAAM,oBAAoB;AACpD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,gBAAgB,EAAEC,YAAY,QAAQ,SAAS;AAExD,SAASC,sBAAsB,QAAQ,0BAA0B;AACjE,SAAqBC,cAAc,QAAQ,SAAS;AACpD,SAASC,WAAW,QAAQ,eAAe;AAE3C,IAAMC,aAAa,GAAG,SAAAA,CAGlBC,KAAiC;EAEzB,IAAAC,SAAS,GAAiCD,KAAK,CAAAC,SAAtC;IAAEC,MAAM,GAAyBF,KAAK,CAAAE,MAA9B;IAAEC,SAAS,GAAcH,KAAK,CAAAG,SAAnB;IAAKC,IAAI,GAAAC,MAAA,CAAKL,KAAK,EAAjD,oCAAyC,CAAF;EAC7C,IAAMM,MAAM,GAAGZ,gBAAgB,CAAaM,KAAK,CAAC;EAClD,IAAMO,KAAK,GAAGjB,GAAG,CAACgB,MAAM,EAAEJ,MAAM,CAAC;EACjC,IAAMM,SAAS,GAAGb,YAAY,EAAE;EAEhC,IAAIY,KAAK,IAAI,IAAI,IAAIJ,SAAS,EAAE;IAC5B,OACIf,KAAA,CAAAqB,aAAA,CAACjB,UAAU,EAAAkB,QAAA;MACPC,SAAS,EAAC,MAAM;MAChBC,OAAO,EAAC,OAAO;MACfX,SAAS,EAAEA;IAAS,GAChBL,sBAAsB,CAACQ,IAAI,CAAC,GAE/BD,SAAS,IAAIK,SAAS,CAACL,SAAS,EAAE;MAAEU,CAAC,EAAEV;IAAS,CAAE,CAAC,CAC3C;;EAIrB,OACIf,KAAA,CAAAqB,aAAA,CAACK,UAAU,EAAAJ,QAAA;IACPT,SAAS,EAAER,IAAI,CAACsB,gBAAgB,CAACC,IAAI,EAAEf,SAAS,CAAC;IACjDgB,KAAK,EAAEV;EAAK,GACRX,sBAAsB,CAACQ,IAAI,CAAC,EAClC;AAEV,CAAC;AAEDL,aAAa,CAACmB,SAAS,GAAAR,QAAA,CAAAA,QAAA,KAEhBnB,IAAI,CAAC2B,SAAS,GACdrB,cAAc,CACpB;AACDE,aAAa,CAACoB,WAAW,GAAG,eAAe;AAE3C,OAAO,IAAMC,SAAS,GAAGtB,WAAW,CAACC,aAAa,CAAC;AAYnD,IAAMsB,MAAM,GAAG,aAAa;AAE5B,IAAMN,gBAAgB,GAAG;EACrBC,IAAI,EAAE,GAAAM,MAAA,CAAGD,MAAM;CAClB;AAED,IAAMP,UAAU,GAAGzB,MAAM,CAACE,IAAI,EAAE;EAC5BgC,IAAI,EAAEF,MAAM;EACZG,iBAAiB,EAAE,SAAAA,CAACxB,KAAK,EAAEyB,MAAM;IAAK,OAAAA,MAAM,CAACC,IAAI;EAAX;CACzC,CAAC,EAAAC,EAAA,OACEA,EAAA,CAAC,KAAAL,MAAA,CAAKP,gBAAgB,CAACC,IAAI,CAAE,IAAG;EAAEY,MAAM,EAAE;AAAS,CAAE,E,IACvD","ignoreList":[]},"metadata":{},"sourceType":"module"}