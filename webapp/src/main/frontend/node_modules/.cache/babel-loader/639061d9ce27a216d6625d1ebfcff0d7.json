{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport TextField from '@mui/material/TextField';\nimport { useInput, FieldTitle } from 'ra-core';\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\nimport { InputHelperText } from './InputHelperText';\n/**\n * Converts a time string without timezone to a date object\n * with timezone, using the browser timezone.\n *\n * @param {string} value Date string, formatted as hh:mm\n * @return {Date}\n */\nvar parseTime = function (value) {\n  var _a, _b;\n  if (!value) return null;\n  var timeTokens = value.split(':').map(function (v) {\n    return parseInt(v);\n  });\n  var today = new Date();\n  today.setHours((_a = timeTokens[0]) !== null && _a !== void 0 ? _a : 0);\n  today.setMinutes((_b = timeTokens[1]) !== null && _b !== void 0 ? _b : 0);\n  return today;\n};\n/**\n * Form input to edit a time string value in the \"HH:mm\" format (e.g. '17:45'),\n * using the browser locale for the timezone.\n *\n * Renders a time picker or a text input depending on the browser.\n *\n * This component works with Date objects to handle the timezone using the browser locale.\n * You can still pass string values as long as those can be converted to a JavaScript Date object.\n *\n * @example\n * import { Edit, SimpleForm, TimeInput } from 'react-admin';\n *\n * const PostEdit = () => (\n *     <Edit>\n *         <SimpleForm>\n *             <TimeInput source=\"published_at\" />\n *         </SimpleForm>\n *     </Edit>\n * );\n */\nexport var TimeInput = function (_a) {\n  var className = _a.className,\n    defaultValue = _a.defaultValue,\n    _b = _a.format,\n    format = _b === void 0 ? formatTime : _b,\n    label = _a.label,\n    helperText = _a.helperText,\n    margin = _a.margin,\n    onBlur = _a.onBlur,\n    onChange = _a.onChange,\n    source = _a.source,\n    resource = _a.resource,\n    disabled = _a.disabled,\n    readOnly = _a.readOnly,\n    _c = _a.parse,\n    parse = _c === void 0 ? parseTime : _c,\n    validate = _a.validate,\n    variant = _a.variant,\n    rest = __rest(_a, [\"className\", \"defaultValue\", \"format\", \"label\", \"helperText\", \"margin\", \"onBlur\", \"onChange\", \"source\", \"resource\", \"disabled\", \"readOnly\", \"parse\", \"validate\", \"variant\"]);\n  var _d = useInput(__assign({\n      defaultValue: defaultValue,\n      format: format,\n      parse: parse,\n      onBlur: onBlur,\n      onChange: onChange,\n      resource: resource,\n      source: source,\n      validate: validate,\n      readOnly: readOnly,\n      disabled: disabled\n    }, rest)),\n    field = _d.field,\n    fieldState = _d.fieldState,\n    formState = _d.formState,\n    id = _d.id,\n    isRequired = _d.isRequired;\n  var error = fieldState.error,\n    invalid = fieldState.invalid,\n    isTouched = fieldState.isTouched;\n  var isSubmitted = formState.isSubmitted;\n  var renderHelperText = helperText !== false || (isTouched || isSubmitted) && invalid;\n  return React.createElement(TextField, __assign({\n    id: id\n  }, field, {\n    className: clsx('ra-input', \"ra-input-\".concat(source), className),\n    type: \"time\",\n    size: \"small\",\n    variant: variant,\n    margin: margin,\n    disabled: disabled || readOnly,\n    readOnly: readOnly,\n    error: (isTouched || isSubmitted) && invalid,\n    helperText: renderHelperText ? React.createElement(InputHelperText, {\n      touched: isTouched || isSubmitted,\n      error: error === null || error === void 0 ? void 0 : error.message,\n      helperText: helperText\n    }) : null,\n    label: React.createElement(FieldTitle, {\n      label: label,\n      source: source,\n      resource: resource,\n      isRequired: isRequired\n    }),\n    InputLabelProps: defaultInputLabelProps\n  }, sanitizeInputRestProps(rest)));\n};\nTimeInput.propTypes = {\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  resource: PropTypes.string,\n  source: PropTypes.string\n};\nvar leftPad = function (nb) {\n  if (nb === void 0) {\n    nb = 2;\n  }\n  return function (value) {\n    return ('0'.repeat(nb) + value).slice(-nb);\n  };\n};\nvar leftPad2 = leftPad(2);\n/**\n * @param {Date} value value to convert\n * @returns {String} A standardized time (hh:mm), to be passed to an <input type=\"time\" />\n */\nvar convertDateToString = function (value) {\n  if (!(value instanceof Date) || isNaN(value.getDate())) return '';\n  var hh = leftPad2(value.getHours());\n  var mm = leftPad2(value.getMinutes());\n  return \"\".concat(hh, \":\").concat(mm);\n};\n// hh:mm\nvar timeRegex = /^\\d{2}:\\d{2}$/;\nvar defaultInputLabelProps = {\n  shrink: true\n};\n/**\n * Converts a date from the dataProvider, with timezone, to a time string\n * without timezone for use in an <input type=\"time\" />.\n *\n * @param {Date | String} value date string or object\n */\nvar formatTime = function (value) {\n  // null, undefined and empty string values should not go through convertDateToString\n  // otherwise, it returns undefined and will make the input an uncontrolled one.\n  if (value == null || value === '') {\n    return '';\n  }\n  if (value instanceof Date) {\n    return convertDateToString(value);\n  }\n  // valid dates should not be converted\n  if (timeRegex.test(value)) {\n    return value;\n  }\n  return convertDateToString(new Date(value));\n};","map":{"version":3,"names":["React","PropTypes","clsx","TextField","useInput","FieldTitle","sanitizeInputRestProps","InputHelperText","parseTime","value","timeTokens","split","map","v","parseInt","today","Date","setHours","_a","setMinutes","_b","TimeInput","className","defaultValue","format","formatTime","label","helperText","margin","onBlur","onChange","source","resource","disabled","readOnly","_c","parse","validate","variant","rest","__rest","_d","__assign","field","fieldState","formState","id","isRequired","error","invalid","isTouched","isSubmitted","renderHelperText","createElement","concat","type","size","touched","message","InputLabelProps","defaultInputLabelProps","propTypes","oneOfType","string","bool","leftPad","nb","repeat","slice","leftPad2","convertDateToString","isNaN","getDate","hh","getHours","mm","getMinutes","timeRegex","shrink","test"],"sources":["../../../src/input/TimeInput.tsx"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}