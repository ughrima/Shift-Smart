{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport Typography from '@mui/material/Typography';\nimport { useRecordContext, useTranslate } from 'ra-core';\nimport purify from 'dompurify';\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nimport { fieldPropTypes } from './types';\nimport { genericMemo } from './genericMemo';\n/**\n * Render an HTML string as rich text\n *\n * Note: This component leverages the `dangerouslySetInnerHTML` attribute,\n * but uses the DomPurify library to sanitize the HTML before rendering it.\n *\n * It means it is safe from Cross-Site Scripting (XSS) attacks - but it's still\n * a good practice to sanitize the value server-side.\n *\n * @example\n * <RichTextField source=\"description\" />\n *\n * @example // remove all tags and output text only\n * <RichTextField source=\"description\" stripTags />\n */\nvar RichTextFieldImpl = function (props) {\n  var _a;\n  var className = props.className,\n    emptyText = props.emptyText,\n    source = props.source,\n    _b = props.stripTags,\n    stripTags = _b === void 0 ? false : _b,\n    purifyOptions = props.purifyOptions,\n    rest = __rest(props, [\"className\", \"emptyText\", \"source\", \"stripTags\", \"purifyOptions\"]);\n  var record = useRecordContext(props);\n  var value = (_a = get(record, source)) === null || _a === void 0 ? void 0 : _a.toString();\n  var translate = useTranslate();\n  return React.createElement(Typography, __assign({\n    className: className,\n    variant: \"body2\",\n    component: \"span\"\n  }, sanitizeFieldRestProps(rest)), value == null && emptyText ? translate(emptyText, {\n    _: emptyText\n  }) : stripTags ? removeTags(value) : React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: purify.sanitize(value, purifyOptions)\n    }\n  }));\n};\nRichTextFieldImpl.propTypes = __assign(__assign(__assign({}, Typography.propTypes), fieldPropTypes), {\n  stripTags: PropTypes.bool,\n  purifyOptions: PropTypes.any\n});\nRichTextFieldImpl.displayName = 'RichTextFieldImpl';\nexport var RichTextField = genericMemo(RichTextFieldImpl);\nexport var removeTags = function (input) {\n  return input ? input.replace(/<[^>]+>/gm, '') : '';\n};","map":{"version":3,"names":["React","PropTypes","get","Typography","useRecordContext","useTranslate","purify","sanitizeFieldRestProps","fieldPropTypes","genericMemo","RichTextFieldImpl","props","className","emptyText","source","_b","stripTags","purifyOptions","rest","__rest","record","value","_a","toString","translate","createElement","__assign","variant","component","_","removeTags","dangerouslySetInnerHTML","__html","sanitize","propTypes","bool","any","displayName","RichTextField","input","replace"],"sources":["../../../src/field/RichTextField.tsx"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,GAAG,MAAM,YAAY;AAC5B,OAAOC,UAA+B,MAAM,0BAA0B;AACtE,SAASC,gBAAgB,EAAEC,YAAY,QAAQ,SAAS;AACxD,OAAOC,MAAM,MAAM,WAAW;AAE9B,SAASC,sBAAsB,QAAQ,0BAA0B;AACjE,SAAqBC,cAAc,QAAQ,SAAS;AACpD,SAASC,WAAW,QAAQ,eAAe;AAE3C;;;;;;;;;;;;;;;AAeA,IAAMC,iBAAiB,GAAG,SAAAA,CAGtBC,KAAqC;;EAGjC,IAAAC,SAAS,GAMTD,KAAK,CAAAC,SANI;IACTC,SAAS,GAKTF,KAAK,CAAAE,SALI;IACTC,MAAM,GAINH,KAAK,CAAAG,MAJC;IACNC,EAAA,GAGAJ,KAAK,CAAAK,SAHY;IAAjBA,SAAS,GAAAD,EAAA,cAAG,KAAK,GAAAA,EAAA;IACjBE,aAAa,GAEbN,KAAK,CAAAM,aAFQ;IACVC,IAAI,GAAAC,MAAA,CACPR,KAAK,EAPH,kEAOL,CADU;EAEX,IAAMS,MAAM,GAAGhB,gBAAgB,CAACO,KAAK,CAAC;EACtC,IAAMU,KAAK,GAAG,CAAAC,EAAA,GAAApB,GAAG,CAACkB,MAAM,EAAEN,MAAM,CAAC,cAAAQ,EAAA,uBAAAA,EAAA,CAAEC,QAAQ,EAAE;EAC7C,IAAMC,SAAS,GAAGnB,YAAY,EAAE;EAEhC,OACIL,KAAA,CAAAyB,aAAA,CAACtB,UAAU,EAAAuB,QAAA;IACPd,SAAS,EAAEA,SAAS;IACpBe,OAAO,EAAC,OAAO;IACfC,SAAS,EAAC;EAAM,GACZrB,sBAAsB,CAACW,IAAI,CAAC,GAE/BG,KAAK,IAAI,IAAI,IAAIR,SAAS,GACvBW,SAAS,CAACX,SAAS,EAAE;IAAEgB,CAAC,EAAEhB;EAAS,CAAE,CAAC,GACtCG,SAAS,GACTc,UAAU,CAACT,KAAK,CAAC,GAEjBrB,KAAA,CAAAyB,aAAA;IACIM,uBAAuB,EAAE;MACrBC,MAAM,EAAE1B,MAAM,CAAC2B,QAAQ,CAACZ,KAAK,EAAEJ,aAAa;;EAC/C,EAER,CACQ;AAErB,CAAC;AAEDP,iBAAiB,CAACwB,SAAS,GAAAR,QAAA,CAAAA,QAAA,CAAAA,QAAA,KAEpBvB,UAAU,CAAC+B,SAAS,GACpB1B,cAAc;EACjBQ,SAAS,EAAEf,SAAS,CAACkC,IAAI;EACzBlB,aAAa,EAAEhB,SAAS,CAACmC;AAAG,EAC/B;AACD1B,iBAAiB,CAAC2B,WAAW,GAAG,mBAAmB;AAEnD,OAAO,IAAMC,aAAa,GAAG7B,WAAW,CAACC,iBAAiB,CAAC;AAkB3D,OAAO,IAAMoB,UAAU,GAAG,SAAAA,CAACS,KAAa;EACpC,OAAAA,KAAK,GAAGA,KAAK,CAACC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,GAAG,EAAE;AAA3C,CAA2C","ignoreList":[]},"metadata":{},"sourceType":"module"}