{"ast":null,"code":"import { useEffect } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport get from 'lodash/get';\nimport { useRecordContext } from '../controller';\n/*\n * This hook updates the input with the default value if default value is present\n * and field input is not already populated or dirty\n */\nexport var useApplyInputDefaultValues = function (_a) {\n  var inputProps = _a.inputProps,\n    isArrayInput = _a.isArrayInput,\n    fieldArrayInputControl = _a.fieldArrayInputControl;\n  var defaultValue = inputProps.defaultValue,\n    source = inputProps.source;\n  var record = useRecordContext(inputProps);\n  var _b = useFormContext(),\n    getValues = _b.getValues,\n    resetField = _b.resetField,\n    getFieldState = _b.getFieldState,\n    formState = _b.formState,\n    reset = _b.reset;\n  var recordValue = get(record, source);\n  var formValue = get(getValues(), source);\n  var isDirty = getFieldState(source, formState).isDirty;\n  useEffect(function () {\n    if (defaultValue == null || formValue != null || recordValue != null || isDirty) {\n      return;\n    }\n    // Side note: For Array Input but checked for all to avoid possible regression\n    // Since we use get(record, source), if source is like foo.23.bar,\n    // this effect will run. However we only want to set the default value\n    // for the subfield bar if the record actually has a value for foo.23\n    var pathContainsIndex = source.split('.').some(function (pathPart) {\n      return numericRegex.test(pathPart);\n    });\n    if (pathContainsIndex) {\n      var parentPath = source.split('.').slice(0, -1).join('.');\n      var parentValue = get(getValues(), parentPath);\n      if (parentValue == null) {\n        // the parent is undefined, so we don't want to set the default value\n        return;\n      }\n    }\n    if (isArrayInput) {\n      if (!fieldArrayInputControl) {\n        throw new Error('useApplyInputDefaultValues: No fieldArrayInputControl passed in props for array input usage');\n      }\n      // We need to update inputs nested in array using react hook forms\n      // own array controller rather then the generic reset to prevent control losing\n      // context of the nested inputs\n      fieldArrayInputControl.replace(defaultValue);\n      // resets the form so that control no longer sees the form as dirty after\n      // defaults applied\n      reset({}, {\n        keepValues: true\n      });\n      return;\n    }\n    resetField(source, {\n      defaultValue: defaultValue\n    });\n  });\n};\nvar numericRegex = /^\\d+$/;","map":{"version":3,"names":["useEffect","useFormContext","get","useRecordContext","useApplyInputDefaultValues","_a","inputProps","isArrayInput","fieldArrayInputControl","defaultValue","source","record","_b","getValues","resetField","getFieldState","formState","reset","recordValue","formValue","isDirty","pathContainsIndex","split","some","pathPart","numericRegex","test","parentPath","slice","join","parentValue","Error","replace","keepValues"],"sources":["../../../src/form/useApplyInputDefaultValues.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAGIC,cAAc,QACX,iBAAiB;AACxB,OAAOC,GAAG,MAAM,YAAY;AAC5B,SAASC,gBAAgB,QAAQ,eAAe;AAiBhD;;;;AAIA,OAAO,IAAMC,0BAA0B,GAAG,SAAAA,CAACC,EAInC;MAHJC,UAAU,GAAAD,EAAA,CAAAC,UAAA;IACVC,YAAY,GAAAF,EAAA,CAAAE,YAAA;IACZC,sBAAsB,GAAAH,EAAA,CAAAG,sBAAA;EAEd,IAAAC,YAAY,GAAaH,UAAU,CAAAG,YAAvB;IAAEC,MAAM,GAAKJ,UAAU,CAAAI,MAAf;EAC5B,IAAMC,MAAM,GAAGR,gBAAgB,CAACG,UAAU,CAAC;EACrC,IAAAM,EAAA,GAMFX,cAAc,EAAE;IALhBY,SAAS,GAAAD,EAAA,CAAAC,SAAA;IACTC,UAAU,GAAAF,EAAA,CAAAE,UAAA;IACVC,aAAa,GAAAH,EAAA,CAAAG,aAAA;IACbC,SAAS,GAAAJ,EAAA,CAAAI,SAAA;IACTC,KAAK,GAAAL,EAAA,CAAAK,KACW;EACpB,IAAMC,WAAW,GAAGhB,GAAG,CAACS,MAAM,EAAED,MAAM,CAAC;EACvC,IAAMS,SAAS,GAAGjB,GAAG,CAACW,SAAS,EAAE,EAAEH,MAAM,CAAC;EAClC,IAAAU,OAAO,GAAKL,aAAa,CAACL,MAAM,EAAEM,SAAS,CAAC,CAAAI,OAArC;EAEfpB,SAAS,CAAC;IACN,IACIS,YAAY,IAAI,IAAI,IACpBU,SAAS,IAAI,IAAI,IACjBD,WAAW,IAAI,IAAI,IACnBE,OAAO,EACT;MACE;;IAGJ;IACA;IACA;IACA;IACA,IAAMC,iBAAiB,GAAGX,MAAM,CAC3BY,KAAK,CAAC,GAAG,CAAC,CACVC,IAAI,CAAC,UAAAC,QAAQ;MAAI,OAAAC,YAAY,CAACC,IAAI,CAACF,QAAQ,CAAC;IAA3B,CAA2B,CAAC;IAClD,IAAIH,iBAAiB,EAAE;MACnB,IAAMM,UAAU,GAAGjB,MAAM,CAACY,KAAK,CAAC,GAAG,CAAC,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;MAC3D,IAAMC,WAAW,GAAG5B,GAAG,CAACW,SAAS,EAAE,EAAEc,UAAU,CAAC;MAChD,IAAIG,WAAW,IAAI,IAAI,EAAE;QACrB;QACA;;;IAIR,IAAIvB,YAAY,EAAE;MACd,IAAI,CAACC,sBAAsB,EAAE;QACzB,MAAM,IAAIuB,KAAK,CACX,6FAA6F,CAChG;;MAGL;MACA;MACA;MACAvB,sBAAsB,CAACwB,OAAO,CAACvB,YAAY,CAAC;MAC5C;MACA;MACAQ,KAAK,CAAC,EAAE,EAAE;QAAEgB,UAAU,EAAE;MAAI,CAAE,CAAC;MAE/B;;IAGJnB,UAAU,CAACJ,MAAM,EAAE;MAAED,YAAY,EAAAA;IAAA,CAAE,CAAC;EACxC,CAAC,CAAC;AACN,CAAC;AAED,IAAMgB,YAAY,GAAG,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}