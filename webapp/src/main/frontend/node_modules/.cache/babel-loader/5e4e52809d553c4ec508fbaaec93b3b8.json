{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport Typography from '@mui/material/Typography';\nimport { useRecordContext, useTranslate } from 'ra-core';\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nimport { fieldPropTypes } from './types';\nimport { Link } from '@mui/material';\n/**\n * Render a link to a file based on a path contained in a record field\n *\n * @example\n * import { FileField } from 'react-admin';\n *\n * <FileField source=\"url\" title=\"title\" />\n *\n * // renders the record { id: 123, url: 'doc.pdf', title: 'Presentation' } as\n * <div>\n *     <a href=\"doc.pdf\" title=\"Presentation\">Presentation</a>\n * </div>\n */\nexport var FileField = function (props) {\n  var _a;\n  var className = props.className,\n    emptyText = props.emptyText,\n    source = props.source,\n    title = props.title,\n    src = props.src,\n    target = props.target,\n    download = props.download,\n    ping = props.ping,\n    rel = props.rel,\n    rest = __rest(props, [\"className\", \"emptyText\", \"source\", \"title\", \"src\", \"target\", \"download\", \"ping\", \"rel\"]);\n  var record = useRecordContext(props);\n  var sourceValue = get(record, source);\n  var translate = useTranslate();\n  if (!sourceValue) {\n    return emptyText ? React.createElement(Typography, __assign({\n      component: \"span\",\n      variant: \"body2\",\n      className: className\n    }, sanitizeFieldRestProps(rest)), emptyText && translate(emptyText, {\n      _: emptyText\n    })) : React.createElement(Root, __assign({\n      className: className\n    }, sanitizeFieldRestProps(rest)));\n  }\n  if (Array.isArray(sourceValue)) {\n    return React.createElement(StyledList, __assign({\n      className: className\n    }, sanitizeFieldRestProps(rest)), sourceValue.map(function (file, index) {\n      var fileTitleValue = get(file, title) || title;\n      var srcValue = get(file, src) || title;\n      return React.createElement(\"li\", {\n        key: index\n      }, React.createElement(Link, {\n        href: srcValue,\n        title: fileTitleValue,\n        target: target,\n        download: download,\n        ping: ping,\n        rel: rel,\n        variant: \"body2\",\n        onClick: function (e) {\n          return e.stopPropagation();\n        }\n      }, fileTitleValue));\n    }));\n  }\n  var titleValue = ((_a = get(record, title)) === null || _a === void 0 ? void 0 : _a.toString()) || title;\n  return React.createElement(Root, __assign({\n    className: className\n  }, sanitizeFieldRestProps(rest)), React.createElement(Link, {\n    href: sourceValue === null || sourceValue === void 0 ? void 0 : sourceValue.toString(),\n    title: titleValue,\n    target: target,\n    download: download,\n    ping: ping,\n    rel: rel,\n    variant: \"body2\"\n  }, titleValue));\n};\nFileField.propTypes = __assign(__assign({}, fieldPropTypes), {\n  src: PropTypes.string,\n  title: PropTypes.string,\n  target: PropTypes.string,\n  download: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  ping: PropTypes.string,\n  rel: PropTypes.string\n});\nvar PREFIX = 'RaFileField';\nvar Root = styled('div', {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})({\n  display: 'inline-block'\n});\nvar StyledList = styled('ul')({\n  display: 'inline-block'\n});","map":{"version":3,"names":["React","styled","PropTypes","get","Typography","useRecordContext","useTranslate","sanitizeFieldRestProps","fieldPropTypes","Link","FileField","props","className","emptyText","source","title","src","target","download","ping","rel","rest","__rest","record","sourceValue","translate","createElement","__assign","component","variant","_","Root","Array","isArray","StyledList","map","file","index","fileTitleValue","srcValue","key","href","onClick","e","stopPropagation","titleValue","_a","toString","propTypes","string","oneOfType","bool","PREFIX","name","overridesResolver","styles","root","display"],"sources":["../../../src/field/FileField.tsx"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,GAAG,MAAM,YAAY;AAC5B,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,gBAAgB,EAAEC,YAAY,QAAQ,SAAS;AAExD,SAASC,sBAAsB,QAAQ,0BAA0B;AACjE,SAAqBC,cAAc,QAAQ,SAAS;AAEpD,SAASC,IAAI,QAAQ,eAAe;AAEpC;;;;;;;;;;;;;AAaA,OAAO,IAAMC,SAAS,GAAG,SAAAA,CAGrBC,KAAiC;;EAG7B,IAAAC,SAAS,GAUTD,KAAK,CAAAC,SAVI;IACTC,SAAS,GASTF,KAAK,CAAAE,SATI;IACTC,MAAM,GAQNH,KAAK,CAAAG,MARC;IACNC,KAAK,GAOLJ,KAAK,CAAAI,KAPA;IACLC,GAAG,GAMHL,KAAK,CAAAK,GANF;IACHC,MAAM,GAKNN,KAAK,CAAAM,MALC;IACNC,QAAQ,GAIRP,KAAK,CAAAO,QAJG;IACRC,IAAI,GAGJR,KAAK,CAAAQ,IAHD;IACJC,GAAG,GAEHT,KAAK,CAAAS,GAFF;IACAC,IAAI,GAAAC,MAAA,CACPX,KAAK,EAXH,yFAWL,CADU;EAEX,IAAMY,MAAM,GAAGlB,gBAAgB,CAACM,KAAK,CAAC;EACtC,IAAMa,WAAW,GAAGrB,GAAG,CAACoB,MAAM,EAAET,MAAM,CAAC;EACvC,IAAMW,SAAS,GAAGnB,YAAY,EAAE;EAEhC,IAAI,CAACkB,WAAW,EAAE;IACd,OAAOX,SAAS,GACZb,KAAA,CAAA0B,aAAA,CAACtB,UAAU,EAAAuB,QAAA;MACPC,SAAS,EAAC,MAAM;MAChBC,OAAO,EAAC,OAAO;MACfjB,SAAS,EAAEA;IAAS,GAChBL,sBAAsB,CAACc,IAAI,CAAC,GAE/BR,SAAS,IAAIY,SAAS,CAACZ,SAAS,EAAE;MAAEiB,CAAC,EAAEjB;IAAS,CAAE,CAAC,CAC3C,GAEbb,KAAA,CAAA0B,aAAA,CAACK,IAAI,EAAAJ,QAAA;MAACf,SAAS,EAAEA;IAAS,GAAML,sBAAsB,CAACc,IAAI,CAAC,EAC/D;;EAGL,IAAIW,KAAK,CAACC,OAAO,CAACT,WAAW,CAAC,EAAE;IAC5B,OACIxB,KAAA,CAAA0B,aAAA,CAACQ,UAAU,EAAAP,QAAA;MAACf,SAAS,EAAEA;IAAS,GAAML,sBAAsB,CAACc,IAAI,CAAC,GAC7DG,WAAW,CAACW,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK;MACzB,IAAMC,cAAc,GAAGnC,GAAG,CAACiC,IAAI,EAAErB,KAAK,CAAC,IAAIA,KAAK;MAChD,IAAMwB,QAAQ,GAAGpC,GAAG,CAACiC,IAAI,EAAEpB,GAAG,CAAC,IAAID,KAAK;MAExC,OACIf,KAAA,CAAA0B,aAAA;QAAIc,GAAG,EAAEH;MAAK,GACVrC,KAAA,CAAA0B,aAAA,CAACjB,IAAI;QACDgC,IAAI,EAAEF,QAAQ;QACdxB,KAAK,EAAEuB,cAAc;QACrBrB,MAAM,EAAEA,MAAM;QACdC,QAAQ,EAAEA,QAAQ;QAClBC,IAAI,EAAEA,IAAI;QACVC,GAAG,EAAEA,GAAG;QACRS,OAAO,EAAC,OAAO;QACfa,OAAO,EAAE,SAAAA,CAAAC,CAAC;UAAI,OAAAA,CAAC,CAACC,eAAe,EAAE;QAAnB;MAAmB,GAEhCN,cAAc,CACZ,CACN;IAEb,CAAC,CAAC,CACO;;EAIrB,IAAMO,UAAU,GAAG,EAAAC,EAAA,GAAA3C,GAAG,CAACoB,MAAM,EAAER,KAAK,CAAC,cAAA+B,EAAA,uBAAAA,EAAA,CAAEC,QAAQ,EAAE,KAAIhC,KAAK;EAE1D,OACIf,KAAA,CAAA0B,aAAA,CAACK,IAAI,EAAAJ,QAAA;IAACf,SAAS,EAAEA;EAAS,GAAML,sBAAsB,CAACc,IAAI,CAAC,GACxDrB,KAAA,CAAA0B,aAAA,CAACjB,IAAI;IACDgC,IAAI,EAAEjB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEuB,QAAQ,EAAE;IAC7BhC,KAAK,EAAE8B,UAAU;IACjB5B,MAAM,EAAEA,MAAM;IACdC,QAAQ,EAAEA,QAAQ;IAClBC,IAAI,EAAEA,IAAI;IACVC,GAAG,EAAEA,GAAG;IACRS,OAAO,EAAC;EAAO,GAEdgB,UAAU,CACR,CACJ;AAEf,CAAC;AAcDnC,SAAS,CAACsC,SAAS,GAAArB,QAAA,CAAAA,QAAA,KACZnB,cAAc;EACjBQ,GAAG,EAAEd,SAAS,CAAC+C,MAAM;EACrBlC,KAAK,EAAEb,SAAS,CAAC+C,MAAM;EACvBhC,MAAM,EAAEf,SAAS,CAAC+C,MAAM;EACxB/B,QAAQ,EAAEhB,SAAS,CAACgD,SAAS,CAAC,CAAChD,SAAS,CAACiD,IAAI,EAAEjD,SAAS,CAAC+C,MAAM,CAAC,CAAC;EACjE9B,IAAI,EAAEjB,SAAS,CAAC+C,MAAM;EACtB7B,GAAG,EAAElB,SAAS,CAAC+C;AAAM,EACxB;AAED,IAAMG,MAAM,GAAG,aAAa;AAE5B,IAAMrB,IAAI,GAAG9B,MAAM,CAAC,KAAK,EAAE;EACvBoD,IAAI,EAAED,MAAM;EACZE,iBAAiB,EAAE,SAAAA,CAAC3C,KAAK,EAAE4C,MAAM;IAAK,OAAAA,MAAM,CAACC,IAAI;EAAX;CACzC,CAAC,CAAC;EACCC,OAAO,EAAE;CACZ,CAAC;AAEF,IAAMvB,UAAU,GAAGjC,MAAM,CAAC,IAAI,CAAC,CAAC;EAC5BwD,OAAO,EAAE;CACZ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}