{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@mui/material';\nimport { useReferenceOneFieldController, useRecordContext, ResourceContextProvider, useCreatePath, useTranslate } from 'ra-core';\nimport { fieldPropTypes } from './types';\nimport { ReferenceFieldView } from './ReferenceField';\n/**\n * Render the related record in a one-to-one relationship\n *\n * Expects a single field as child\n *\n * @example // display the bio of the current author\n * <ReferenceOneField reference=\"bios\" target=\"author_id\">\n *     <TextField source=\"body\" />\n * </ReferenceOneField>\n */\nexport var ReferenceOneField = function (props) {\n  var children = props.children,\n    reference = props.reference,\n    _a = props.source,\n    source = _a === void 0 ? 'id' : _a,\n    target = props.target,\n    emptyText = props.emptyText,\n    sort = props.sort,\n    filter = props.filter,\n    _b = props.link,\n    link = _b === void 0 ? false : _b,\n    queryOptions = props.queryOptions;\n  var record = useRecordContext(props);\n  var createPath = useCreatePath();\n  var translate = useTranslate();\n  var _c = useReferenceOneFieldController({\n      record: record,\n      reference: reference,\n      source: source,\n      target: target,\n      sort: sort,\n      filter: filter,\n      queryOptions: queryOptions\n    }),\n    isLoading = _c.isLoading,\n    isFetching = _c.isFetching,\n    referenceRecord = _c.referenceRecord,\n    error = _c.error,\n    refetch = _c.refetch;\n  var resourceLinkPath = link === false ? false : createPath({\n    resource: reference,\n    id: referenceRecord === null || referenceRecord === void 0 ? void 0 : referenceRecord.id,\n    type: typeof link === 'function' ? link(record, reference) : link\n  });\n  return !record || !isLoading && referenceRecord == null ? emptyText ? React.createElement(Typography, {\n    component: \"span\",\n    variant: \"body2\"\n  }, emptyText && translate(emptyText, {\n    _: emptyText\n  })) : null : React.createElement(ResourceContextProvider, {\n    value: reference\n  }, React.createElement(ReferenceFieldView, {\n    isLoading: isLoading,\n    isFetching: isFetching,\n    referenceRecord: referenceRecord,\n    resourceLinkPath: resourceLinkPath,\n    reference: reference,\n    refetch: refetch,\n    error: error\n  }, children));\n};\nReferenceOneField.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  label: fieldPropTypes.label,\n  record: PropTypes.any,\n  reference: PropTypes.string.isRequired,\n  source: PropTypes.string,\n  target: PropTypes.string.isRequired,\n  queryOptions: PropTypes.any\n};\n// disable sorting on this field by default as its default source prop ('id')\n// will match the default sort ({ field: 'id', order: 'DESC'})\n// leading to an incorrect sort indicator in a datagrid header\nReferenceOneField.sortable = false;","map":{"version":3,"names":["React","PropTypes","Typography","useReferenceOneFieldController","useRecordContext","ResourceContextProvider","useCreatePath","useTranslate","fieldPropTypes","ReferenceFieldView","ReferenceOneField","props","children","reference","_a","source","target","emptyText","sort","filter","_b","link","queryOptions","record","createPath","translate","_c","isLoading","isFetching","referenceRecord","error","refetch","resourceLinkPath","resource","id","type","createElement","component","variant","_","value","propTypes","node","className","string","label","any","isRequired","sortable"],"sources":["../../../src/field/ReferenceOneField.tsx"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}