{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { useEffect } from 'react';\nimport { useController } from 'react-hook-form';\nimport get from 'lodash/get';\nimport { useRecordContext } from '../controller';\nimport { composeValidators } from './validate';\nimport isRequired from './isRequired';\nimport { useFormGroupContext } from './useFormGroupContext';\nimport { useFormGroups } from './useFormGroups';\nimport { useApplyInputDefaultValues } from './useApplyInputDefaultValues';\nimport { useEvent } from '../util';\n// replace null or undefined values by empty string to avoid controlled/uncontrolled input warning\nvar defaultFormat = function (value) {\n  return value == null ? '' : value;\n};\n// parse empty string into null as it's more suitable for a majority of backends\nvar defaultParse = function (value) {\n  return value === '' ? null : value;\n};\nexport var useInput = function (props) {\n  var defaultValue = props.defaultValue,\n    _a = props.format,\n    format = _a === void 0 ? defaultFormat : _a,\n    id = props.id,\n    isRequiredOption = props.isRequired,\n    name = props.name,\n    initialOnBlur = props.onBlur,\n    initialOnChange = props.onChange,\n    _b = props.parse,\n    parse = _b === void 0 ? defaultParse : _b,\n    source = props.source,\n    validate = props.validate,\n    options = __rest(props, [\"defaultValue\", \"format\", \"id\", \"isRequired\", \"name\", \"onBlur\", \"onChange\", \"parse\", \"source\", \"validate\"]);\n  var finalName = name || source;\n  var formGroupName = useFormGroupContext();\n  var formGroups = useFormGroups();\n  var record = useRecordContext();\n  useEffect(function () {\n    if (!formGroups || formGroupName == null) {\n      return;\n    }\n    formGroups.registerField(source, formGroupName);\n    return function () {\n      formGroups.unregisterField(source, formGroupName);\n    };\n  }, [formGroups, formGroupName, source]);\n  var sanitizedValidate = Array.isArray(validate) ? composeValidators(validate) : validate;\n  // Fetch the defaultValue from the record if available or apply the provided defaultValue.\n  // This ensures dynamically added inputs have their value set correctly (ArrayInput for example).\n  // We don't do this for the form level defaultValues so that it works as it should in react-hook-form\n  // (i.e. field level defaultValue override form level defaultValues for this field).\n  var _c = useController(__assign(__assign({\n      name: finalName,\n      defaultValue: get(record, source, defaultValue),\n      rules: {\n        validate: function (value, values) {\n          return __awaiter(void 0, void 0, void 0, function () {\n            var error;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  if (!sanitizedValidate) return [2 /*return*/, true];\n                  return [4 /*yield*/, sanitizedValidate(value, values, props)];\n                case 1:\n                  error = _a.sent();\n                  if (!error) return [2 /*return*/, true];\n                  // react-hook-form expects errors to be plain strings but our validators can return objects\n                  // that have message and args.\n                  // To avoid double translation for users that validate with a schema instead of our validators\n                  // we use a special format for our validators errors.\n                  // The ValidationError component will check for this format and extract the message and args\n                  // to translate.\n                  return [2 /*return*/, \"@@react-admin@@\".concat(JSON.stringify(error))];\n              }\n            });\n          });\n        }\n      }\n    }, options), {\n      // Workaround for https://github.com/react-hook-form/react-hook-form/issues/10907\n      // FIXME - remove when fixed\n      // @ts-ignore - only exists since react-hook-form 7.46.0\n      disabled: options.disabled || undefined\n    })),\n    controllerField = _c.field,\n    fieldState = _c.fieldState,\n    formState = _c.formState;\n  // Because our forms may receive an asynchronously loaded record for instance,\n  // they may reset their default values which would override the input default value.\n  // This hook ensures that the input default value is applied when a new record is loaded but has\n  // no value for the input.\n  useApplyInputDefaultValues({\n    inputProps: props\n  });\n  var onBlur = useEvent(function () {\n    var event = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      event[_i] = arguments[_i];\n    }\n    controllerField.onBlur();\n    if (initialOnBlur) {\n      initialOnBlur.apply(void 0, event);\n    }\n  });\n  var onChange = useEvent(function () {\n    var _a, _b, _c, _d, _e;\n    var event = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      event[_i] = arguments[_i];\n    }\n    var eventOrValue = props.type === 'checkbox' && ((_b = (_a = event[0]) === null || _a === void 0 ? void 0 : _a.target) === null || _b === void 0 ? void 0 : _b.value) === 'on' ? event[0].target.checked : (_e = (_d = (_c = event[0]) === null || _c === void 0 ? void 0 : _c.target) === null || _d === void 0 ? void 0 : _d.value) !== null && _e !== void 0 ? _e : event[0];\n    controllerField.onChange(parse ? parse(eventOrValue) : eventOrValue);\n    if (initialOnChange) {\n      initialOnChange.apply(void 0, event);\n    }\n  });\n  var field = __assign(__assign({}, controllerField), {\n    value: format ? format(controllerField.value) : controllerField.value,\n    onBlur: onBlur,\n    onChange: onChange\n  });\n  return {\n    id: id || source,\n    field: field,\n    fieldState: fieldState,\n    formState: formState,\n    isRequired: isRequiredOption || isRequired(validate)\n  };\n};","map":{"version":3,"names":["useEffect","useController","get","useRecordContext","composeValidators","isRequired","useFormGroupContext","useFormGroups","useApplyInputDefaultValues","useEvent","defaultFormat","value","defaultParse","useInput","props","defaultValue","_a","format","id","isRequiredOption","name","initialOnBlur","onBlur","initialOnChange","onChange","_b","parse","source","validate","options","__rest","finalName","formGroupName","formGroups","record","registerField","unregisterField","sanitizedValidate","Array","isArray","_c","__assign","rules","values","__awaiter","error","sent","concat","JSON","stringify","disabled","undefined","controllerField","field","fieldState","formState","inputProps","event","_i","arguments","length","apply","eventOrValue","type","target","checked","_e","_d"],"sources":["../../../src/form/useInput.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}