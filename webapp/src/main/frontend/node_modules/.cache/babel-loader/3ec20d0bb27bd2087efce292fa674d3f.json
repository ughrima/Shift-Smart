{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { useMemo } from 'react';\nimport { useQuery, useQueryClient } from 'react-query';\nimport { useDataProvider } from './useDataProvider';\nvar MAX_DATA_LENGTH_TO_CACHE = 100;\n/**\n * Call the dataProvider.getList() method and return the resolved result\n * as well as the loading state.\n *\n * The return value updates according to the request state:\n *\n * - start: { isLoading: true, refetch }\n * - success: { data: [data from store], total: [total from response], isLoading: false, refetch }\n * - error: { error: [error from response], isLoading: false, refetch }\n *\n * This hook will return the cached result when called a second time\n * with the same parameters, until the response arrives.\n *\n * @param {string} resource The resource name, e.g. 'posts'\n * @param {Params} params The getList parameters { pagination, sort, filter, meta }\n * @param {Object} options Options object to pass to the queryClient.\n * May include side effects to be executed upon success or failure, e.g. { onSuccess: () => { refresh(); } }\n *\n * @typedef Params\n * @prop params.pagination The request pagination { page, perPage }, e.g. { page: 1, perPage: 10 }\n * @prop params.sort The request sort { field, order }, e.g. { field: 'id', order: 'DESC' }\n * @prop params.filter The request filters, e.g. { title: 'hello, world' }\n * @prop params.meta Optional meta parameters\n *\n * @returns The current request state. Destructure as { data, total, error, isLoading, refetch }.\n *\n * @example\n *\n * import { useGetList } from 'react-admin';\n *\n * const LatestNews = () => {\n *     const { data, total, isLoading, error } = useGetList(\n *         'posts',\n *         { pagination: { page: 1, perPage: 10 }, sort: { field: 'published_at', order: 'DESC' } }\n *     );\n *     if (isLoading) { return <Loading />; }\n *     if (error) { return <p>ERROR</p>; }\n *     return <ul>{data.map(item =>\n *         <li key={item.id}>{item.title}</li>\n *     )}</ul>;\n * };\n */\nexport var useGetList = function (resource, params, options) {\n  if (params === void 0) {\n    params = {};\n  }\n  var _a = params.pagination,\n    pagination = _a === void 0 ? {\n      page: 1,\n      perPage: 25\n    } : _a,\n    _b = params.sort,\n    sort = _b === void 0 ? {\n      field: 'id',\n      order: 'DESC'\n    } : _b,\n    _c = params.filter,\n    filter = _c === void 0 ? {} : _c,\n    meta = params.meta;\n  var dataProvider = useDataProvider();\n  var queryClient = useQueryClient();\n  var result = useQuery([resource, 'getList', {\n    pagination: pagination,\n    sort: sort,\n    filter: filter,\n    meta: meta\n  }], function () {\n    return dataProvider.getList(resource, {\n      pagination: pagination,\n      sort: sort,\n      filter: filter,\n      meta: meta\n    }).then(function (_a) {\n      var data = _a.data,\n        total = _a.total,\n        pageInfo = _a.pageInfo;\n      return {\n        data: data,\n        total: total,\n        pageInfo: pageInfo\n      };\n    });\n  }, __assign(__assign({}, options), {\n    onSuccess: function (value) {\n      // optimistically populate the getOne cache\n      if ((value === null || value === void 0 ? void 0 : value.data) && value.data.length <= MAX_DATA_LENGTH_TO_CACHE) {\n        value.data.forEach(function (record) {\n          queryClient.setQueryData([resource, 'getOne', {\n            id: String(record.id),\n            meta: meta\n          }], function (oldRecord) {\n            return oldRecord !== null && oldRecord !== void 0 ? oldRecord : record;\n          });\n        });\n      }\n      // execute call-time onSuccess if provided\n      if (options === null || options === void 0 ? void 0 : options.onSuccess) {\n        options.onSuccess(value);\n      }\n    }\n  }));\n  return useMemo(function () {\n    var _a, _b, _c;\n    return result.data ? __assign(__assign({}, result), {\n      data: (_a = result.data) === null || _a === void 0 ? void 0 : _a.data,\n      total: (_b = result.data) === null || _b === void 0 ? void 0 : _b.total,\n      pageInfo: (_c = result.data) === null || _c === void 0 ? void 0 : _c.pageInfo\n    }) : result;\n  }, [result]);\n};","map":{"version":3,"names":["useMemo","useQuery","useQueryClient","useDataProvider","MAX_DATA_LENGTH_TO_CACHE","useGetList","resource","params","options","_a","pagination","page","perPage","_b","sort","field","order","_c","filter","meta","dataProvider","queryClient","result","getList","then","data","total","pageInfo","__assign","onSuccess","value","length","forEach","record","setQueryData","id","String","oldRecord"],"sources":["../../../src/dataProvider/useGetList.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}