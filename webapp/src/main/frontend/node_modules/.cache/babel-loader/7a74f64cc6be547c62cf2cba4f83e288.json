{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { cloneElement, useMemo, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { sanitizeListRestProps, useListContext, useResourceContext, useResourceDefinition } from 'ra-core';\nimport TopToolbar from '../layout/TopToolbar';\nimport { CreateButton, ExportButton } from '../button';\nimport { FilterContext } from './FilterContext';\nimport { FilterButton } from './filter';\n/**\n * Action Toolbar for the List view\n *\n * Internal component. If you want to add or remove actions for a List view,\n * write your own ListActions Component. Then, in the <List> component,\n * use it in the `actions` prop to pass a custom component.\n *\n * @example\n * import { cloneElement } from 'react';\n * import Button from '@mui/material/Button';\n * import { TopToolbar, List, CreateButton, ExportButton } from 'react-admin';\n *\n * const PostListActions = ({ filters }) => (\n *     <TopToolbar>\n *         { cloneElement(filters, { context: 'button' }) }\n *         <CreateButton/>\n *         <ExportButton/>\n *         // Add your custom actions here //\n *         <Button onClick={customAction}>Custom Action</Button>\n *     </TopToolbar>\n * );\n *\n * export const PostList = () => (\n *     <List actions={<PostListActions />}>\n *         ...\n *     </List>\n * );\n */\nexport var ListActions = function (props) {\n  var className = props.className,\n    filtersProp = props.filters,\n    _ = props.hasCreate,\n    _a = props.selectedIds,\n    selectedIds = _a === void 0 ? defaultSelectedIds : _a,\n    _b = props.onUnselectItems,\n    onUnselectItems = _b === void 0 ? defaultOnUnselectItems : _b,\n    rest = __rest(props, [\"className\", \"filters\", \"hasCreate\", \"selectedIds\", \"onUnselectItems\"]);\n  var _c = useListContext(__assign(__assign({}, props), {\n      selectedIds: selectedIds,\n      onUnselectItems: onUnselectItems\n    })),\n    sort = _c.sort,\n    displayedFilters = _c.displayedFilters,\n    filterValues = _c.filterValues,\n    exporter = _c.exporter,\n    showFilter = _c.showFilter,\n    total = _c.total;\n  var resource = useResourceContext(props);\n  var hasCreate = useResourceDefinition(props).hasCreate;\n  var filters = useContext(FilterContext) || filtersProp;\n  return useMemo(function () {\n    return React.createElement(TopToolbar, __assign({\n      className: className\n    }, sanitizeListRestProps(rest)), filtersProp ? cloneElement(filtersProp, {\n      resource: resource,\n      showFilter: showFilter,\n      displayedFilters: displayedFilters,\n      filterValues: filterValues,\n      context: 'button'\n    }) : filters && React.createElement(FilterButton, null), hasCreate && React.createElement(CreateButton, null), exporter !== false && React.createElement(ExportButton, {\n      disabled: total === 0,\n      resource: resource,\n      sort: sort,\n      filterValues: filterValues\n    }));\n  }, /* eslint-disable react-hooks/exhaustive-deps */\n  [resource, displayedFilters, filterValues, filtersProp, showFilter, filters, total, className, sort, exporter, hasCreate]);\n};\nListActions.propTypes = {\n  className: PropTypes.string,\n  sort: PropTypes.shape({\n    field: PropTypes.string,\n    order: PropTypes.oneOf(['ASC', 'DESC'])\n  }),\n  displayedFilters: PropTypes.object,\n  exporter: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  filters: PropTypes.element,\n  filterValues: PropTypes.object,\n  hasCreate: PropTypes.bool,\n  resource: PropTypes.string,\n  onUnselectItems: PropTypes.func,\n  selectedIds: PropTypes.arrayOf(PropTypes.any),\n  showFilter: PropTypes.func,\n  total: PropTypes.number\n};\nvar defaultSelectedIds = [];\nvar defaultOnUnselectItems = function () {\n  return null;\n};","map":{"version":3,"names":["React","cloneElement","useMemo","useContext","PropTypes","sanitizeListRestProps","useListContext","useResourceContext","useResourceDefinition","TopToolbar","CreateButton","ExportButton","FilterContext","FilterButton","ListActions","props","className","filtersProp","filters","_","hasCreate","_a","selectedIds","defaultSelectedIds","_b","onUnselectItems","defaultOnUnselectItems","rest","__rest","_c","__assign","sort","displayedFilters","filterValues","exporter","showFilter","total","resource","createElement","context","disabled","propTypes","string","shape","field","order","oneOf","object","oneOfType","func","bool","element","arrayOf","any","number"],"sources":["../../../src/list/ListActions.tsx"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,YAAY,EAAEC,OAAO,EAAEC,UAAU,QAAsB,OAAO;AACvE,OAAOC,SAAS,MAAM,YAAY;AAClC,SACIC,qBAAqB,EAIrBC,cAAc,EACdC,kBAAkB,EAClBC,qBAAqB,QAClB,SAAS;AAGhB,OAAOC,UAAU,MAAM,sBAAsB;AAC7C,SAASC,YAAY,EAAEC,YAAY,QAAQ,WAAW;AACtD,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,YAAY,QAAQ,UAAU;AAEvC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,OAAO,IAAMC,WAAW,GAAG,SAAAA,CAACC,KAAuB;EAE3C,IAAAC,SAAS,GAMTD,KAAK,CAAAC,SANI;IACAC,WAAW,GAKpBF,KAAK,CAAAG,OALe;IACTC,CAAC,GAIZJ,KAAK,CAAAK,SAJO;IACZC,EAAA,GAGAN,KAAK,CAAAO,WAH2B;IAAhCA,WAAW,GAAAD,EAAA,cAAGE,kBAAkB,GAAAF,EAAA;IAChCG,EAAA,GAEAT,KAAK,CAAAU,eAFmC;IAAxCA,eAAe,GAAAD,EAAA,cAAGE,sBAAsB,GAAAF,EAAA;IACrCG,IAAI,GAAAC,MAAA,CACPb,KAAK,EAPH,uEAOL,CADU;EAGL,IAAAc,EAAA,GAOFvB,cAAc,CAAAwB,QAAA,CAAAA,QAAA,KAAMf,KAAK;MAAEO,WAAW,EAAAA,WAAA;MAAEG,eAAe,EAAAA;IAAA,GAAG;IAN1DM,IAAI,GAAAF,EAAA,CAAAE,IAAA;IACJC,gBAAgB,GAAAH,EAAA,CAAAG,gBAAA;IAChBC,YAAY,GAAAJ,EAAA,CAAAI,YAAA;IACZC,QAAQ,GAAAL,EAAA,CAAAK,QAAA;IACRC,UAAU,GAAAN,EAAA,CAAAM,UAAA;IACVC,KAAK,GAAAP,EAAA,CAAAO,KACqD;EAC9D,IAAMC,QAAQ,GAAG9B,kBAAkB,CAACQ,KAAK,CAAC;EAClC,IAAAK,SAAS,GAAKZ,qBAAqB,CAACO,KAAK,CAAC,CAAAK,SAAjC;EACjB,IAAMF,OAAO,GAAGf,UAAU,CAACS,aAAa,CAAC,IAAIK,WAAW;EACxD,OAAOf,OAAO,CACV;IAAM,OACFF,KAAA,CAAAsC,aAAA,CAAC7B,UAAU,EAAAqB,QAAA;MAACd,SAAS,EAAEA;IAAS,GAAMX,qBAAqB,CAACsB,IAAI,CAAC,GAC5DV,WAAW,GACNhB,YAAY,CAACgB,WAAW,EAAE;MACtBoB,QAAQ,EAAAA,QAAA;MACRF,UAAU,EAAAA,UAAA;MACVH,gBAAgB,EAAAA,gBAAA;MAChBC,YAAY,EAAAA,YAAA;MACZM,OAAO,EAAE;KACZ,CAAC,GACFrB,OAAO,IAAIlB,KAAA,CAAAsC,aAAA,CAACzB,YAAY,OAAG,EAChCO,SAAS,IAAIpB,KAAA,CAAAsC,aAAA,CAAC5B,YAAY,OAAG,EAC7BwB,QAAQ,KAAK,KAAK,IACflC,KAAA,CAAAsC,aAAA,CAAC3B,YAAY;MACT6B,QAAQ,EAAEJ,KAAK,KAAK,CAAC;MACrBC,QAAQ,EAAEA,QAAQ;MAClBN,IAAI,EAAEA,IAAI;MACVE,YAAY,EAAEA;IAAY,EAEjC,CACQ;EApBX,CAqBL,EACD;EACA,CACII,QAAQ,EACRL,gBAAgB,EAChBC,YAAY,EACZhB,WAAW,EACXkB,UAAU,EACVjB,OAAO,EACPkB,KAAK,EACLpB,SAAS,EACTe,IAAI,EACJG,QAAQ,EACRd,SAAS,CACZ,CACJ;AACL,CAAC;AAEDN,WAAW,CAAC2B,SAAS,GAAG;EACpBzB,SAAS,EAAEZ,SAAS,CAACsC,MAAM;EAC3BX,IAAI,EAAE3B,SAAS,CAACuC,KAAK,CAAC;IAClBC,KAAK,EAAExC,SAAS,CAACsC,MAAM;IACvBG,KAAK,EAAEzC,SAAS,CAAC0C,KAAK,CAAC,CAAC,KAAK,EAAE,MAAM,CAAU;GAClD,CAAC;EACFd,gBAAgB,EAAE5B,SAAS,CAAC2C,MAAM;EAClCb,QAAQ,EAAE9B,SAAS,CAAC4C,SAAS,CAAC,CAAC5C,SAAS,CAAC6C,IAAI,EAAE7C,SAAS,CAAC8C,IAAI,CAAC,CAAC;EAC/DhC,OAAO,EAAEd,SAAS,CAAC+C,OAAO;EAC1BlB,YAAY,EAAE7B,SAAS,CAAC2C,MAAM;EAC9B3B,SAAS,EAAEhB,SAAS,CAAC8C,IAAI;EACzBb,QAAQ,EAAEjC,SAAS,CAACsC,MAAM;EAC1BjB,eAAe,EAAErB,SAAS,CAAC6C,IAAI;EAC/B3B,WAAW,EAAElB,SAAS,CAACgD,OAAO,CAAChD,SAAS,CAACiD,GAAG,CAAC;EAC7ClB,UAAU,EAAE/B,SAAS,CAAC6C,IAAI;EAC1Bb,KAAK,EAAEhC,SAAS,CAACkD;CACpB;AAkBD,IAAM/B,kBAAkB,GAAG,EAAE;AAC7B,IAAMG,sBAAsB,GAAG,SAAAA,CAAA;EAAM,WAAI;AAAJ,CAAI","ignoreList":[]},"metadata":{},"sourceType":"module"}