{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useReferenceManyFieldController, ListContextProvider, ResourceContextProvider, useRecordContext } from 'ra-core';\nimport { fieldPropTypes } from './types';\n/**\n * Render related records to the current one.\n *\n * You must define the fields to be passed to the iterator component as children.\n *\n * @example Display all the comments of the current post as a datagrid\n * <ReferenceManyField reference=\"comments\" target=\"post_id\">\n *     <Datagrid>\n *         <TextField source=\"id\" />\n *         <TextField source=\"body\" />\n *         <DateField source=\"created_at\" />\n *         <EditButton />\n *     </Datagrid>\n * </ReferenceManyField>\n *\n * @example Display all the books by the current author, only the title\n * <ReferenceManyField reference=\"books\" target=\"author_id\">\n *     <SingleFieldList>\n *         <ChipField source=\"title\" />\n *     </SingleFieldList>\n * </ReferenceManyField>\n *\n * By default, restricts the displayed values to 25. You can extend this limit\n * by setting the `perPage` prop.\n *\n * @example\n * <ReferenceManyField perPage={10} reference=\"comments\" target=\"post_id\">\n *    ...\n * </ReferenceManyField>\n *\n * By default, orders the possible values by id desc. You can change this order\n * by setting the `sort` prop (an object with `field` and `order` properties).\n *\n * @example\n * <ReferenceManyField sort={{ field: 'created_at', order: 'DESC' }} reference=\"comments\" target=\"post_id\">\n *    ...\n * </ReferenceManyField>\n *\n * Also, you can filter the query used to populate the possible values. Use the\n * `filter` prop for that.\n *\n * @example\n * <ReferenceManyField filter={{ is_published: true }} reference=\"comments\" target=\"post_id\">\n *    ...\n * </ReferenceManyField>\n */\nexport var ReferenceManyField = function (props) {\n  var children = props.children,\n    debounce = props.debounce,\n    _a = props.filter,\n    filter = _a === void 0 ? defaultFilter : _a,\n    _b = props.page,\n    page = _b === void 0 ? 1 : _b,\n    _c = props.pagination,\n    pagination = _c === void 0 ? null : _c,\n    _d = props.perPage,\n    perPage = _d === void 0 ? 25 : _d,\n    reference = props.reference,\n    resource = props.resource,\n    _e = props.sort,\n    sort = _e === void 0 ? defaultSort : _e,\n    _f = props.source,\n    source = _f === void 0 ? 'id' : _f,\n    target = props.target;\n  var record = useRecordContext(props);\n  var controllerProps = useReferenceManyFieldController({\n    debounce: debounce,\n    filter: filter,\n    page: page,\n    perPage: perPage,\n    record: record,\n    reference: reference,\n    resource: resource,\n    sort: sort,\n    source: source,\n    target: target\n  });\n  return React.createElement(ResourceContextProvider, {\n    value: reference\n  }, React.createElement(ListContextProvider, {\n    value: controllerProps\n  }, children, pagination));\n};\nReferenceManyField.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  filter: PropTypes.object,\n  label: fieldPropTypes.label,\n  perPage: PropTypes.number,\n  record: PropTypes.any,\n  reference: PropTypes.string.isRequired,\n  resource: PropTypes.string,\n  sortBy: PropTypes.string,\n  sortByOrder: fieldPropTypes.sortByOrder,\n  source: PropTypes.string,\n  sort: PropTypes.exact({\n    field: PropTypes.string,\n    order: PropTypes.oneOf(['ASC', 'DESC'])\n  }),\n  target: PropTypes.string.isRequired\n};\n// FIXME kept for backwards compatibility, unused, to be removed in v5\nexport var ReferenceManyFieldView = function (props) {\n  var children = props.children,\n    pagination = props.pagination;\n  if (process.env.NODE_ENV !== 'production') {\n    console.error('<ReferenceManyFieldView> is deprecated, use <ReferenceManyField> directly');\n  }\n  return React.createElement(React.Fragment, null, children, pagination && props.total !== undefined ? pagination : null);\n};\nReferenceManyFieldView.propTypes = {\n  children: PropTypes.element,\n  className: PropTypes.string,\n  sort: PropTypes.exact({\n    field: PropTypes.string,\n    order: PropTypes.oneOf(['ASC', 'DESC'])\n  }),\n  data: PropTypes.any,\n  isLoading: PropTypes.bool,\n  pagination: PropTypes.element,\n  reference: PropTypes.string,\n  setSort: PropTypes.func\n};\nvar defaultFilter = {};\nvar defaultSort = {\n  field: 'id',\n  order: 'DESC'\n};","map":{"version":3,"names":["React","PropTypes","useReferenceManyFieldController","ListContextProvider","ResourceContextProvider","useRecordContext","fieldPropTypes","ReferenceManyField","props","children","debounce","_a","filter","defaultFilter","_b","page","_c","pagination","_d","perPage","reference","resource","_e","sort","defaultSort","_f","source","target","record","controllerProps","createElement","value","propTypes","node","isRequired","className","string","object","label","number","any","sortBy","sortByOrder","exact","field","order","oneOf","ReferenceManyFieldView","process","env","NODE_ENV","console","error","Fragment","total","undefined","element","data","isLoading","bool","setSort","func"],"sources":["../../../src/field/ReferenceManyField.tsx"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}