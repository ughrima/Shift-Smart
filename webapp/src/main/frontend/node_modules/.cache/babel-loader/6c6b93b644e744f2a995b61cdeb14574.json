{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { useInfiniteListController } from './useInfiniteListController';\nimport { ResourceContextProvider } from '../../core';\nimport { ListContextProvider } from './ListContextProvider';\nimport { InfinitePaginationContext } from './InfinitePaginationContext';\n/**\n * Call useInfiniteListController and put the value in a ListContext\n *\n * Base class for <InfiniteList> components, without UI.\n *\n * Accepts any props accepted by useInfiniteListController:\n * - filter: permanent filter applied to the list\n * - filters: Filter element, to display the filters\n * - filterDefaultValues: object;\n * - perPage: Number of results per page\n * - sort: Default sort\n * - exporter: exported function\n *\n * @example // Custom list layout\n *\n * const PostList = () => (\n *     <InfiniteListBase perPage={10}>\n *         <div>\n *              List metrics...\n *         </div>\n *         <Grid container>\n *             <Grid item xs={8}>\n *                 <SimpleList primaryText={record => record.title} />\n *             </Grid>\n *             <Grid item xs={4}>\n *                 List instructions...\n *             </Grid>\n *         </Grid>\n *         <div>\n *             Post related links...\n *         </div>\n *     </ListBase>\n * );\n */\nexport var InfiniteListBase = function (_a) {\n  var children = _a.children,\n    props = __rest(_a, [\"children\"]);\n  var controllerProps = useInfiniteListController(props);\n  return React.createElement(ResourceContextProvider, {\n    value: props.resource\n  }, React.createElement(ListContextProvider, {\n    value: controllerProps\n  }, React.createElement(InfinitePaginationContext.Provider, {\n    value: {\n      hasNextPage: controllerProps.hasNextPage,\n      fetchNextPage: controllerProps.fetchNextPage,\n      isFetchingNextPage: controllerProps.isFetchingNextPage,\n      hasPreviousPage: controllerProps.hasPreviousPage,\n      fetchPreviousPage: controllerProps.fetchPreviousPage,\n      isFetchingPreviousPage: controllerProps.isFetchingPreviousPage\n    }\n  }, children)));\n};","map":{"version":3,"names":["React","useInfiniteListController","ResourceContextProvider","ListContextProvider","InfinitePaginationContext","InfiniteListBase","_a","children","props","__rest","controllerProps","createElement","value","resource","Provider","hasNextPage","fetchNextPage","isFetchingNextPage","hasPreviousPage","fetchPreviousPage","isFetchingPreviousPage"],"sources":["../../../../src/controller/list/InfiniteListBase.tsx"],"sourcesContent":[null],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SACIC,yBAAyB,QAEtB,6BAA6B;AACpC,SAASC,uBAAuB,QAAQ,YAAY;AAEpD,SAASC,mBAAmB,QAAQ,uBAAuB;AAC3D,SAASC,yBAAyB,QAAQ,6BAA6B;AAEvE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,OAAO,IAAMC,gBAAgB,GAAG,SAAAA,CAAoCC,EAGA;EAFhE,IAAAC,QAAQ,GAAAD,EAAA,CAAAC,QAAA;IACLC,KAAK,GAAAC,MAAA,CAAAH,EAAA,EAFwD,YAGnE,CADW;EAER,IAAMI,eAAe,GAAGT,yBAAyB,CAAaO,KAAK,CAAC;EACpE,OACIR,KAAA,CAAAW,aAAA,CAACT,uBAAuB;IAACU,KAAK,EAAEJ,KAAK,CAACK;EAAQ,GAC1Cb,KAAA,CAAAW,aAAA,CAACR,mBAAmB;IAACS,KAAK,EAAEF;EAAe,GACvCV,KAAA,CAAAW,aAAA,CAACP,yBAAyB,CAACU,QAAQ;IAC/BF,KAAK,EAAE;MACHG,WAAW,EAAEL,eAAe,CAACK,WAAW;MACxCC,aAAa,EAAEN,eAAe,CAACM,aAAa;MAC5CC,kBAAkB,EAAEP,eAAe,CAACO,kBAAkB;MACtDC,eAAe,EAAER,eAAe,CAACQ,eAAe;MAChDC,iBAAiB,EAAET,eAAe,CAACS,iBAAiB;MACpDC,sBAAsB,EAClBV,eAAe,CAACU;;EACvB,GAEAb,QAAQ,CACwB,CACnB,CACA;AAElC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}