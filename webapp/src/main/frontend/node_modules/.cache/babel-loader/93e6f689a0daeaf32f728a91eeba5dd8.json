{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { useFormContext, useWatch } from 'react-hook-form';\n// hook taken from https://react-hook-form.com/docs/usewatch/#rules\nexport var useFormValues = function () {\n  var getValues = useFormContext().getValues;\n  return __assign(__assign({}, useWatch()), getValues());\n};","map":{"version":3,"names":["useFormContext","useWatch","useFormValues","getValues","__assign"],"sources":["../../../src/form/useFormValues.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;AAAA,SAAsBA,cAAc,EAAEC,QAAQ,QAAQ,iBAAiB;AAEvE;AACA,OAAO,IAAMC,aAAa,GAAG,SAAAA,CAAA;EAGjB,IAAAC,SAAS,GAAKH,cAAc,EAAgB,CAAAG,SAAnC;EAEjB,OAAAC,QAAA,CAAAA,QAAA,KACOH,QAAQ,EAAE,GACVE,SAAS,EAAE;AAEtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}