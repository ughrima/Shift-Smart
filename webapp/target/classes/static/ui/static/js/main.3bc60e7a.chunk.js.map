{"version":3,"sources":["../../../../../../employee-shift-scheduler/webapp/src/main/frontend/src/i18n/en.tsx","../../../../../../employee-shift-scheduler/webapp/src/main/frontend/src/i18n/it.tsx","../../../../../../employee-shift-scheduler/webapp/src/main/frontend/src/theme.tsx","../../../../../../employee-shift-scheduler/webapp/src/main/frontend/src/Header.tsx","../../../../../../employee-shift-scheduler/webapp/src/main/frontend/src/Layout.tsx","../../../../../../employee-shift-scheduler/webapp/src/main/frontend/src/dataProvider/index.tsx","../../../../../../employee-shift-scheduler/webapp/src/main/frontend/src/dataProvider/dataProvider.tsx","../../../../../../employee-shift-scheduler/webapp/src/main/frontend/src/authProvider.tsx","../../../../../../employee-shift-scheduler/webapp/src/main/frontend/src/views/eventsummary.tsx","../../../../../../employee-shift-scheduler/webapp/src/main/frontend/src/utils/Utilities.tsx","../../../../../../employee-shift-scheduler/webapp/src/main/frontend/src/components/RruleInput.tsx","../../../../../../employee-shift-scheduler/webapp/src/main/frontend/src/components/EventPopup.tsx","../../../../../../employee-shift-scheduler/webapp/src/main/frontend/src/views/calendar.tsx","../../../../../../employee-shift-scheduler/webapp/src/main/frontend/src/components/ColorInput.tsx","../../../../../../employee-shift-scheduler/webapp/src/main/frontend/src/employees/index.tsx","../../../../../../employee-shift-scheduler/webapp/src/main/frontend/src/employees/EmployeeList.tsx","../../../../../../employee-shift-scheduler/webapp/src/main/frontend/src/employees/EmployeeCreate.tsx","../../../../../../employee-shift-scheduler/webapp/src/main/frontend/src/employees/EmployeeEdit.tsx","../../../../../../employee-shift-scheduler/webapp/src/main/frontend/src/customers/index.tsx","../../../../../../employee-shift-scheduler/webapp/src/main/frontend/src/customers/CustomerList.tsx","../../../../../../employee-shift-scheduler/webapp/src/main/frontend/src/customers/CustomerCreate.tsx","../../../../../../employee-shift-scheduler/webapp/src/main/frontend/src/customers/CustomerEdit.tsx","../../../../../../employee-shift-scheduler/webapp/src/main/frontend/src/components/PasswordUpdateBtn.tsx","../../../../../../employee-shift-scheduler/webapp/src/main/frontend/src/users/index.tsx","../../../../../../employee-shift-scheduler/webapp/src/main/frontend/src/users/UserList.tsx","../../../../../../employee-shift-scheduler/webapp/src/main/frontend/src/users/UserCreate.tsx","../../../../../../employee-shift-scheduler/webapp/src/main/frontend/src/users/UserEdit.tsx","../../../../../../employee-shift-scheduler/webapp/src/main/frontend/src/App.tsx","../../../../../../employee-shift-scheduler/webapp/src/main/frontend/src/reportWebVitals.ts","../../../../../../employee-shift-scheduler/webapp/src/main/frontend/src/index.tsx"],"names":["customEnglishMessages","englishMessages","resources","employee","name","fields","number","active","color","surname","phone","email","customer","vat","zipcode","city","website","ess","calendar","event","error","error_create","success_create","error_update","success_update","error_delete","success_delete","recurring","thisev","thisandfoll","calendarlist","users","password_update","btn_label","updated","updated_error","field_label","summary","customItalianMessages","ra","action","add_filter","add","back","bulk_actions","cancel","clear_array_input","clear_input_value","clone","confirm","create","create_item","delete","edit","export","list","refresh","remove_filter","remove_all_filters","remove","save","search","select_all","select_row","show","sort","undo","unselect","expand","close","open_menu","close_menu","update","move_up","move_down","open","toggle_theme","select_columns","update_application","boolean","true","false","null","page","dashboard","loading","not_found","empty","invite","input","file","upload_several","upload_single","image","references","all_missing","many_missing","single_missing","password","toggle_visible","toggle_hidden","message","about","are_you_sure","auth_error","bulk_delete_content","bulk_delete_title","bulk_update_content","bulk_update_title","delete_content","delete_title","details","invalid_form","no","yes","unsaved_changes","navigation","no_results","no_more_results","page_out_of_boundaries","page_out_from_end","page_out_from_begin","page_range_info","partial_page_range_info","current_page","first","last","page_rows_per_page","next","previous","skip_nav","sort_by","ASC","DESC","auth","auth_check_error","user_menu","username","sign_in","sign_in_error","logout","notification","created","deleted","bad_item","item_doesnt_exist","http_error","data_provider_error","i18n_error","canceled","logged_out","not_authorized","application_update_available","validation","required","minLength","maxLength","minValue","maxValue","oneOf","regex","saved_queries","label","query_name","new_label","new_dialog_title","remove_label","remove_label_with_name","remove_dialog_title","remove_message","help","configurable","customize","configureMode","inspector","title","content","reset","hideAll","showAll","Datagrid","unlabeled","SimpleForm","SimpleList","primaryText","secondaryText","tertiaryText","theme","createTheme","palette","primary","main","secondary","info","Header","location","useLocation","translate","useTranslate","permissions","usePermissions","currentPath","matchPath","pathname","_jsx","AppBar","position","children","Toolbar","variant","_jsxs","Box","flex","display","justifyContent","alignItems","alt","src","height","style","padding","paddingRight","Typography","component","Tabs","value","indicatorColor","textColor","Tab","icon","EventIcon","iconPosition","Link","to","sx","minHeight","DescriptionIcon","smart_count","ApartmentIcon","GroupsIcon","marginTop","LocalesMenuButton","languages","locale","LoadingIndicator","UserMenu","Logout","includes","Layout","props","flexFlow","CssBaseline","ErrorBoundary","FallbackComponent","Error","margin","baseDataProvider","apiUrl","httpClient","arguments","length","undefined","fetchUtils","fetchJson","getList","resource","params","perPage","pagination","field","order","filter","query","sortBy","sortDir","limit","Object","keys","method","body","JSON","stringify","then","_ref","headers","json","data","total","count","getOne","id","_ref2","getMany","filters","ids","_ref3","getManyReference","_ref4","_ref5","updateMany","Promise","all","map","responses","_ref6","_ref7","Headers","_ref8","deleteMany","_ref9","simpleRest","url","options","dataProvider","getSystemConfigs","fetch","credentials","res","getTimelineData","updatePassword","user","getTimelineGroups","authProvider","login","request","Request","response","status","reject","statusText","localStorage","setItem","roles","resolve","redirectTo","token","checkError","removeItem","checkAuth","getPermissions","role","getItem","EmployeeSummaryList","pdfSource","setPdfSource","useState","setLocale","useLocaleState","Grid","container","spacing","item","xs","Card","overflowY","CardContent","pt","onSubmit","start","toISOString","end","join","toolbar","SaveButton","SettingsSuggestIcon","IconButton","marginLeft","onClick","RestartAltIcon","FormDataConsumer","formData","rest","flexGrow","DateTimeInput","source","alwaysOn","fullWidth","validate","ReferenceArrayInput","reference","AutocompleteArrayInput","optionText","filterToQuery","string","fullname","ilike","width","Skeleton","textColorOnHEXBg","hex","rgb","result","exec","r","parseInt","g","b","hexToRgb","eventTypeEnum","RruleInput","scopedFormData","getSource","_Fragment","BooleanInput","NumberInput","defaultValue","SelectInput","choices","freq","SelectArrayInput","dtstart","Date","getUTCDay","RadioButtonGroupInput","row","choice","until_type","DateInput","PostCreateToolbar","onRemoveClick","DeleteIcon","EventPopup","sfProps","entries","ReferenceInput","AutocompleteInput","type","CalendarView","_popover$record","_popover$record2","_popover$record3","_popover$record4","_popover$record5","_popover$record6","_popover$record7","_popover$record7$_rru","isSmall","useMediaQuery","breakpoints","down","calendarRef","useRef","useCreate","useUpdate","_delete","useDelete","notify","useNotify","calendarValue","setCalendarValue","recurrAction","setRecurrAction","dialog","setDialog","record","editDialog","setEditDialog","recurrDialog","setRecurrDialog","fcinfo","window","setWindow","popover","setPopover","anchorEl","unchecked","setUnchecked","events","setEvents","isLoading","useGetList","flattenRecord","extProps","extendedProps","dtend","reloadEvents","callback","groups","e","_res$data","fetchedEvents","allDay","all_day","original_start_date","catch","err","console","useEffect","Loading","eventEditSubmit","toJSON","parent","onError","onSettled","eventRemove","previousData","eventId","currEvents","shallowRemoveEvent","handleClose","md","mr","alignSelf","Calendar","showFixedNumberOfWeeks","formatShortWeekday","date","toLocaleDateString","weekday","navigationLabel","view","next2Label","prev2Label","onClickDay","current","getApi","gotoDate","marginBottom","List","labelId","ListItem","disablePadding","ListItemButton","currentIndex","indexOf","newUnchecked","push","splice","dense","ListItemIcon","minWidth","Checkbox","edge","checked","tabIndex","disableRipple","inputProps","ListItemText","secondaryTypographyProps","fontWeight","fontSize","FullCalendar","ref","selectable","slotMinTime","slotMaxTime","plugins","timeGrid","dayGrid","interactionPlugin","headerToolbar","left","center","right","titleFormat","year","month","eventMaxStack","initialView","select","startStr","endStr","eventContent","timeText","eventClick","el","eventChange","editable","datesSet","dateInfo","moment","toDate","Dialog","onClose","DialogTitle","DialogContent","sanitizeEmptyValues","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","dtstamp","FormControl","RadioGroup","onChange","target","FormControlLabel","control","Radio","DialogActions","Button","handleCloseRecurrEvt","revert","handleSubmitRecurrEvt","ex_dates","Boolean","d","until_date","oldevt","Fab","bottom","AddIcon","Popover","PaperProps","anchorOrigin","vertical","horizontal","transformOrigin","m","EditIcon","CloseIcon","maxWidth","bgcolor","SquareRoundedIcon","backgroundColor","employee_fullname","EventRoundedIcon","QueryBuilderRoundedIcon","toLocaleString","_rrule","RepeatRoundedIcon","toText","ColorField","useRecordContext","background","marginRight","ColorInput","setShow","picker","fieldState","isTouched","isRequired","useInput","Picker","ReactColor","TextInput","onFocus","handleOpen","className","border","EmployeeList","rowClick","TextField","NumberField","BooleanField","EditButton","DeleteButton","CloneButton","EmployeeCreate","Create","redirect","EmployeeEdit","Edit","disabled","CustomerList","CustomerCreate","CustomerEdit","PasswordUpdateBtn","LockResetIcon","isDialogOpen","setIsDialogOpen","newPassword","setNewPassword","stopPropagation","autoFocus","UserList","UserCreate","PasswordInput","UserEdit","i18nProvider","polyglotI18nProvider","italianMessages","App","Admin","layout","Resource","employees","customers","CustomRoutes","Route","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","dotenv","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.3bc60e7a.chunk.js","sourcesContent":["import { TranslationMessages } from 'react-admin';\nimport englishMessages from 'ra-language-english';\n\nconst customEnglishMessages: TranslationMessages = {\n    ...englishMessages,\n    resources: {\n      employee: {\n          name: 'Employee |||| Employees',\n          fields: {\n              number: 'Number',\n              active: 'Is active?',\n              color: 'Color',\n              name: 'Name',\n              surname: 'Surname',\n              phone: 'Phone number',\n              email: 'Email address',\n          },\n      },\n      customer: {\n          name: 'Cliente |||| Clienti',\n          fields: {\n              vat: 'VAT number',\n              name: 'Name',\n              email: 'Email address',\n              phone: 'Phone address',\n              zipcode: 'ZIP code',\n              city: 'City',\n              website: 'Website',\n          }\n      }\n  },\n  ess: {\n    calendar: {\n      name: \"Calendar\",\n      event: {\n        error: \"Something went wrong.\",\n        error_create: \"Error on event creation\",\n        success_create: \"Event created\",\n        error_update: \"Error on event update\",\n        success_update: \"Event updated\",\n        error_delete: \"Error on event delete\",\n        success_delete: \"Event removed\",\n        recurring: {\n          thisev: \"This event\",\n          thisandfoll: \"This and the following events\"\n        }\n      },\n      calendarlist: {\n        number: \"Number\"\n      },\n    },\n    users: {\n      password_update: {\n        btn_label: \"Change Password\",\n        updated: \"Password changed successfully!\",\n        updated_error: \"Something went wrong while changing the password.\",\n        field_label: \"New password\"\n      }\n    },\n    summary: {\n      name: \"Report\"\n    }\n  }\n};\n\nexport default customEnglishMessages;","import { TranslationMessages } from 'react-admin';\n\nconst customItalianMessages: TranslationMessages = {\n    ra: {\n        action: {\n          add_filter: 'Aggiungi un filtro',\n          add: 'Aggiungi',\n          back: 'Indietro',\n          bulk_actions: '%{smart_count} selezionati',\n          cancel: 'Annulla',\n            clear_array_input: 'Clear the list',\n          clear_input_value: 'Svuota il modulo',\n          clone: 'Duplica',\n          confirm: 'Conferma',\n          create: 'Crea',\n            create_item: 'Create %{item}',\n          delete: 'Cancella',\n          edit: 'Modifica',\n          export: 'Esporta',\n          list: 'Elenco',\n          refresh: 'Aggiorna',\n          remove_filter: 'Rimuovi questo filtro',\n            remove_all_filters: 'Remove all filters',\n          remove: 'Rimuovi',\n          save: 'Salva',\n          search: 'Ricerca',\n            select_all: 'Select all',\n            select_row: 'Select this row',\n          show: 'Mostra',\n          sort: 'Ordina',\n          undo: 'Annulla',\n          unselect: 'Annulla selezione',\n          expand: 'Espandi',\n          close: 'Chiudi',\n          open_menu: 'Apri il menu',\n          close_menu: 'Chiudi il menu',\n            update: 'Update',\n            move_up: 'Move up',\n            move_down: 'Move down',\n            open: 'Open',\n            toggle_theme: 'Toggle Theme',\n            select_columns: 'Columns',\n            update_application: 'Reload Application',\n        },\n        boolean: {\n          true: 'Si',\n          false: 'No',\n          null: ' ',\n        },\n        page: {\n          create: 'Aggiungi %{name}',\n          dashboard: 'Cruscotto',\n          edit: '%{name} %{id}',\n          error: 'Qualcosa non ha funzionato',\n          list: '%{name}',\n          loading: 'Caricamento in corso',\n          not_found: 'Non trovato',\n          show: '%{name} %{id}',\n          empty: 'Nessun %{name} ancora.',\n          invite: 'Vuoi aggiungerne uno?'\n        },\n        input: {\n          file: {\n            upload_several:\n              'Trascina i files da caricare, oppure clicca per selezionare.',\n            upload_single: 'Trascina il file da caricare, oppure clicca per selezionarlo.'\n          },\n          image: {\n            upload_several:\n              'Trascina le immagini da caricare, oppure clicca per selezionarle.',\n            upload_single:\n              'Trascina l\\'immagine da caricare, oppure clicca per selezionarla.'\n          },\n          references: {\n            all_missing: 'Impossibile trovare i riferimenti associati.',\n            many_missing:\n              'Almeno uno dei riferimenti associati non sembra più disponibile.',\n            single_missing:\n              'Il riferimento associato non sembra più disponibile.'\n          },\n          password: {\n            toggle_visible: 'Nascondi la password',\n            toggle_hidden: 'Mostra la password',\n          },\n        },\n        message: {\n          about: 'Informazioni',\n          are_you_sure: 'Sei sicuro ?',\n            auth_error:\n                'A error occurred while validating the authentication token.',\n          bulk_delete_content:\n            'Sei sicuro di voler cancellare questo %{name}? |||| Sei sicuro di voler eliminare questi %{smart_count}?',\n          bulk_delete_title:\n            'Delete %{name} |||| Delete %{smart_count} %{name} items',\n            bulk_update_content:\n                'Are you sure you want to update this %{name}? |||| Are you sure you want to update these %{smart_count} items?',\n            bulk_update_title:\n                'Update %{name} |||| Update %{smart_count} %{name}',\n            clear_array_input: 'Are you sure you want to clear the whole list?',\n          delete_content: 'Are you sure you want to delete this item?',\n          delete_title: 'Cancella %{name} #%{id}',\n          details: 'Dettagli',\n          error:\n            'Un errore locale è occorso e la tua richiesta non è stata completata.',\n          invalid_form: 'Il modulo non è valido. Si prega di verificare la presenza di errori.',\n          loading: 'La pagina si sta caricando, solo un momento per favore',\n          no: 'No',\n          not_found:\n            'Hai inserito un URL errato, oppure hai cliccato un link errato',\n          yes: 'Si',\n          unsaved_changes:\n            \"Alcune modifiche non sono state salvate. Sei sicuro di volerle ignorare?\",\n        },\n        navigation: {\n          no_results: 'Nessun risultato trovato',\n          no_more_results:\n            'La pagina numero %{page} è fuori dell\\'intervallo. Prova la pagina precedente.',\n          page_out_of_boundaries: 'Il numero di pagina %{page} è fuori dei limiti',\n          page_out_from_end: 'Fine della paginazione',\n          page_out_from_begin: 'Il numero di pagina deve essere maggiore di 1',\n          page_range_info: '%{offsetBegin}-%{offsetEnd} di %{total}',\n            partial_page_range_info:\n                '%{offsetBegin}-%{offsetEnd} of more than %{offsetEnd}',\n            current_page: 'Page %{page}',\n            page: 'Go to page %{page}',\n            first: 'Go to first page',\n            last: 'Go to last page',\n          page_rows_per_page: 'Righe per pagina',\n          next: 'Successivo',\n          previous: 'Precedente',\n          skip_nav: 'Vai al contenuto',\n        },\n        sort: {\n          sort_by: 'Ordina per %{field} %{order}',\n          ASC: 'cresente',\n          DESC: 'decrescente',\n        },\n        auth: {\n          auth_check_error: 'È necessario accedere per continuare',\n          user_menu: 'Profilo',\n          username: 'Nome utente',\n          password: 'Password',\n          sign_in: 'Login',\n          sign_in_error: 'Autenticazione fallita, riprovare.',\n          logout: 'Disconnessione'\n        },\n        notification: {\n          updated: 'Record aggiornato |||| %{smart_count} records aggiornati',\n          created: 'Record creato',\n          deleted: 'Record eliminato |||| %{smart_count} records eliminati',\n          bad_item: 'Record errato',\n          item_doesnt_exist: 'Record inesistente',\n          http_error: 'Errore di comunicazione con il server dati',\n          data_provider_error:\n            'Errore del data provider. Controlla la console per i dettagli.',\n          i18n_error:\n            'Traduzioni non trovate per il linguaggio specificato',\n          canceled: 'Azione annullata',\n          logged_out: 'La sessione è stata terminata, si prega di ripetere l\\'autenticazione.',\n            not_authorized: \"You're not authorized to access this resource.\",\n            application_update_available: 'A new version is available.',\n        },\n        validation: {\n          required: 'Campo obbligatorio',\n          minLength: 'Deve essere lungo %{min} caratteri almeno',\n          maxLength: 'Deve essere lungo %{max} caratteri al massimo',\n          minValue: 'Deve essere almeno %{min}',\n          maxValue: 'Deve essere al massimo %{max}',\n          number: 'Deve essere un numero',\n          email: 'Deve essere un valido indirizzo email',\n          oneOf: 'Deve essere uno di: %{options}',\n          regex: 'Deve rispettare il formato (espressione regolare): %{pattern}'\n        },\n        saved_queries: {\n            label: 'Saved queries',\n            query_name: 'Query name',\n            new_label: 'Save current query...',\n            new_dialog_title: 'Save current query as',\n            remove_label: 'Remove saved query',\n            remove_label_with_name: 'Remove query \"%{name}\"',\n            remove_dialog_title: 'Remove saved query?',\n            remove_message:\n                'Are you sure you want to remove that item from your list of saved queries?',\n            help: 'Filter the list and save this query for later',\n        },\n        configurable: {\n            customize: 'Customize',\n            configureMode: 'Configure this page',\n            inspector: {\n                title: 'Inspector',\n                content: 'Hover the application UI elements to configure them',\n                reset: 'Reset Settings',\n                hideAll: 'Hide All',\n                showAll: 'Show All',\n            },\n            Datagrid: {\n                title: 'Datagrid',\n                unlabeled: 'Unlabeled column #%{column}',\n            },\n            SimpleForm: {\n                title: 'Form',\n                unlabeled: 'Unlabeled input #%{input}',\n            },\n            SimpleList: {\n                title: 'List',\n                primaryText: 'Primary text',\n                secondaryText: 'Secondary text',\n                tertiaryText: 'Tertiary text',\n            },\n        },\n      },\n      resources: {\n        employee: {\n            name: 'Dipendente |||| Dipendenti',\n            fields: {\n                number: 'Numero',\n                active: 'Attivo?',\n                color: 'Colore',\n                name: 'Nome',\n                surname: 'Cognome',\n                phone: 'Numero di telefono',\n                email: 'Indirizzo email',\n            },\n        },\n        customer: {\n            name: 'Cliente |||| Clienti',\n            fields: {\n                vat: 'P.IVA/CF',\n                name: 'Nome',\n                email: 'Indirizzo email',\n                phone: 'Numero di telefono',\n                zipcode: 'CAP',\n                city: 'Comune',\n                website: 'Sito WEB',\n            }\n        }\n    },\n    ess: {\n      calendar: {\n        name: \"Calendario\",\n        event: {\n          error: \"Qualcosa è andato storto.\",\n          error_create: \"Errore durante la creazione dell'evento\",\n          success_create: \"Evento creato correttamente\",\n          error_update: \"Errore durante l'aggiornamento dell'evento\",\n          success_update: \"Evento aggiornato correttamente\",\n          error_delete: \"Errore durante la cancellazione dell'evento\",\n          success_delete: \"Evento eliminato correttamente\",\n          recurring: {\n            thisev: \"Questo evento\",\n            thisandfoll: \"Questo e gli eventi futuri\"\n          }\n        },\n        calendarlist: {\n          number: \"Matricola\"\n        },\n      },\n      users: {\n        password_update: {\n          btn_label: \"Modifica Password\",\n          updated: \"Password modificata con successo!\",\n          updated_error: \"C'è stato un'errore nell'aggiornare la password.\",\n          field_label: \"Nuova password\"\n        }\n      },\n      summary: {\n        name: \"Report\"\n      }\n    }\n};\n\nexport default customItalianMessages;","import { createTheme } from '@mui/material/styles';\n\nexport const theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#005F73\",\n    },\n    secondary: {\n      main: \"#CA6702\",\n    },\n    info: {\n      main: \"#0A9396\"\n    }\n  }\n});","import React from 'react';\nimport { Tabs, Tab, Toolbar, AppBar, Box, Typography } from '@mui/material';\nimport { Link, matchPath, useLocation } from 'react-router-dom';\nimport { UserMenu, Logout, LoadingIndicator, useTranslate, usePermissions } from 'react-admin';\nimport EventIcon from '@mui/icons-material/Event';\nimport DescriptionIcon from '@mui/icons-material/Description';\nimport ApartmentIcon from '@mui/icons-material/Apartment';\nimport GroupsIcon from '@mui/icons-material/Groups';\n\nimport { LocalesMenuButton } from 'react-admin';\n\nconst Header = () => {\n    const location = useLocation();\n    const translate = useTranslate();\n    const { permissions } = usePermissions();\n\n    let currentPath = '/';\n    if (!!matchPath('/customer/*', location.pathname)) {\n        currentPath = '/customer';\n    } else if (!!matchPath('/employee/*', location.pathname)) {\n        currentPath = '/employee';\n    //} else if (!!matchPath('/timeline/*', location.pathname)) {\n    //    currentPath = '/timeline';\n    } else if (!!matchPath('/calendar/*', location.pathname)) {\n        currentPath = '/calendar';\n    } else if (!!matchPath('/user/*', location.pathname)) {\n        currentPath = '/user';\n    } else if (!!matchPath('/summary/*', location.pathname)) {\n        currentPath = '/summary';\n    }\n\n    return (\n        <AppBar position=\"static\" color=\"primary\">\n            <Toolbar variant=\"dense\">\n                <Box flex={1} display=\"flex\" justifyContent=\"space-between\">\n                    <Box display=\"flex\" alignItems=\"center\">\n                        <img alt=\"Shift Scheduler Logo\" src='./logo.png' height=\"32\" style={{padding: \"5px\", paddingRight: \"10px\"}} />\n                        <Typography component=\"span\" variant=\"h5\">\n                            Shift Scheduler\n                        </Typography>\n                    </Box>\n                    <Box>\n                        <Tabs\n                            value={currentPath}\n                            aria-label=\"Navigation Tabs\"\n                            indicatorColor=\"secondary\"\n                            textColor=\"inherit\"\n                            style={{height: \"48px\"}}\n                        >\n                        {/*<Tab\n                            label={'Timeline'}\n                            component={Link}\n                            to=\"/timeline\"\n                            value=\"/timeline\"\n                        />*/}\n                        <Tab\n                            label={translate(`ess.calendar.name`)}\n                            icon={<EventIcon />} iconPosition=\"start\"\n                            component={Link}\n                            to=\"/calendar\"\n                            sx={{ minHeight: '48px', height: '48px' }}\n                            value=\"/calendar\"\n                        />\n                        <Tab\n                            label={translate(`ess.summary.name`)}\n                            icon={<DescriptionIcon />} iconPosition=\"start\"\n                            component={Link}\n                            sx={{ minHeight: '48px', height: '48px' }}\n                            to=\"/summary\"\n                            value=\"/summary\"\n                        />\n                        <Tab\n                            \n                            label={translate(`resources.customer.name`, {\n                                smart_count: 2,\n                            })}\n                            icon={<ApartmentIcon />} iconPosition=\"start\"\n                            component={Link}\n                            sx={{ minHeight: '48px', height: '48px' }}\n                            to=\"/customer\"\n                            value=\"/customer\"\n                        />\n                        <Tab\n                            label={translate(`resources.employee.name`, {\n                                smart_count: 2,\n                            })}\n                            icon={<GroupsIcon />} iconPosition=\"start\"\n                            component={Link}\n                            sx={{ minHeight: '48px', height: '48px' }}\n                            to=\"/employee\"\n                            value=\"/employee\"\n                        />\n                        </Tabs>\n                    </Box>\n                    <Box display=\"flex\" sx={{\n                        marginTop: \"4px\"\n                    }}>\n                        <LocalesMenuButton\n                            languages={[\n                                { locale: 'en', name: 'English' },\n                                { locale: 'it', name: 'Italiano' },\n                            ]}\n                        />\n                        <LoadingIndicator\n                            sx={{\n                                '& .RaLoadingIndicator-loader': {\n                                    marginTop: 2,\n                                },\n                            }}\n                        />\n                        <UserMenu>\n                            <Logout />\n                            { permissions?.includes(\"ROLE_ADMIN\") && <Tab\n                                label={'Users'}\n                                component={Link}\n                                to=\"/user\"\n                                value=\"/user\"\n                            /> }\n                        </UserMenu>\n                    </Box>\n                </Box>\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default Header;","import React, { HtmlHTMLAttributes } from 'react';\nimport { CssBaseline } from '@mui/material';\nimport { CoreLayoutProps } from 'react-admin';\nimport { ErrorBoundary } from 'react-error-boundary';\n\nimport { Error } from 'react-admin';\nimport Header from './Header';\n\nconst Layout = (props: LayoutProps) => {\n    const { children } = props;\n    return (\n        <div style={{\n            display: \"flex\",\n            flexFlow: \"column\",\n            height: \"100vh\"\n        }}>\n            <CssBaseline />\n            <Header />\n            {/* @ts-ignore */}\n            <ErrorBoundary FallbackComponent={Error}>\n                <div style={{\n                    margin: \"0 40px\",\n                    height: \"100vh\",\n                    display: \"flex\",\n                    flexFlow: \"column\"\n                }}>\n                        {children}\n                </div>\n            </ErrorBoundary>\n        </div>\n    );\n};\n\nexport interface LayoutProps\n    extends CoreLayoutProps,\n        Omit<HtmlHTMLAttributes<HTMLDivElement>, 'title'> {}\n\nexport default Layout;","import simpleRest from \"./dataProvider\";\nimport { fetchUtils } from \"react-admin\";\n\nconst fetchJson = (url: any, options: any = {}) => {\n\treturn fetchUtils.fetchJson(url, options);\n};\n\nconst baseDataProvider = simpleRest(\"../api\", fetchJson);\n\nexport const dataProvider = {\n\t...baseDataProvider,\n\tgetSystemConfigs: () => {\n\t\treturn fetch(\"../api/sysconfig\", {\n\t\t\tmethod: \"GET\",\n\t\t\tcredentials: 'include',\n\t\t}).then(res => res.json())\n\t},\n\tgetTimelineData: (params: {start: string, end: string, groups: any, detailed: boolean}) => {\n\t\treturn fetch(\"../api/event/in\", {\n\t\t\tmethod: \"POST\",\n\t\t\tcredentials: 'include',\n\t\t\theaders: {\n\t\t\t  'Accept': 'application/json',\n\t\t\t  'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(params)\n\t\t}).then(res => res.json())\n\t},\n\tupdatePassword: (params: {user: number, password: string}) => {\n\t\treturn fetch(\"../api/user/password/\"+params.user, {\n\t\t\tmethod: \"PUT\",\n\t\t\tcredentials: 'include',\n\t\t\theaders: {\n\t\t\t  'Accept': 'application/json',\n\t\t\t  'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({password: params.password})\n\t\t}).then(res => res.json())\n\t},\n\tgetTimelineGroups: () => {\n\t\treturn fetch(\"../api/employee\", {\n\t\t\tmethod: \"GET\",\n\t\t\tcredentials: 'include',\n\t\t\theaders: {     \"Content-Type\": \"application/json\"   },\n\t\t}).then(res => res.json())\n\t}\n}\n","import { stringify } from 'query-string';\nimport { fetchUtils, DataProvider } from 'ra-core';\n\n/**\n * Maps react-admin queries to a simple REST API\n *\n * This REST dialect is similar to the one of FakeRest\n *\n * @see https://github.com/marmelab/FakeRest\n *\n * @example\n *\n * getList     => GET http://my.api.url/posts?sort=['title','ASC']&range=[0, 24]\n * getOne      => GET http://my.api.url/posts/123\n * getMany     => GET http://my.api.url/posts?filter={id:[123,456,789]}\n * update      => PUT http://my.api.url/posts/123\n * create      => POST http://my.api.url/posts\n * delete      => DELETE http://my.api.url/posts/123\n *\n * @example\n *\n * import * as React from \"react\";\n * import { Admin, Resource } from 'react-admin';\n * import simpleRestProvider from 'ra-data-simple-rest';\n *\n * import { PostList } from './posts';\n *\n * const App = () => (\n *     <Admin dataProvider={simpleRestProvider('http://path.to.my.api/')}>\n *         <Resource name=\"posts\" list={PostList} />\n *     </Admin>\n * );\n *\n * export default App;\n */\nexport default (\n    apiUrl: string,\n    httpClient = fetchUtils.fetchJson,\n    countHeader: string = 'Content-Range'\n): DataProvider => ({\n    getList: (resource, params) => {\n        const { page, perPage } = params.pagination;\n        const { field, order } = params.sort;\n        \n        const filter = params.filter;\n        \n        let query:any = {\n            sortBy: field,\n            sortDir: order,\n            page: (page - 1),\n            limit: perPage\n        };\n\n        if (Object.keys(filter).length > 0)\n            query[\"filters\"] = filter\n\n        return httpClient(`${apiUrl}/${resource}/list`, {\n            method: 'POST',\n            body: JSON.stringify(query),\n        }).then(({ headers, json }) => {            \n            return {\n                data: json.data,\n                total: json.count\n            };\n        });\n    },\n\n    getOne: (resource, params) =>\n        httpClient(`${apiUrl}/${resource}/${params.id}`).then(({ json }) => ({\n            data: json,\n        })),\n\n    getMany: (resource, params) => {\n        const query = {\n            filters: {\n                \"id\": {\n                    \"in\": params.ids\n                }\n            }\n        };\n\n        return httpClient(`${apiUrl}/${resource}/list`, {\n            method: 'POST',\n            body: JSON.stringify(query),\n        }).then(({ headers, json }) => {            \n            return {\n                data: json.data,\n                total: json.count\n            };\n        });\n    },\n\n    getManyReference: (resource, params) => {\n        const { page, perPage } = params.pagination;\n        const { field, order } = params.sort;\n        \n        const filter = params.filter;\n        \n        let query:any = {\n            sortBy: field,\n            sortDir: order,\n            page: (page - 1),\n            limit: perPage\n        };\n\n        if (Object.keys(filter).length > 0)\n            query[\"filters\"] = filter\n\n        return httpClient(`${apiUrl}/${resource}/list`, {\n            method: 'POST',\n            body: JSON.stringify(query),\n        }).then(({ headers, json }) => {            \n            return {\n                data: json.data,\n                total: json.count\n            };\n        });\n    },\n\n    update: (resource, params) =>\n        httpClient(`${apiUrl}/${resource}/${params.id}`, {\n            method: 'PUT',\n            body: JSON.stringify({...params.data, id: params.id}),\n        }).then(({ json }) => ({ data: json })),\n\n    // simple-rest doesn't handle provide an updateMany route, so we fallback to calling update n times instead\n    updateMany: (resource, params) =>\n        Promise.all(\n            params.ids.map(id =>\n                httpClient(`${apiUrl}/${resource}/${id}`, {\n                    method: 'PUT',\n                    body: JSON.stringify({...params.data, id: id}),\n                })\n            )\n        ).then(responses => ({ data: responses.map(({ json }) => json.id) })),\n\n    create: (resource, params) =>\n        httpClient(`${apiUrl}/${resource}`, {\n            method: 'POST',\n            body: JSON.stringify(params.data),\n        }).then(({ json }) => ({ data: json })),\n\n    delete: (resource, params) =>\n        httpClient(`${apiUrl}/${resource}/${params.id}`, {\n            method: 'DELETE',\n            headers: new Headers({\n                'Content-Type': 'text/plain',\n            }),\n        }).then(({ json }) => ({ data: json })),\n\n    // simple-rest doesn't handle filters on DELETE route, so we fallback to calling DELETE n times instead\n    deleteMany: (resource, params) =>\n        Promise.all(\n            params.ids.map(id =>\n                httpClient(`${apiUrl}/${resource}/${id}`, {\n                    method: 'DELETE',\n                    headers: new Headers({\n                        'Content-Type': 'text/plain',\n                    }),\n                })\n            )\n        ).then(responses => ({\n            data: responses.map(({ json }) => json.id),\n        })),\n});","import { AuthProvider } from 'react-admin';\n\nexport const authProvider: AuthProvider = {\n    login: ({ username, password }) => {\n        const request = new Request('../api/login', {\n            method: 'POST',\n            body: JSON.stringify({ username, password }),\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n        })\n        return fetch(request)\n            .then(response => {\n                if (response.status < 200 || response.status >= 300) {\n                    return Promise.reject(response.statusText);\n                }\n                return response.json();\n            })\n            .then(( auth ) => {\n                localStorage.setItem('roles', auth.roles);\n                return Promise.resolve();\n            });\n    },\n    logout: () => {\n        const request = new Request('../api/logout', {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' })\n        })\n        return fetch(request)\n            .then(response => {\n                if (response.status < 200 || response.status >= 300) {\n                    return Promise.resolve({redirectTo: '/login'});\n                }\n                return response.json();\n            })\n            .then(({ token }) => {\n                return Promise.resolve();\n            });\n    },\n    // called when the API returns an error\n    checkError: ({ status }) => {\n        if (status === 401 || status === 403) {\n            localStorage.removeItem('username');\n            return Promise.reject();\n        }\n        return Promise.resolve();\n    },\n    checkAuth: () => {\n        const request = new Request('../api/session', {\n            method: 'GET',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n        })\n        return fetch(request)\n            .then(response => {\n                if (response.status < 200 || response.status >= 300) {\n                    return Promise.reject()\n                }\n                return Promise.resolve();\n            })\n    },\n    getPermissions: () => {\n        const role = localStorage.getItem('roles');\n        return role ? Promise.resolve(role) : Promise.reject();\n    }\n};","import * as React from \"react\";\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\nimport SettingsSuggestIcon from '@mui/icons-material/SettingsSuggest';\nimport { Box, Card, CardContent, Grid, IconButton, Skeleton } from '@mui/material';\nimport { useState } from 'react';\nimport { AutocompleteArrayInput, DateTimeInput, FormDataConsumer, ReferenceArrayInput, SaveButton, SimpleForm, Toolbar, required, useLocaleState } from 'react-admin';\n\nexport default function EmployeeSummaryList() {\n    // State variable to store the source URL of the PDF file\n    const [pdfSource, setPdfSource] = useState('');\n    const [locale, setLocale] = useLocaleState();\n\n    return (\n        <div>\n            <Grid container spacing={2}>\n                <Grid item xs={4}>\n                <Card\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\toverflowY: \"auto\",\n\t\t\t\t\t\t\theight: \"85vh\",\n\t\t\t\t\t\t\tmarginTop: \"10px\"\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<CardContent sx={{ pt: 1 }}>\n                            <SimpleForm\n                                onSubmit={(data) => {\n                                    let url = `../api/event/print?locale=${locale}&start=${data.start.toISOString()}&end=${data.end.toISOString()}`;\n                                    if (data.employee && data.employee[0]) {\n                                        url += `&employees=${data.employee.join(\",\")}`\n                                    }\n                                    setPdfSource(url)\n                                }}\n                                toolbar={<Toolbar>\n                                    <SaveButton label={\"Generate\"} icon={<SettingsSuggestIcon />} />\n                                    <IconButton sx={{ marginLeft: \"auto\" }} aria-label=\"delete\" onClick={() => {\n                                        //debugger;\n                                    }}>\n                                        <RestartAltIcon />\n                                    </IconButton>\n                                </Toolbar>}>\n\n                                <FormDataConsumer>\n                                {({ formData, ...rest }) => \n                                <Box sx={{ flexGrow: 1 }}>\n                                    <Grid container spacing={2}>\n                                        <Grid item xs={12}>\n                                            <DateTimeInput source=\"start\" alwaysOn fullWidth validate={required()}/>\n                                        </Grid> \n                                        <Grid item xs={12}>\n                                            <DateTimeInput source=\"end\" alwaysOn fullWidth validate={required()}/>\n                                        </Grid>\n                                        <Grid item xs={12}>\n                                                <ReferenceArrayInput source=\"employee\" reference=\"employee\" label=\"Employee\" >\n                                                    <AutocompleteArrayInput optionText=\"fullname\" filterToQuery={string => ({ fullname: {ilike: `${string}`}} )}/>\n                                                </ReferenceArrayInput>\n                                        </Grid>\n                                    </Grid>\n                                </Box>\n                            }\n                            </FormDataConsumer>\n                            \n                            </SimpleForm>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</Card>\n                </Grid>\n                <Grid item xs={8} marginTop={\"10px\"}>\n                    {pdfSource && <iframe \n                        src={pdfSource} \n                        width=\"100%\" height=\"100%\" />}\n                    {!pdfSource && <Skeleton variant=\"rounded\" width=\"100%\" height=\"100%\" />}\n                </Grid>\n            </Grid>\n        </div>\n    );\n};\n","export const hexToRgb = function(hex: string | undefined) {\n    if (!hex)\n        return null;\n\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n      r: parseInt(result[1], 16),\n      g: parseInt(result[2], 16),\n      b: parseInt(result[3], 16)\n    } : null;\n};\n\nexport const textColorOnHEXBg = function(hex: string | undefined) {\n    const rgb = hexToRgb(hex);\n    if (!rgb)\n        return undefined;\n\n    return (rgb.r*0.299 + rgb.g*0.587 + rgb.b*0.114) > 186 ? \"#000000\" : \"#ffffff\";\n}\n\nexport const eventTypeEnum = {\n    \"JOB\": \"Job\",\n    \"HOLIDAY\": \"Holiday\",\n    \"PERMIT\": \"Permit\",\n    \"ILLNESS\": \"Sickness\",\n    \"MAKEUP\": \"Makeup\"\n}","import { Grid } from '@mui/material';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { BooleanInput, DateInput, FormDataConsumer, NumberInput, RadioButtonGroupInput, SelectArrayInput, SelectInput, required } from 'react-admin';\n\ninterface RruleInputProps {\n  source: string;\n}\n\n/**\n * common: \n * - repeat every X (num) day/week/month/year (select)\n * - end: never/date/after X occurrences (radio)\n * \n * week:\n * - repeat on jan/feb/mar/... (multiple, default current day of week selected)\n * \n * month:\n * - every month the day X/every month the first/second/... (preset) X (preset)\n * \n * \n * @param param0 \n * @returns \n */\nconst RruleInput: React.FC<RruleInputProps> = ({ source }) => (\n  <FormDataConsumer>\n    {({ formData, scopedFormData, getSource }) => {\n      return (\n        <>\n        <Grid container spacing={2}>\n            <Grid item xs={4}>\n              <BooleanInput source={\"recurring\"} label={formData.recurring ? \"Ripeti ogni\" : \"Ripeti\"} />\n            </Grid>\n            {formData.recurring && \n              <>\n              <Grid item xs={4}>\n                  <NumberInput source={\"interval\"} validate={required()} defaultValue={1} label=\"Intervallo\" />\n              </Grid>\n              <Grid item xs={4}>\n                <SelectInput\n                  source={`frequency`}\n                  style={{\n                    marginTop: \"0\"\n                  }}\n                  validate={required()}\n                  label=\"Frequenza\"\n                  defaultValue={2}\n                  choices={[\n                    { id: 3, name: 'Days' },\n                    { id: 2, name: 'Weeks' },\n                    { id: 1, name: 'Months' },\n                    { id: 0, name: 'Years' },\n                  ]}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                {formData.freq === 2 ? <SelectArrayInput\n                  fullWidth\n                  label=\"Si ripete il\"\n                  source={`byweekday`}\n                  defaultValue={() => {\n                    return formData.dtstart ?  (new Date(formData.dtstart)).getUTCDay() % 7 : null\n                  }}\n                  choices={[\n                    { id: 0, name: 'Domenica' },\n                    { id: 1, name: 'Lunedì' },\n                    { id: 2, name: 'Martedì' },\n                    { id: 3, name: 'Mercoledì' },\n                    { id: 4, name: 'Giovedì' },\n                    { id: 5, name: 'Venerdì' },\n                    { id: 6, name: 'Sabato' },\n                  ]}\n                /> : null }\n                <RadioButtonGroupInput source=\"until_type\" label={\"Fine:\"} sx={{\n                    '&': {width: \"100%\"},\n                    '& .MuiFormControlLabel-label': {width: \"100%\"}\n                  }} row={false} defaultValue={0}\n                  choices={[\n                      { id: 0},\n                      { id: 1},\n                      { id: 2},\n                  ]} optionText={(choice) => {\n                    switch(choice.id) {\n                      case 1: //date\n                        return (\n                          <Grid container spacing={2}  alignItems=\"center\" >\n                            <Grid item xs={4}>\n                              {\"Data:\"}\n                            </Grid>\n                            <Grid item xs={8}>\n                               {formData.until_type == 1 ? <DateInput fullWidth source={\"until_date\"} validate={required()}  /> : \"\" }\n                            </Grid>\n                          </Grid>\n                          )\n                      case 2: //occurrences\n                        return (\n                          <Grid container spacing={2} alignItems=\"center\">\n                            <Grid item xs={4}>\n                              {\"Dopo:\"}\n                            </Grid>\n                            <Grid item xs={8}>\n                              {formData.until_type == 2 ? <NumberInput fullWidth source={\"until_occurrences\"} validate={required()}  defaultValue={1} /> : \"\"}\n                            </Grid>\n                          </Grid>\n                        )\n                      default:\n                        return (\n                          <Grid container spacing={2} alignItems=\"center\">\n                            <Grid item xs={12}>\n                              {\"Mai:\"}\n                            </Grid>\n                          </Grid>\n                        )\n                    }\n                  }} />\n                </Grid>\n                </>\n              }\n            </Grid>\n          </>\n        );\n      }}\n    </FormDataConsumer>\n  );\n  \n  RruleInput.propTypes = {\n    source: PropTypes.string.isRequired,\n  };\n  \n  export default RruleInput;\n\n  ","import React from 'react';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Box, Grid, IconButton } from '@mui/material';\nimport { AutocompleteInput, BooleanInput, DateTimeInput, FormDataConsumer, ReferenceInput, SaveButton, SelectInput, SimpleForm, Toolbar, required, useDelete } from \"react-admin\";\nimport { eventTypeEnum } from '../utils/Utilities';\nimport RruleInput from './RruleInput';\n\nconst PostCreateToolbar = (props:any) => {\n    return (\n        <Toolbar>\n            <SaveButton\n                label=\"Save\"\n            />\n            <IconButton sx={{ marginLeft: \"auto\" }} aria-label=\"delete\" onClick={() => {\n                props.onRemoveClick()\n            }}>\n                <DeleteIcon />\n            </IconButton>\n        </Toolbar>\n    );\n};\n\nexport const EventPopup = (props: any) => {\n    const { onRemoveClick, ...sfProps } = props;\n\n    return (\n        <SimpleForm\n            {...sfProps}\n            toolbar={<PostCreateToolbar onRemoveClick={onRemoveClick}></PostCreateToolbar>}>\n\n            <FormDataConsumer>\n            {({ formData, ...rest }) => \n            <Box sx={{ flexGrow: 1 }}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <BooleanInput source=\"all_day\" label=\"Tutto il giorno\" />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <DateTimeInput fullWidth source=\"dtstart\" label=\"Data inizio\" validate={required()} />\n                    </Grid>\n                    {/*<Grid item xs={3}>\n                        {!formData.all_day && <TimeInput fullWidth source=\"start_time\" label=\"Ora inizio\" validate={required()} />}\n                    </Grid>*/}\n                    <Grid item xs={6}>\n                        <DateTimeInput fullWidth source=\"dtend\" label=\"Data fine\" validate={required()} />\n                    </Grid>\n                    {/*<Grid item xs={3}>\n                        {!formData.all_day && <TimeInput fullWidth source=\"end_time\" label=\"Ora fine\" validate={required()} />}\n                    </Grid>*/}\n                    <Grid item xs={4}>\n                        <SelectInput source=\"type\" validate={required()} choices={\n                            Object.entries(eventTypeEnum).map(([id, name]) => ({id,name}))\n                        } />\n                    </Grid>\n                    <Grid item xs={4}>\n                            <ReferenceInput source=\"employee\" reference=\"employee\" label=\"Employee\" >\n                                <AutocompleteInput optionText=\"fullname\" validate={required()} filterToQuery={string => ({ fullname: {ilike: `${string}`}} )}/>\n                            </ReferenceInput>\n                    </Grid>\n                    <Grid item xs={4}>\n                        {formData.type === \"JOB\" && \n                            <ReferenceInput \n                            source=\"customer\" \n                            reference=\"customer\"  \n                            label=\"Customer\">\n                                <AutocompleteInput optionText=\"name\" validate={required()} filterToQuery={string => ({ name: {ilike: `${string}`}} )}/>\n                            </ReferenceInput>\n                        }\n                    </Grid>\n                </Grid>\n                <RruleInput source=\"rrule\" />\n            </Box>\n        }\n        </FormDataConsumer>\n        </SimpleForm>\n    )\n}\n","import * as React from \"react\";\nimport { EventChangeArg, EventContentArg, EventInput } from '@fullcalendar/core';\nimport dayGrid from '@fullcalendar/daygrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport FullCalendar from '@fullcalendar/react'; // must go before plugins\nimport timeGrid from '@fullcalendar/timegrid'; // a plugin!\nimport AddIcon from '@mui/icons-material/Add';\nimport { Box, Button, Card, CardContent, Checkbox, DialogActions, DialogContent, DialogTitle, FormControl, FormControlLabel, Grid, IconButton, Popover, Radio, RadioGroup, Theme, useMediaQuery } from '@mui/material';\nimport Dialog from '@mui/material/Dialog';\nimport Fab from '@mui/material/Fab';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport moment from 'moment';\nimport { useEffect, useRef, useState } from 'react';\nimport { Loading, useCreate, useDelete, useGetList, useLocaleState, useNotify, useTranslate, useUpdate } from 'react-admin';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { EventPopup } from '../components/EventPopup';\nimport { dataProvider } from '../dataProvider';\nimport { textColorOnHEXBg } from '../utils/Utilities';\n\nimport CloseIcon from '@mui/icons-material/Close';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport EventRoundedIcon from '@mui/icons-material/EventRounded';\nimport QueryBuilderRoundedIcon from '@mui/icons-material/QueryBuilderRounded';\nimport RepeatRoundedIcon from '@mui/icons-material/RepeatRounded';\nimport SquareRoundedIcon from '@mui/icons-material/SquareRounded';\n\n\nexport default function CalendarView() {\n\tconst isSmall = useMediaQuery<Theme>(theme => theme.breakpoints.down('md'));\n    const translate = useTranslate();\n\tconst [locale] = useLocaleState();\n\tconst calendarRef = useRef<FullCalendar>(null);\n\tconst [create] = useCreate();\n\tconst [update] = useUpdate();\n\tconst [_delete] = useDelete();\n\tconst notify = useNotify();\n\tconst [calendarValue, setCalendarValue] = useState(new Date());\n\tconst [recurrAction, setRecurrAction] = useState(\"0\")\n\tconst [dialog, setDialog] = useState<any>({\n\t\topen: false,\n\t\trecord: undefined\n\t});\n\tconst [editDialog, setEditDialog] = useState<any>({\n\t\topen: false,\n\t\trecord: undefined\n\t});\n\tconst [recurrDialog, setRecurrDialog] = useState<any>({\n\t\tfcinfo: undefined, //fullcalendar event info\n\t\topen: false,\n\t\trecord: undefined,\n\t\tevent: undefined //edit or delete\n\t});\n\tconst [window, setWindow] = useState<any>({\n\t\tstart: null,\n\t\tend: null\n\t})\n\n\tconst [popover, setPopover] = useState<any>({\n\t\topen: false,\n\t\trecord: undefined,\n\t\tanchorEl: null\n\t})\n\n\tconst [unchecked, setUnchecked] = useState([] as number[]);\n\tconst [events, setEvents] = useState([] as EventInput[]);\n\n\tconst { data, isLoading, error } = useGetList(\n\t\t'employee', { \n            pagination: { page: 0, perPage: 0 }\n        }\n\t);\n\n\tconst flattenRecord = (event: EventInput) => {\n\t\tvar record = event,\n\t\t\textProps = record.extendedProps;\n\n\t\tdelete record[\"extendedProps\"];\n\t\tvar data = { ...record, ...extProps };\n\t\tdata.dtstart = data.start;\n\t\tdata.dtend = data.end;\n\n\t\treturn data;\n\t}\n\n\t/**\n\t * \n\t * @param callback \n\t * @returns \n\t */\n\tconst reloadEvents = (callback?: () => void) => {\n\t\tif (!data || !window.start)\n\t\t\treturn;\n\n\t\tlet groups = data!.map(e => e.id);\n\t\tgroups = groups.filter(g => !unchecked.includes(g))\n\n\t\tlet params = {\n\t\t\t\"start\": window.start,\n\t\t\t\"end\": window.end,\n\t\t\t\"groups\": unchecked.length > 0 ? groups : null,\n\t\t\t\"detailed\": true\n\t\t};\n\n\t\tdataProvider.getTimelineData(params)\n\t\t\t.then((res) => {\n\t\t\t\tlet fetchedEvents = res.data?.map((e: EventInput) => {\n\t\t\t\t\te.start = new Date(e.dtstart);\n\t\t\t\t\te.end = new Date(e.dtend);\n\t\t\t\t\te.allDay = e.all_day;\n\t\t\t\t\te.textColor = textColorOnHEXBg(e.color);\n\t\t\t\t\te.original_start_date = new Date(e.dtstart).toISOString()\n\t\t\t\t\te.title = e.type == \"JOB\" ? e.title : e.type //TODO: translate this enum\n\t\t\t\t\t\n\t\t\t\t\treturn e;\n\t\t\t\t})\n\n\t\t\t\tsetEvents(fetchedEvents);\n\t\t\t\tif (callback)\n\t\t\t\t\tcallback()\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.error(err);\n\t\t\t});\n\t}\n\n\t/**\n\t * on window change load the events\n\t */\n\tuseEffect(() => {\n\t\treloadEvents()\n\t}, [window, data, unchecked])\n\n\tif (isLoading) { return <Loading />; }\n\tif (error) { return <p>ERROR</p>; }\n\n\tconst shallowRemoveEvent = (eventId: string) => {\n\t\tlet currEvents = events;\n\t\tcurrEvents = currEvents.filter(e => e.id != eventId);\n\n\t\tsetEvents(currEvents);\n\t}\n\n\tconst eventCreate = (data: any) => {\n\t\tdata.timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\t\tdata.dtstamp = new Date().toISOString();\n\t\tdata.dtstart = new Date(data.dtstart).toISOString()\n\t\tdata.dtend = new Date(data.dtend).toISOString()\n\n\t\tcreate('event', { data }, {\n\t\t\tonError: (error) => {\n\t\t\t\tnotify(translate(\"ess.calendar.event.error_create\")) \n\t\t\t\tconsole.error(error)\n\t\t\t},\n\t\t\tonSettled: (data, error) => {\n\t\t\t\thandleClose();\n\t\t\t\treloadEvents(() => {\n\t\t\t\t\tnotify(translate(\"ess.calendar.event.success_create\")) \n\t\t\t\t})\n\t\t\t},\n\t\t});\n\t}\n\n\tconst eventEditSubmit = (info?: EventChangeArg) => {\n\t\tlet record = info && info.event ? flattenRecord(info.event.toJSON()) : info || editDialog.record;\n\t\trecord.dtstart = new Date(record.dtstart).toISOString()\n\t\trecord.dtend = new Date(record.dtend).toISOString()\n\t\t//record.timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\t\t//record.dtstamp = new Date().toISOString();\n\n\t\tif (record?.parent) {\n\t\t\tsetRecurrDialog({\n\t\t\t\topen: true,\n\t\t\t\trecord: record,\n\t\t\t\tfcinfo: info,\n\t\t\t\tevent: \"edit\"\n\t\t\t})\n\t\t} else {\n\t\t\tupdate('event', { id: record.id, data: record }, {\n\t\t\t\tonError: (error) => {\n\t\t\t\t\tnotify(translate(\"ess.calendar.event.error_update\")) \n\t\t\t\t\tconsole.error(error)\n\t\t\t\t},\n\t\t\t\tonSettled: (data, error) => {\n\t\t\t\t\tnotify(translate(\"ess.calendar.event.success_update\")) \n\t\t\t\t\tsetEditDialog({\n\t\t\t\t\t\topen: false,\n\t\t\t\t\t\trecord: null\n\t\t\t\t\t});\n\n\t\t\t\t\treloadEvents(() => {\n\t\t\t\t\t\tnotify(translate(\"ess.calendar.event.success_create\")) \n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tconst eventRemove = () => {\n\t\tconst record = editDialog.record || popover.record;\n\t\t\n\t\tif (record?.parent) {\n\t\t\tsetRecurrDialog({\n\t\t\t\topen: true,\n\t\t\t\trecord: record,\n\t\t\t\tfcinfo: undefined,\n\t\t\t\tevent: \"delete\"\n\t\t\t})\n\t\t} else {\n\t\t\t_delete('event', { id: record.id, previousData: record }, {\n\t\t\t\tonError: (error) => {\n\t\t\t\t\tnotify(translate(\"ess.calendar.event.error_delete\"))\n\t\t\t\t\tconsole.error(error)\n\t\t\t\t},\n\t\t\t\tonSettled: (data, error) => {\n\t\t\t\t\tnotify(translate(\"ess.calendar.event.success_delete\"))\n\t\t\t\t\tsetPopover({\n\t\t\t\t\t\topen: false,\n\t\t\t\t\t\trecord: null,\n\t\t\t\t\t\tanchorEl: null\n\t\t\t\t\t});\n\t\t\t\t\tshallowRemoveEvent(record.id)\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\tconst handleToggle = (value: number) => () => {\n\t\tconst currentIndex = unchecked.indexOf(value);\n\t\tconst newUnchecked = [...unchecked];\n\n\t\tif (currentIndex === -1) {\n\t\t\tnewUnchecked.push(value);\n\t\t} else {\n\t\t\tnewUnchecked.splice(currentIndex, 1);\n\t\t}\n\n\t\tsetUnchecked(newUnchecked);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetDialog({\n\t\t\topen: false,\n\t\t\trecord: {}\n\t\t})\n\t}\n\n\tconst handleOpen = (record: any = null) => {\n\t\tlet props: any = {\n\t\t\topen: true\n\t\t}\n\t\tif (record && record.id) {\n\t\t\tprops[\"record\"] = record;\n\t\t}\n\n\t\tsetDialog(props)\n\t}\n\n\tconst handleCloseRecurrEvt = () => {\n\t\tif (recurrDialog.fcinfo)\n\t\t\trecurrDialog.fcinfo.revert()\n\n\t\tsetRecurrDialog({\n\t\t\topen: false,\n\t\t\tfcinfo: undefined,\n\t\t\trecord: undefined,\n\t\t\tevent: undefined\n\t\t})\n\t}\n\n\tconst handleSubmitRecurrEvt = () => {\n\t\tvar data = recurrDialog.record,\n\t\t\taction = recurrAction,\n\t\t\tparent = data.parent,\n\t\t\tevent = recurrDialog.event;\n\n\t\tconst callback = () => {\n\t\t\treloadEvents(() => {\n\t\t\t\tnotify(translate(\"ess.calendar.event.success_update\"))\n\n\t\t\t\tsetRecurrAction(\"0\")\n\t\t\t\tsetPopover({\n\t\t\t\t\topen: false,\n\t\t\t\t\trecord: null,\n\t\t\t\t\tanchorEl: null\n\t\t\t\t});\n\t\t\t\tsetEditDialog({\n\t\t\t\t\topen: false,\n\t\t\t\t\trecord: null\n\t\t\t\t});\n\t\t\t\tsetRecurrDialog({\n\t\t\t\t\topen: false,\n\t\t\t\t\tfcinfo: undefined,\n\t\t\t\t\trecord: undefined,\n\t\t\t\t\tevent: undefined\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\tswitch (action) {\n\t\t\tcase \"0\": //this event only\n\t\t\t\tdelete data[\"id\"];\n\n\t\t\t\tvar ex_dates = parent.ex_dates;\n\t\t\t\tparent.ex_dates = [ex_dates, data.original_start_date].filter(Boolean).join(\",\");\n\n\t\t\t\tdelete data[\"original_start_date\"]\n\t\t\t\tdata.recurring = false;\n\n\t\t\t\tupdate('event', { id: parent.id, data: parent }, {\n\t\t\t\t\tonError: (error) => {\n\t\t\t\t\t\tnotify(translate(\"ess.calendar.event.error\"))\n\t\t\t\t\t\tconsole.error(error)\n\t\t\t\t\t},\n\t\t\t\t\tonSettled: (d, error) => {\n\t\t\t\t\t\tif (event == \"edit\") {\n\t\t\t\t\t\t\tcreate('event', { data: data }, {\n\t\t\t\t\t\t\t\tonError: (error) => {\n\t\t\t\t\t\t\t\t\tnotify(translate(\"ess.calendar.event.error\"))\n\t\t\t\t\t\t\t\t\tconsole.error(error)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tonSettled: (d, error) => {\n\t\t\t\t\t\t\t\t\tcallback()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcallback()\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t});\n\n\n\t\t\t\tbreak;\n\t\t\tcase \"1\": //this and following events\n\t\t\t\tdelete data[\"id\"];\n\n\t\t\t\tparent.until_type = 1;\n\t\t\t\tparent.until_date = data.original_start_date;\n\n\t\t\t\tdelete data[\"parent\"]\n\t\t\t\tdelete data[\"original_start_date\"]\n\n\t\t\t\tupdate('event', { id: parent.id, data: parent }, {\n\t\t\t\t\tonError: (error) => {\n\t\t\t\t\t\tnotify(translate(\"ess.calendar.event.error\"))\n\t\t\t\t\t\tconsole.error(error)\n\t\t\t\t\t},\n\t\t\t\t\tonSettled: (oldevt, error) => {\n\t\t\t\t\t\tif (event == \"edit\") {\n\t\t\t\t\t\t\tcreate('event', { data: data }, {\n\t\t\t\t\t\t\t\tonError: (error) => {\n\t\t\t\t\t\t\t\t\tnotify(translate(\"ess.calendar.event.error\"))\n\t\t\t\t\t\t\t\t\tconsole.error(error)\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tonSettled: (data, error) => {\n\t\t\t\t\t\t\t\t\tcallback()\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcallback()\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"2\": //all events\n\t\t\t\tdata.id = parent.id;\n\n\t\t\t\tdelete data[\"parent\"]\n\t\t\t\tdelete data[\"original_start_date\"]\n\n\t\t\t\t_delete('event', { id: data.id, previousData: parent }, {\n\t\t\t\t\tonError: (error) => {\n\t\t\t\t\t\tnotify(translate(\"ess.calendar.event.error\"))\n\t\t\t\t\t\tconsole.error(error)\n\t\t\t\t\t},\n\t\t\t\t\tonSettled: (data, error) => {\n\t\t\t\t\t\tcallback()\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t//unhandled action\t\t\t\n\t\t}\n\t}\n\n\treturn (\n\t\t<div id=\"calendar-container\" style={{\n\t\t\tmargin: \"30px 0\"\n\t\t}}>\n\t\t\t<Box display=\"flex\">\n\t\t\t\t{\n\t\t\t\t\t/**\n\t\t\t\t\t * Left component\n\t\t\t\t\t */\n\t\t\t\t}\n\t\t\t\t<Box\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tdisplay: { xs: 'none', md: 'block' },\n\t\t\t\t\t\torder: -1,\n\t\t\t\t\t\twidth: '17em',\n\t\t\t\t\t\tmr: 2,\n\t\t\t\t\t\talignSelf: 'flex-start',\n\t\t\t\t\t\theight: \"85vh\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Card\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\toverflowY: \"auto\",\n\t\t\t\t\t\t\theight: \"85vh\",\n\t\t\t\t\t\t\tmarginTop: \"10px\"\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<CardContent sx={{ pt: 1 }}>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * Small calendar component\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t<Calendar\n\t\t\t\t\t\t\t\tshowFixedNumberOfWeeks={true}\n\t\t\t\t\t\t\t\t//onChange={setCalendarValue} \n\t\t\t\t\t\t\t\tvalue={calendarValue}\n\t\t\t\t\t\t\t\tformatShortWeekday={(locale, date) => date.toLocaleDateString(locale, { weekday: 'narrow' })}\n\t\t\t\t\t\t\t\tlocale={locale}\n\t\t\t\t\t\t\t\tnavigationLabel={({ date, label, locale, view }) => label}\n\t\t\t\t\t\t\t\tnext2Label={null}\n\t\t\t\t\t\t\t\tprev2Label={null}\n\t\t\t\t\t\t\t\tonClickDay={(value) => {\n\t\t\t\t\t\t\t\t\tlet calendar = calendarRef.current;\n\t\t\t\t\t\t\t\t\tcalendar?.getApi().gotoDate(value)\n\t\t\t\t\t\t\t\t\tsetCalendarValue(value)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * Employee list\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t<h4 style={{\n\t\t\t\t\t\t\t\tmarginBottom: \"0\",\n\t\t\t\t\t\t\t\tpadding: \"0 6px\",\n\t\t\t\t\t\t\t\tmarginTop: \"25px\"\n\t\t\t\t\t\t\t}}>Calendars</h4>\n\t\t\t\t\t\t\t<nav aria-label=\"main\">\n\t\t\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t\t\t{data!.map(record => {\n\t\t\t\t\t\t\t\t\t\tconst labelId = `checkbox-list-label-${record.id}`;\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<ListItem disablePadding key={record.id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<ListItemButton role={undefined} onClick={handleToggle(record.id)} dense>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemIcon style={{minWidth: '40px'}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={unchecked.indexOf(record.id) === -1}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableRipple\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: record.color,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{ 'aria-labelledby': labelId }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={labelId}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprimary={record.fullname}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsecondaryTypographyProps={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: 200,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"12px\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsecondary={translate(\"ess.calendar.calendarlist.number\") + \": \" + record.number} />\n\t\t\t\t\t\t\t\t\t\t\t\t</ListItemButton>\n\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t</nav>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</Card>\n\t\t\t\t</Box>\n\t\t\t\t{\n\t\t\t\t\t/**\n\t\t\t\t\t * Fullcalendar/Main component\n\t\t\t\t\t */\n\t\t\t\t}\n\t\t\t\t<Box width={isSmall ? 'auto' : 'calc(100% - 18em)'} height=\"85vh\">\n\t\t\t\t\t<FullCalendar\n\t\t\t\t\t\tref={calendarRef}\n\t\t\t\t\t\t//timeZone={'UTC'}\n\t\t\t\t\t\tlocale={locale}\n\t\t\t\t\t\theight=\"100%\"\n\t\t\t\t\t\tselectable={true}\n\t\t\t\t\t\tslotMinTime=\"05:00:00\"\n\t\t\t\t\t\tslotMaxTime=\"22:00:00\"\n\t\t\t\t\t\tplugins={[timeGrid, dayGrid, interactionPlugin]}\n\t\t\t\t\t\theaderToolbar={{\n\t\t\t\t\t\t\tleft: 'today title',\n\t\t\t\t\t\t\tcenter: '',\n\t\t\t\t\t\t\tright: 'prev,next'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ttitleFormat={{ year: 'numeric', month: 'long' }}\n\t\t\t\t\t\teventMaxStack={5}\n\t\t\t\t\t\tinitialView=\"timeGridWeek\"\n\t\t\t\t\t\tselect={(info) => {\n\t\t\t\t\t\t\tsetDialog({\n\t\t\t\t\t\t\t\topen: true,\n\t\t\t\t\t\t\t\trecord: {\n\t\t\t\t\t\t\t\t\tdtstart: info.startStr,\n\t\t\t\t\t\t\t\t\tdtend: info.endStr,\n\t\t\t\t\t\t\t\t\tall_day: info.allDay || false\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}}\n\t\t\t\t\t\teventContent={(eventContent: EventContentArg) => {\n\t\t\t\t\t\t\tif (eventContent.timeText)\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t{eventContent.event.title}<br />\n\t\t\t\t\t\t\t\t\t\t<i>{eventContent.timeText} </i>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<i>{eventContent.event.title}</i>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}}\n\n\t\t\t\t\t\teventClick={(info) => {\n\t\t\t\t\t\t\tconst item = info.event.toJSON();\n\n\t\t\t\t\t\t\tsetPopover({\n\t\t\t\t\t\t\t\topen: true,\n\t\t\t\t\t\t\t\tanchorEl: info.el,\n\t\t\t\t\t\t\t\trecord: flattenRecord(item)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}}\n\t\t\t\t\t\teventChange={(info) => {\n\t\t\t\t\t\t\teventEditSubmit(info)\n\t\t\t\t\t\t}}\n\t\t\t\t\t\teditable={true}\n\t\t\t\t\t\tevents={events}\n\t\t\t\t\t\tdatesSet={(dateInfo) => {\n\t\t\t\t\t\t\tsetWindow({\n\t\t\t\t\t\t\t\tstart: dateInfo.start.toISOString(),\n\t\t\t\t\t\t\t\tend: dateInfo.end.toISOString()\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\tif (dateInfo.start > calendarValue || dateInfo.end < calendarValue)\n\t\t\t\t\t\t\t\tsetCalendarValue(moment(dateInfo.start).add(moment(calendarValue).weekday(), 'd').toDate());\n\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t\t{\n\t\t\t\t/**\n\t\t\t\t * Dialog (popup) opened on \"add button\"\n\t\t\t\t * or on \"select\" calendar event\n\t\t\t\t */\n\t\t\t}\n\t\t\t<Dialog\n\t\t\t\topen={dialog.open}\n\t\t\t\tonClose={handleClose}\n\t\t\t>\n\t\t\t\t<DialogTitle>New event</DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<EventPopup\n\t\t\t\t\t\t{...dialog}\n\t\t\t\t\t\tsanitizeEmptyValues\n\t\t\t\t\t\tresource=\"event\"\n\t\t\t\t\t\tonSubmit={eventCreate}>\n\t\t\t\t\t</EventPopup>\n\t\t\t\t</DialogContent>\n\t\t\t</Dialog>\n\t\t\t{\n\t\t\t\t/**\n\t\t\t\t * Dialog (popup) opened on \"recurring event\" change\n\t\t\t\t * useful to choose what to do on the recurring timeline\n\t\t\t\t */\n\t\t\t}\n\t\t\t<Dialog open={recurrDialog.open}>\n\t\t\t\t<DialogTitle>Edit recurring event</DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<FormControl>\n\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\taria-labelledby=\"demo-radio-buttons-group-label\"\n\t\t\t\t\t\t\tdefaultValue=\"0\"\n\t\t\t\t\t\t\tname=\"radio-buttons-group\"\n\t\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\t\tsetRecurrAction(e.target.value)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<FormControlLabel value=\"0\" control={<Radio />} label={translate(\"ess.calendar.event.recurring.thisev\")} />\n\t\t\t\t\t\t\t<FormControlLabel value=\"1\" control={<Radio />} label={translate(\"ess.calendar.event.recurring.thisandfoll\")} />\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t//disabled because it is tricky to handle\n\t\t\t\t\t\t\t\t//<FormControlLabel value=\"2\" control={<Radio />} label=\"All events\" />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t</FormControl>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button onClick={handleCloseRecurrEvt}>Cancel</Button>\n\t\t\t\t\t<Button onClick={handleSubmitRecurrEvt}>OK</Button>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\t\t\t{\n\t\t\t\t/**\n\t\t\t\t * Add button\n\t\t\t\t */\n\t\t\t}\n\t\t\t<Fab color=\"primary\" aria-label=\"add\" style={{\n\t\t\t\tright: 20,\n\t\t\t\tposition: 'fixed',\n\t\t\t\tbottom: 10\n\t\t\t}} onClick={handleOpen}>\n\t\t\t\t<AddIcon />\n\t\t\t</Fab>\n\t\t\t{\n\t\t\t\t/**\n\t\t\t\t * Popover attached to the event on event click\n\t\t\t\t */\n\t\t\t}\n\t\t\t<Dialog\n\t\t\t\topen={editDialog.open}\n\t\t\t\tonClose={() => {\n\t\t\t\t\tsetEditDialog({\n\t\t\t\t\t\topen: false,\n\t\t\t\t\t\trecord: null,\n\t\t\t\t\t\tanchorEl: null\n\t\t\t\t\t});\n\t\t\t\t}}>\n\t\t\t\t<DialogTitle>Edit event</DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<EventPopup\n\t\t\t\t\t\tsanitizeEmptyValues\n\t\t\t\t\t\trecord={editDialog.record}\n\t\t\t\t\t\tresource=\"event\"\n\t\t\t\t\t\tonSubmit={eventEditSubmit}\n\t\t\t\t\t\tonRemoveClick={eventRemove}>\n\t\t\t\t\t</EventPopup>\n\t\t\t\t</DialogContent>\n\t\t\t</Dialog>\n\n\t\t\t<Popover\n\t\t\t\topen={popover.open}\n\t\t\t\tanchorEl={popover.anchorEl}\n\t\t\t\tonClose={() => {\n\t\t\t\t\tsetPopover({\n\t\t\t\t\t\topen: false,\n\t\t\t\t\t\trecord: null,\n\t\t\t\t\t\tanchorEl: null\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t\tPaperProps={{\n\t\t\t\t\tstyle: { width: '300px' },\n\t\t\t\t}}\n\t\t\t\tanchorOrigin={{\n\t\t\t\t\tvertical: 'center',\n\t\t\t\t\thorizontal: 'left',\n\t\t\t\t}}\n\t\t\t\ttransformOrigin={{\n\t\t\t\t\tvertical: 'center',\n\t\t\t\t\thorizontal: 'right',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Box sx={{ m: 0.5 }}>\n\t\t\t\t\t<Grid container justifyContent=\"flex-end\">\n\t\t\t\t\t\t<IconButton onClick={() => {\n\t\t\t\t\t\t\tsetEditDialog({\n\t\t\t\t\t\t\t\topen: true,\n\t\t\t\t\t\t\t\trecord: popover.record\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tsetPopover({\n\t\t\t\t\t\t\t\topen: false,\n\t\t\t\t\t\t\t\trecord: null,\n\t\t\t\t\t\t\t\tanchorEl: null\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<EditIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<IconButton onClick={eventRemove}>\n\t\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<IconButton onClick={() => {\n\t\t\t\t\t\t\tsetPopover({\n\t\t\t\t\t\t\t\topen: false,\n\t\t\t\t\t\t\t\trecord: null,\n\t\t\t\t\t\t\t\tanchorEl: null\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid container justifyContent=\"flex-start\">\n\t\t\t\t\t\t<List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\n\t\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t\t<ListItemIcon style={{minWidth: '40px'}}>\n\t\t\t\t\t\t\t\t\t<SquareRoundedIcon style={{ color: popover.record?.backgroundColor }} />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary={popover.record?.employee_fullname} />\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t\t<ListItemIcon style={{minWidth: '40px'}}>\n\t\t\t\t\t\t\t\t\t<EventRoundedIcon />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary={popover.record?.title} />\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t\t<ListItemIcon style={{minWidth: '40px'}}>\n\t\t\t\t\t\t\t\t\t<QueryBuilderRoundedIcon />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\tprimary={new Date(popover.record?.dtstart).toLocaleString()}\n\t\t\t\t\t\t\t\t\tsecondary={new Date(popover.record?.dtend).toLocaleString()} />\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t<ListItem style={{\n\t\t\t\t\t\t\t\tdisplay: popover.record?._rrule == null ? \"none\" : \"default\"\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<ListItemIcon style={{minWidth: '40px'}}>\n\t\t\t\t\t\t\t\t\t<RepeatRoundedIcon />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\tprimary={popover.record?._rrule?.toText()} />\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Box>\n\t\t\t</Popover>\n\t\t</div >\n\t)\n}\n","import React from 'react'\nimport { useInput, useRecordContext, Validator } from 'ra-core'\nimport { TextInput } from 'react-admin';\nimport { useState } from 'react'\nimport * as ReactColor from 'react-color'\nimport './css/ColorInput.css'\n\ninterface ColorFieldProps {\n  source: string\n  // eslint-disable-next-line react/no-unused-prop-types\n  label?: string\n  className?: string\n}\n\nexport const ColorField = ({ source }: ColorFieldProps) => {\n  const record = useRecordContext()\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <div\n        style={{\n          width: '20px',\n          height: '20px',\n          background: record[source],\n          marginRight: '5px',\n        }}\n      />\n    </div>\n  )\n}\n\ninterface ColorInputProps {\n  label?: string\n  fullWidth?: boolean\n  options?: {\n    disableAlpha: true\n  }\n  source: string\n  isRequired?: boolean\n  validate?: Validator | Validator[] | undefined\n  picker?:\n    | 'Alpha'\n    | 'Block'\n    | 'Check'\n    | 'Chrome'\n    | 'Circle'\n    | 'Compact'\n    | 'Github'\n    | 'Hue'\n    | 'Material'\n    | 'Photoshop'\n    | 'Sketch'\n    | 'Slider'\n    | 'Swatches'\n    | 'Twitter'\n    | 'Custom'\n}\n\nexport const ColorInput = (props: ColorInputProps) => {\n  const [show, setShow] = useState(false)\n\n  const {\n    label,\n    source,\n    fullWidth,\n    options,\n    picker = 'Chrome',\n    validate,\n  } = props\n\n  const {\n    field,\n    fieldState: { isTouched, error },\n    isRequired,\n  } = useInput({\n    ...props,\n    validate,\n  })\n\n  const handleOpen = () => setShow(true)\n  const handleClose = () => setShow(false)\n  const handleChange = ({ hex }: any) => {\n    field.onChange(hex)\n  }\n\n  const Picker = ReactColor[`${picker}Picker` as keyof typeof ReactColor]\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <TextInput\n        {...field}\n        fullWidth={fullWidth}\n        source={source}\n        onFocus={handleOpen}\n        isRequired={isRequired}\n        label={label}\n        error={!!(isTouched && error)}\n      />\n      {show ? (\n        <div className=\"ColorInput-popup\">\n          {/* eslint-disable-next-line */}\n          <div className=\"ColorInput-cover\" onClick={handleClose} />\n          {/* eslint-disable-next-line @typescript-eslint/ban-ts-comment */}\n          {/* @ts-ignore */}\n          <Picker {...options} color={field.value} onChange={handleChange} />\n        </div>\n      ) : null}\n      <div\n        style={{\n          width: '20px',\n          height: '40px',\n          background: field.value ? field.value : \"#FFFFFF\",\n          border: \"1px solid #bbb\",\n          marginRight: '5px',\n          marginLeft: '-1px'\n        }}\n      />\n    </div>\n  )\n}","/* eslint-disable import/no-anonymous-default-export */\nimport { EmployeeList } from './EmployeeList';\nimport { EmployeeEdit } from './EmployeeEdit';\nimport { EmployeeCreate } from './EmployeeCreate';\n\nexport default {\n    list: EmployeeList,\n    create: EmployeeCreate,\n    edit: EmployeeEdit\n};","import React from 'react';\nimport { List, Datagrid, TextField, NumberField, BooleanField, EditButton, DeleteButton, CloneButton } from 'react-admin';\n\nimport { ColorField } from '../components/ColorInput';\n\nexport const EmployeeList = () => (\n    <List>\n        <Datagrid rowClick=\"edit\">\n            <ColorField source=\"color\" />\n            <TextField source=\"number\" />\n            <TextField source=\"name\" />\n            <TextField source=\"surname\" />\n            <TextField source=\"phone\" />\n            <TextField source=\"email\" />\n            <NumberField source=\"weekHrs\" />\n            <BooleanField source=\"active\" />\n            <EditButton />\n            <DeleteButton />\n            <CloneButton />\n        </Datagrid>\n    </List>\n);","import Grid from '@mui/material/Grid';\nimport { BooleanInput, Create, SimpleForm, TextInput, required, useTranslate } from 'react-admin';\n\nimport { ColorInput } from '../components/ColorInput';\n\nexport const EmployeeCreate = () => {\n    const translate = useTranslate();\n\n    return (\n        <Create redirect=\"list\">\n            <SimpleForm>\n                <Grid container spacing={2}>\n                    <Grid item xs={4}>\n                        <TextInput source=\"number\" fullWidth label={translate(`resources.employee.fields.number`)} validate={required()}/>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <BooleanInput source=\"active\" fullWidth label={translate(`resources.employee.fields.active`)} defaultValue={true} />\n                    </Grid>\n                    <Grid item xs={4}>\n                        <ColorInput source=\"color\" label={translate(`resources.employee.fields.color`)} fullWidth validate={required()} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <TextInput source=\"name\" fullWidth label={translate(`resources.employee.fields.name`)} validate={required()} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <TextInput source=\"surname\" fullWidth label={translate(`resources.employee.fields.surname`)} validate={required()} />\n                    </Grid>\n                    <Grid item xs={4}>\n                        <TextInput source=\"phone\" fullWidth label={translate(`resources.employee.fields.phone`)} />\n                    </Grid>\n                    <Grid item xs={4}>\n                        <TextInput source=\"email\" fullWidth label={translate(`resources.employee.fields.email`)} />\n                    </Grid>\n                </Grid>\n            </SimpleForm>\n\n        </Create>\n    );\n};\n","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport { BooleanInput, SimpleForm, TextInput, required, Edit, useTranslate } from 'react-admin';\n\nimport {  ColorInput } from '../components/ColorInput';\n\nexport const EmployeeEdit = () => {\n    const translate = useTranslate();\n\n    return (<Edit redirect=\"list\">\n        <SimpleForm>\n            <Grid container spacing={2}>\n                <Grid item xs={3}>\n                    <TextInput disabled source=\"id\" />\n                </Grid>\n                <Grid item xs={3}>\n                    <TextInput source=\"number\" fullWidth label={translate(`resources.employee.fields.number`)} validate={required()}/>\n                </Grid>\n                <Grid item xs={3}>\n                    <BooleanInput source=\"active\" fullWidth label={translate(`resources.employee.fields.active`)} defaultValue={true} />\n                </Grid>\n                <Grid item xs={3}>\n                    <ColorInput source=\"color\" label={translate(`resources.employee.fields.color`)} fullWidth validate={required()} />\n                </Grid>\n                <Grid item xs={6}>\n                    <TextInput source=\"name\" fullWidth label={translate(`resources.employee.fields.name`)} validate={required()} />\n                </Grid>\n                <Grid item xs={6}>\n                    <TextInput source=\"surname\" fullWidth label={translate(`resources.employee.fields.surname`)} validate={required()} />\n                </Grid>\n                <Grid item xs={4}>\n                    <TextInput source=\"phone\" fullWidth label={translate(`resources.employee.fields.phone`)} />\n                </Grid>\n                <Grid item xs={4}>\n                    <TextInput source=\"email\" fullWidth label={translate(`resources.employee.fields.email`)} />\n                </Grid>\n            </Grid>\n        </SimpleForm>\n    </Edit>)\n}","/* eslint-disable import/no-anonymous-default-export */\nimport { CustomerList } from './CustomerList';\nimport { CustomerEdit } from './CustomerEdit';\nimport { CustomerCreate } from './CustomerCreate';\n\nexport default {\n    list: CustomerList,\n    create: CustomerCreate,\n    edit: CustomerEdit\n};","import React from 'react';\nimport { CloneButton, Datagrid, DeleteButton, EditButton, List, TextField } from 'react-admin';\n\nexport const CustomerList = () => (\n    <List>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"vat\" />\n            <TextField source=\"name\" />\n            <TextField source=\"phone\" />\n            <TextField source=\"city\" />\n            <TextField source=\"website\" />\n            <EditButton />\n            <DeleteButton />\n            <CloneButton />\n        </Datagrid>\n    </List>\n);","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport { Create, SimpleForm, TextInput, required, useTranslate } from 'react-admin';\n\n\nexport const CustomerCreate = () => {\n    const translate = useTranslate();\n\n    return (<Create redirect=\"list\">\n        <SimpleForm>\n            <Grid container spacing={2}>\n                <Grid item xs={6}>\n                    <TextInput source=\"vat\" fullWidth label={translate(`resources.customer.fields.vat`)} validate={required()} />\n                </Grid>\n                <Grid item xs={6}>\n                    <TextInput source=\"name\" fullWidth label={translate(`resources.customer.fields.name`)} validate={required()} />\n                </Grid>\n                <Grid item xs={6}>\n                    <TextInput source=\"email\" fullWidth label={translate(`resources.customer.fields.email`)} />\n                </Grid>\n                <Grid item xs={6}>\n                    <TextInput source=\"phone\" fullWidth label={translate(`resources.customer.fields.phone`)} />\n                </Grid>\n                <Grid item xs={6}>\n                    <TextInput source=\"zipcode\" fullWidth label={translate(`resources.customer.fields.zipcode`)} />\n                </Grid>\n                <Grid item xs={6}>\n                    <TextInput source=\"city\" fullWidth label={translate(`resources.customer.fields.city`)} />\n                </Grid>\n                <Grid item xs={6}>\n                    <TextInput source=\"website\" fullWidth label={translate(`resources.customer.fields.website`)} />\n                </Grid>\n            </Grid>\n        </SimpleForm>\n    </Create>)\n}","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport { Edit, SimpleForm, TextInput, required, useTranslate } from 'react-admin';\n\nexport const CustomerEdit = () => {\n    const translate = useTranslate();\n\n    return (<Edit redirect=\"list\">\n        <SimpleForm>\n            <Grid container spacing={2}>\n                <Grid item xs={4}>\n                    <TextInput disabled source=\"id\" />\n                </Grid>\n                <Grid item xs={4}>\n                    <TextInput source=\"vat\" fullWidth label={translate(`resources.customer.fields.vat`)} validate={required()} />\n                </Grid>\n                <Grid item xs={4}>\n                    <TextInput source=\"name\" fullWidth label={translate(`resources.customer.fields.name`)} validate={required()} />\n                </Grid>\n                <Grid item xs={6}>\n                    <TextInput source=\"email\" fullWidth label={translate(`resources.customer.fields.email`)} />\n                </Grid>\n                <Grid item xs={6}>\n                    <TextInput source=\"phone\" fullWidth label={translate(`resources.customer.fields.phone`)} />\n                </Grid>\n                <Grid item xs={6}>\n                    <TextInput source=\"zipcode\" fullWidth label={translate(`resources.customer.fields.zipcode`)} />\n                </Grid>\n                <Grid item xs={6}>\n                    <TextInput source=\"city\" fullWidth label={translate(`resources.customer.fields.city`)} />\n                </Grid>\n                <Grid item xs={6}>\n                    <TextInput source=\"website\" fullWidth label={translate(`resources.customer.fields.website`)} />\n                </Grid>\n            </Grid>\n        </SimpleForm>\n    </Edit>)\n}","import CloseIcon from '@mui/icons-material/Close';\nimport LockResetIcon from '@mui/icons-material/LockReset';\nimport { Dialog, DialogContent, DialogTitle, IconButton } from '@mui/material';\nimport React, { useState } from 'react';\nimport { Button, RaRecord, SaveButton, SimpleForm, TextInput, Toolbar, required, useCreatePath, useNotify, useRecordContext, useResourceContext, useTranslate } from \"react-admin\";\nimport { dataProvider } from \"../dataProvider\";\n\nexport const PasswordUpdateBtn = <RecordType extends RaRecord = any>(\n    props: any\n) => {\n    const notify = useNotify();\n    const translate = useTranslate();\n    const record = useRecordContext(props);\n\n    const {\n        icon = <LockResetIcon />,\n        label = translate(\"ess.users.password_update.btn_label\")\n    } = props;\n\n    // State to manage dialog open/close\n    const [isDialogOpen, setIsDialogOpen] = useState(false);\n    const [newPassword, setNewPassword] = useState('');\n\n    if (!record) return null;\n\n    // Function to handle button click\n    const handleButtonClick = (e: React.MouseEvent) => {\n        e.stopPropagation();\n        setIsDialogOpen(true); // Open the dialog\n    };\n\n    // Function to handle form submission\n    const handleFormSubmit = (e: any) => {\n        e.stopPropagation();\n\n        if (!newPassword)\n            return;\n\n        dataProvider.updatePassword({\n            user: record.id as number,\n            password: newPassword\n        })\n\t\t\t.then((res) => {\n                setIsDialogOpen(false)\n                notify(translate(\"ess.users.password_update.updated\")) \n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.error(err);\n                notify(translate(\"ess.users.password_update.updated_error\")) \n\t\t\t});\n    };\n\n    return (\n        <>\n            <Button\n                label={label}\n                onClick={handleButtonClick}\n            >\n                {icon}\n            </Button>\n\n            {/* Dialog for password update */}\n            <Dialog onClick={(e:any) => {\n                e.stopPropagation();\n            }} open={isDialogOpen} onClose={(e:any) => {\n                e.stopPropagation();\n\n                setIsDialogOpen(false)\n            }}>\n                <DialogTitle>{translate(\"ess.users.password_update.btn_label\")}</DialogTitle>\n                <DialogContent>\n\n                    <SimpleForm \n                    toolbar={\n                        <Toolbar>\n                            <SaveButton\n                                onClick={handleFormSubmit}\n                                label=\"Save\"\n                            />\n\n                            <IconButton sx={{ marginLeft: \"auto\" }} aria-label=\"cancel\" onClick={(e: any) => {\n                                e.stopPropagation();\n                                setIsDialogOpen(false)\n                            }}>\n                                <CloseIcon />\n                            </IconButton>\n                        </Toolbar>}\n                    >\n                    {/* Form for password update */}\n                        <TextInput \n                            source=\"username\"\n                            label=\"Username\"\n                            fullWidth\n                            defaultValue={record.username}\n                            disabled\n                        />\n                        <TextInput\n                            source=\"password\"\n                            label={translate(\"ess.users.password_update.field_label\")}\n                            type=\"password\"\n                            fullWidth\n                            value={newPassword}\n                            validate={required()}\n                            onChange={(e) => setNewPassword(e.target.value)}\n                            autoFocus\n                        />\n                    </SimpleForm>\n                 </DialogContent>\n            </Dialog>\n        </>\n    );\n};\n","/* eslint-disable import/no-anonymous-default-export */\nimport { UserList } from './UserList';\nimport { UserEdit } from './UserEdit';\nimport { UserCreate } from './UserCreate';\n\nexport default {\n    list: UserList,\n    create: UserCreate,\n    edit: UserEdit\n};","import { CloneButton, Datagrid, EditButton, List, TextField } from 'react-admin';\nimport { PasswordUpdateBtn } from '../components/PasswordUpdateBtn';\n\n\nexport const UserList = () => (\n    <List>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"id\" />\n            <TextField source=\"username\" />\n            <TextField source=\"email\" />\n            <EditButton />\n            <CloneButton />\n            <PasswordUpdateBtn />\n        </Datagrid>\n    </List>\n);","import React from 'react';\nimport { Create, SimpleForm, TextInput, required, PasswordInput } from 'react-admin';\n\nexport const UserCreate = () => (\n    <Create redirect=\"list\">\n        <SimpleForm>\n            <TextInput source=\"username\" validate={[required()]}  label=\"username\" />\n            <TextInput source=\"email\" validate={[required()]}  label=\"Email\" />\n            <PasswordInput source=\"password\" label=\"Password\" validate={[required()]} />\n        </SimpleForm>\n    </Create>\n);","import React from 'react';\nimport { SimpleForm, TextInput, Edit } from 'react-admin';\n\nexport const UserEdit = () => (\n    <Edit redirect=\"list\">\n        <SimpleForm>\n            <TextInput disabled source=\"id\" />\n            <TextInput disabled source=\"username\" />\n            <TextInput source=\"email\" />\n        </SimpleForm>\n    </Edit>\n);","import React from 'react';\nimport { Admin, CustomRoutes, Resource } from \"react-admin\";\n\nimport polyglotI18nProvider from 'ra-i18n-polyglot';\nimport englishMessages from './i18n/en';\nimport italianMessages from './i18n/it';\n\nimport { Route } from \"react-router-dom\";\nimport {theme} from './theme';\nimport Layout  from './Layout';\nimport { dataProvider } from './dataProvider';\nimport { authProvider } from './authProvider';\n\nimport EmployeeSummaryList from './views/eventsummary';\nimport CalendarView from './views/calendar';\n\nimport employees from './employees';\nimport customers from './customers';\nimport users from './users';\n\nconst i18nProvider = polyglotI18nProvider(locale => {\n    if (locale === 'it') {\n        return italianMessages;\n    }\n\n    // Always fallback on english\n    return englishMessages;\n}, 'en');\n\nconst App = () => (\n  <Admin \n    dataProvider={dataProvider} \n    authProvider={authProvider}\n    theme={theme} \n    layout={Layout}\n    i18nProvider={i18nProvider}\n  >\n    <Resource name=\"employee\" {...employees} />\n    <Resource name=\"customer\" {...customers}/>\n    <Resource name=\"user\" {...users} />\n      <CustomRoutes>\n            <Route path=\"/calendar\" element={<CalendarView />}/>\n            <Route path=\"/summary\" element={<EmployeeSummaryList />}/>\n        </CustomRoutes>\n        \n  </Admin>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as dotenv from 'dotenv';\n\ndotenv.config();\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n      <App />\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}